ARM GAS  /tmp/ccXTKjLx.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_spi.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SPI_WaitFlagStateUntilTimeout,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.code	16
  19              		.thumb_func
  20              		.fpu softvfp
  22              	SPI_WaitFlagStateUntilTimeout:
  23              	.LFB87:
  24              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @file    stm32f0xx_hal_spi.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief   SPI HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *          functionalities of the Serial Peripheral Interface (SPI) peripheral:
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           + IO operation functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           + Peripheral State functions
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   @verbatim
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   ==============================================================================
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   ==============================================================================
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     [..]
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       The SPI HAL driver can be used as follows:
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (#) Declare a SPI_HandleTypeDef handle structure, for example:
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           SPI_HandleTypeDef  hspi;
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (#)Initialize the SPI low level resources by implementing the HAL_SPI_MspInit() API:
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           (##) Enable the SPIx interface clock
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           (##) SPI pins configuration
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****               (+++) Enable the clock for the SPI GPIOs
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****               (+++) Configure these SPI pins as alternate function push-pull
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           (##) NVIC configuration if you need to use interrupt process
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****               (+++) Configure the SPIx interrupt priority
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****               (+++) Enable the NVIC SPI IRQ handle
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           (##) DMA Configuration if you need to use DMA process
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****               (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive Stream
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****               (+++) Enable the DMAx clock
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****               (+++) Configure the DMA handle parameters
ARM GAS  /tmp/ccXTKjLx.s 			page 2


  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****               (+++) Configure the DMA Tx or Rx Stream/Channel
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****               (+++) Associate the initialized hdma_tx(or _rx)  handle to the hspi DMA Tx or Rx hand
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****               (+++) Configure the priority and enable the NVIC for the transfer complete interrupt 
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (#) Program the Mode, BidirectionalMode , Data size, Baudrate Prescaler, NSS
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           management, Clock polarity and phase, FirstBit and CRC configuration in the hspi Init str
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (#) Initialize the SPI registers by calling the HAL_SPI_Init() API:
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****               by calling the customized HAL_SPI_MspInit() API.
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****      [..]
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        Circular mode restriction:
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (#) The DMA circular mode cannot be used when the SPI is configured in these modes:
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           (##) Master 2Lines RxOnly
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           (##) Master 1Line Rx
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (#) The CRC feature is not managed when the DMA circular mode is enabled
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (#) When the SPI DMA Pause/Stop features are used, we must use the following APIs
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           the HAL_SPI_DMAPause()/ HAL_SPI_DMAStop() only under the SPI callbacks
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****      [..]
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        Master Receive mode restriction:
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (#) In Master unidirectional receive-only mode (MSTR =1, BIDIMODE=0, RXONLY=1) or
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           bidirectional receive mode (MSTR=1, BIDIMODE=1, BIDIOE=0), to ensure that the SPI
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           does not initiate a new transfer the following procedure has to be respected:
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           (##) HAL_SPI_DeInit()
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           (##) HAL_SPI_Init()
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****      [..]
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        Data buffer address alignment restriction:
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (#) In case more than 1 byte is requested to be transferred, the HAL SPI uses 16-bit access f
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           But there is no support for unaligned accesses on the Cortex-M0 processor.
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           So, if the user wants to transfer more than 1 byte, it shall ensure that 16-bit aligned a
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           (##) pData parameter in HAL_SPI_Transmit(), HAL_SPI_Transmit_IT(), HAL_SPI_Receive() and 
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           (##) pTxData and pRxData parameters in HAL_SPI_TransmitReceive() and HAL_SPI_TransmitRece
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (#) There is no such restriction when going through DMA by using HAL_SPI_Transmit_DMA(), HAL_
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           and HAL_SPI_TransmitReceive_DMA().
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****      [..]
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        Callback registration:
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (#) The compilation flag USE_HAL_SPI_REGISTER_CALLBACKS when set to 1U
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           allows the user to configure dynamically the driver callbacks.
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           Use Functions HAL_SPI_RegisterCallback() to register an interrupt callback.
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           Function HAL_SPI_RegisterCallback() allows to register following callbacks:
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) TxCpltCallback        : SPI Tx Completed callback
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) RxCpltCallback        : SPI Rx Completed callback
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) TxRxCpltCallback      : SPI TxRx Completed callback
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) TxHalfCpltCallback    : SPI Tx Half Completed callback
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) RxHalfCpltCallback    : SPI Rx Half Completed callback
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) ErrorCallback         : SPI Error callback
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) AbortCpltCallback     : SPI Abort callback
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) MspInitCallback       : SPI Msp Init callback
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) MspDeInitCallback     : SPI Msp DeInit callback
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           This function takes as parameters the HAL peripheral handle, the Callback ID
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           and a pointer to the user callback function.
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (#) Use function HAL_SPI_UnRegisterCallback to reset a callback to the default
ARM GAS  /tmp/ccXTKjLx.s 			page 3


  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           weak function.
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           HAL_SPI_UnRegisterCallback takes as parameters the HAL peripheral handle,
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           and the Callback ID.
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           This function allows to reset following callbacks:
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) TxCpltCallback        : SPI Tx Completed callback
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) RxCpltCallback        : SPI Rx Completed callback
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) TxRxCpltCallback      : SPI TxRx Completed callback
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) TxHalfCpltCallback    : SPI Tx Half Completed callback
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) RxHalfCpltCallback    : SPI Rx Half Completed callback
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) ErrorCallback         : SPI Error callback
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) AbortCpltCallback     : SPI Abort callback
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) MspInitCallback       : SPI Msp Init callback
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) MspDeInitCallback     : SPI Msp DeInit callback
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        [..]
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        By default, after the HAL_SPI_Init() and when the state is HAL_SPI_STATE_RESET
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        all callbacks are set to the corresponding weak functions:
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        examples HAL_SPI_MasterTxCpltCallback(), HAL_SPI_MasterRxCpltCallback().
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        Exception done for MspInit and MspDeInit functions that are
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        reset to the legacy weak functions in the HAL_SPI_Init()/ HAL_SPI_DeInit() only when
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        these callbacks are null (not registered beforehand).
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        If MspInit or MspDeInit are not null, the HAL_SPI_Init()/ HAL_SPI_DeInit()
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        [..]
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        Callbacks can be registered/unregistered in HAL_SPI_STATE_READY state only.
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        Exception done MspInit/MspDeInit functions that can be registered/unregistered
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        in HAL_SPI_STATE_READY or HAL_SPI_STATE_RESET state,
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        Then, the user first registers the MspInit/MspDeInit user callbacks
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        using HAL_SPI_RegisterCallback() before calling HAL_SPI_DeInit()
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        or HAL_SPI_Init() function.
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        [..]
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        When the compilation define USE_HAL_PPP_REGISTER_CALLBACKS is set to 0 or
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        not defined, the callback registering feature is not available
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        and weak (surcharged) callbacks are used.
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****      [..]
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        Using the HAL it is not possible to reach all supported SPI frequency with the different SPI
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        the following table resume the max SPI frequency reached with data size 8bits/16bits,
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****          according to frequency of the APBx Peripheral Clock (fPCLK) used by the SPI instance.
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   @endverbatim
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   Additional table :
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        DataSize = SPI_DATASIZE_8BIT:
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        | Process | Tranfert mode  |---------------------|----------------------|-------------------
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |===========================================================================================
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/4  | Fpclk/8  |    NA     |    NA    |    NA     |   NA  
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/16 |    NA     |    NA    |    NA     |   NA  
ARM GAS  /tmp/ccXTKjLx.s 			page 4


 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |     Polling    | Fpclk/4  | Fpclk/8  | Fpclk/16  | Fpclk/8  | Fpclk/8   | Fpclk/
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/8  | Fpclk/16 | Fpclk/8   | Fpclk/8  | Fpclk/8   | Fpclk/
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |       DMA      | Fpclk/4  | Fpclk/2  | Fpclk/2   | Fpclk/16 | Fpclk/2   | Fpclk/
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |     Polling    | Fpclk/8  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/16  | Fpclk/
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        DataSize = SPI_DATASIZE_16BIT:
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        | Process | Tranfert mode  |---------------------|----------------------|-------------------
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |===========================================================================================
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/4  | Fpclk/8  |    NA     |    NA    |    NA     |   NA  
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/16 |    NA     |    NA    |    NA     |   NA  
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |     Polling    | Fpclk/4  | Fpclk/8  | Fpclk/16  | Fpclk/8  | Fpclk/8   | Fpclk/
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/8  | Fpclk/16 | Fpclk/8   | Fpclk/8  | Fpclk/8   | Fpclk/
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |       DMA      | Fpclk/4  | Fpclk/2  | Fpclk/2   | Fpclk/16 | Fpclk/2   | Fpclk/
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |     Polling    | Fpclk/8  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/16  | Fpclk/
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        @note The max SPI frequency depend on SPI data size (4bits, 5bits,..., 8bits,...15bits, 16bi
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****              SPI mode(2 Lines fullduplex, 2 lines RxOnly, 1 line TX/RX) and Process mode (Polling, 
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        @note
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (#) TX/RX processes are HAL_SPI_TransmitReceive(), HAL_SPI_TransmitReceive_IT() and HAL
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (#) RX processes are HAL_SPI_Receive(), HAL_SPI_Receive_IT() and HAL_SPI_Receive_DMA()
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (#) TX processes are HAL_SPI_Transmit(), HAL_SPI_Transmit_IT() and HAL_SPI_Transmit_DMA
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   ******************************************************************************
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @attention
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * All rights reserved.</center></h2>
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * the "License"; You may not use this file except in compliance with the
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * License. You may obtain a copy of the License at:
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *                        opensource.org/licenses/BSD-3-Clause
ARM GAS  /tmp/ccXTKjLx.s 			page 5


 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   ******************************************************************************
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /* Includes ------------------------------------------------------------------*/
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #include "stm32f0xx_hal.h"
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /** @addtogroup STM32F0xx_HAL_Driver
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @{
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /** @defgroup SPI SPI
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief SPI HAL module driver
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @{
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #ifdef HAL_SPI_MODULE_ENABLED
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /* Private typedef -----------------------------------------------------------*/
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /* Private defines -----------------------------------------------------------*/
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /** @defgroup SPI_Private_Constants SPI Private Constants
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @{
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #define SPI_DEFAULT_TIMEOUT 100U
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @}
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /* Private macros ------------------------------------------------------------*/
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /* Private variables ---------------------------------------------------------*/
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /* Private function prototypes -----------------------------------------------*/
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /** @defgroup SPI_Private_Functions SPI Private Functions
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @{
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma);
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma);
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma);
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart);
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart);
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
ARM GAS  /tmp/ccXTKjLx.s 			page 6


 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi);
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi);
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi);
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi);
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi);
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t T
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @}
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /* Exported functions --------------------------------------------------------*/
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions SPI Exported Functions
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @{
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group1 Initialization and de-initialization functions
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *  @brief    Initialization and Configuration functions
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** @verbatim
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****  ===============================================================================
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****               ##### Initialization and de-initialization functions #####
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****  ===============================================================================
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           de-initialize the SPIx peripheral:
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (+) User must implement HAL_SPI_MspInit() function in which he configures
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (+) Call the function HAL_SPI_Init() to configure the selected device with
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           the selected configuration:
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (++) Mode
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (++) Direction
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (++) Data Size
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (++) Clock Polarity and Phase
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (++) NSS Management
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (++) BaudRate Prescaler
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (++) FirstBit
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (++) TIMode
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (++) CRC Calculation
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (++) CRC Polynomial if CRC enabled
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (++) CRC Length, used only with Data8 and Data16
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (++) FIFO reception threshold
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (+) Call the function HAL_SPI_DeInit() to restore the default configuration
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           of the selected SPIx peripheral.
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** @endverbatim
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @{
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Initialize the SPI according to the specified parameters
ARM GAS  /tmp/ccXTKjLx.s 			page 7


 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         in the SPI_InitTypeDef and initialize the associated handle.
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t frxth;
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check the SPI handle allocation */
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi == NULL)
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_ERROR;
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check the parameters */
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_MODE(hspi->Init.Mode));
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION(hspi->Init.Direction));
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_NSS(hspi->Init.NSS));
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_NSSP(hspi->Init.NSSPMode));
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_CRC_CALCULATION(hspi->Init.CRCCalculation));
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_CRC_LENGTH(hspi->Init.CRCLength));
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_RESET)
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Allocate lock resource and initialize it */
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->Lock = HAL_UNLOCKED;
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Init the SPI Callback settings */
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxCpltCallback       = HAL_SPI_TxCpltCallback;       /* Legacy weak TxCpltCallback       
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxCpltCallback       = HAL_SPI_RxCpltCallback;       /* Legacy weak RxCpltCallback       
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxRxCpltCallback     = HAL_SPI_TxRxCpltCallback;     /* Legacy weak TxRxCpltCallback     
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxHalfCpltCallback   = HAL_SPI_TxHalfCpltCallback;   /* Legacy weak TxHalfCpltCallback   
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxHalfCpltCallback   = HAL_SPI_RxHalfCpltCallback;   /* Legacy weak RxHalfCpltCallback   
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallback 
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCallback        = HAL_SPI_ErrorCallback;        /* Legacy weak ErrorCallback        
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->AbortCpltCallback    = HAL_SPI_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
ARM GAS  /tmp/ccXTKjLx.s 			page 8


 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->MspInitCallback == NULL)
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->MspInitCallback = HAL_SPI_MspInit; /* Legacy weak MspInit  */
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->MspInitCallback(hspi);
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     HAL_SPI_MspInit(hspi);
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable the selected SPI peripheral */
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Align by default the rs fifo threshold on the data size */
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     frxth = SPI_RXFIFO_THRESHOLD_HF;
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     frxth = SPI_RXFIFO_THRESHOLD_QF;
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* CRC calculation is valid only for 16Bit and 8 Bit */
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* CRC must be disabled */
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Align the CRC Length on the data size */
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCLength == SPI_CRC_LENGTH_DATASIZE)
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* CRC Length aligned on the data size : value set by default */
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->Init.CRCLength = SPI_CRC_LENGTH_16BIT;
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     else
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->Init.CRCLength = SPI_CRC_LENGTH_8BIT;
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   Communication speed, First bit and CRC calculation state */
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction |
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                   hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & 
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                   hspi->Init.BaudRatePrescaler | hspi->Init.FirstBit  | hspi->Init.
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Configure : CRC Length */
ARM GAS  /tmp/ccXTKjLx.s 			page 9


 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT)
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->Instance->CR1 |= SPI_CR1_CRCL;
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Configure : NSS management, TI Mode, NSS Pulse, Data size and Rx Fifo threshold */
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode |
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                   hspi->Init.NSSPMode | hspi->Init.DataSize) | frxth);
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /*---------------------------- SPIx CRCPOLY Configuration ------------------*/
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Configure : CRC Polynomial */
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     WRITE_REG(hspi->Instance->CRCPR, hspi->Init.CRCPolynomial);
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if defined(SPI_I2SCFGR_I2SMOD)
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return HAL_OK;
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  De-Initialize the SPI peripheral.
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DeInit(SPI_HandleTypeDef *hspi)
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check the SPI handle allocation */
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi == NULL)
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_ERROR;
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check SPI Instance parameter */
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable the SPI Peripheral Clock */
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->MspDeInitCallback == NULL)
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->MspDeInitCallback = HAL_SPI_MspDeInit; /* Legacy weak MspDeInit  */
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
ARM GAS  /tmp/ccXTKjLx.s 			page 10


 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->MspDeInitCallback(hspi);
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_MspDeInit(hspi);
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Release Lock */
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return HAL_OK;
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Initialize the SPI MSP.
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** __weak void HAL_SPI_MspInit(SPI_HandleTypeDef *hspi)
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   UNUSED(hspi);
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             the HAL_SPI_MspInit should be implemented in the user file
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****    */
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  De-Initialize the SPI MSP.
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** __weak void HAL_SPI_MspDeInit(SPI_HandleTypeDef *hspi)
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   UNUSED(hspi);
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             the HAL_SPI_MspDeInit should be implemented in the user file
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****    */
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Register a User SPI Callback
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         To be used instead of the weak predefined callback
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be registered
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pCallback pointer to the Callback function
ARM GAS  /tmp/ccXTKjLx.s 			page 11


 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_RegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Callb
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                            pSPI_CallbackTypeDef pCallback)
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (pCallback == NULL)
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Update the error code */
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode |= HAL_SPI_ERROR_INVALID_CALLBACK;
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_ERROR;
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process locked */
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     switch (CallbackID)
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxCpltCallback = pCallback;
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxCpltCallback = pCallback;
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxRxCpltCallback = pCallback;
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxHalfCpltCallback = pCallback;
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxHalfCpltCallback = pCallback;
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = pCallback;
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCallback = pCallback;
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->AbortCpltCallback = pCallback;
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
ARM GAS  /tmp/ccXTKjLx.s 			page 12


 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       default :
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Update the error code */
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Return error status */
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         status =  HAL_ERROR;
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     switch (CallbackID)
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       default :
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Update the error code */
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Return error status */
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         status =  HAL_ERROR;
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Update the error code */
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Return error status */
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     status =  HAL_ERROR;
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Release Lock */
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return status;
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Unregister an SPI Callback
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         SPI callback is redirected to the weak predefined callback
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be unregistered
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_UnRegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Cal
ARM GAS  /tmp/ccXTKjLx.s 			page 13


 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process locked */
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     switch (CallbackID)
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxCpltCallback = HAL_SPI_TxCpltCallback;             /* Legacy weak TxCpltCallback   
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxCpltCallback = HAL_SPI_RxCpltCallback;             /* Legacy weak RxCpltCallback   
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxRxCpltCallback = HAL_SPI_TxRxCpltCallback;         /* Legacy weak TxRxCpltCallback 
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxHalfCpltCallback = HAL_SPI_TxHalfCpltCallback;     /* Legacy weak TxHalfCpltCallbac
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxHalfCpltCallback = HAL_SPI_RxHalfCpltCallback;     /* Legacy weak RxHalfCpltCallbac
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallb
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCallback = HAL_SPI_ErrorCallback;               /* Legacy weak ErrorCallback    
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->AbortCpltCallback = HAL_SPI_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       default :
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Update the error code */
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Return error status */
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         status =  HAL_ERROR;
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
ARM GAS  /tmp/ccXTKjLx.s 			page 14


 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     switch (CallbackID)
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       default :
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Update the error code */
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Return error status */
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         status =  HAL_ERROR;
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Update the error code */
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Return error status */
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     status =  HAL_ERROR;
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Release Lock */
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return status;
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @}
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group2 IO operation functions
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *  @brief   Data transfers functions
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** @verbatim
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   ==============================================================================
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                       ##### IO operation functions #####
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****  ===============================================================================
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****  [..]
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     This subsection provides a set of functions allowing to manage the SPI
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     data transfers.
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     [..] The SPI supports master and slave mode :
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     (#) There are two modes of transfer:
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        (++) Blocking mode: The communication is performed in polling mode.
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             The HAL status of all data processing is returned by the same function
ARM GAS  /tmp/ccXTKjLx.s 			page 15


 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             after finishing transfer.
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        (++) No-Blocking mode: The communication is performed using Interrupts
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             or DMA, These APIs return the HAL status.
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             The end of the data processing will be indicated through the
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             dedicated SPI IRQ when using Interrupt mode or the DMA IRQ when
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             using DMA mode.
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             The HAL_SPI_TxCpltCallback(), HAL_SPI_RxCpltCallback() and HAL_SPI_TxRxCpltCallback() u
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             will be executed respectively at the end of the transmit or Receive process
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             The HAL_SPI_ErrorCallback()user callback will be executed when a communication error is
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     (#) APIs provided for these 2 transfer modes (Blocking mode or Non blocking mode using either I
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         exist for 1Line (simplex) and 2Lines (full duplex) modes.
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** @endverbatim
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @{
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Transmit an amount of data in blocking mode.
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pData pointer to data buffer
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Size amount of data to be sent
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Timeout Timeout duration
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint16_t initial_TxXferCount;
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* in this case, 16-bit access is performed on Data
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        So, check Data is 16-bit aligned address */
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_16BIT_ALIGNED_ADDRESS(pData));
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check Direction parameter */
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Locked */
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tickstart = HAL_GetTick();
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   initial_TxXferCount = Size;
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_BUSY;
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccXTKjLx.s 			page 16


 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the transaction information */
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /*Init field not used in handle to zero */
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxISR       = NULL;
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Configure communication direction : 1Line */
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Reset CRC Calculation */
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Enable SPI peripheral */
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->TxXferCount--;
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Transmit data in 16 Bit mode */
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount--;
ARM GAS  /tmp/ccXTKjLx.s 			page 17


 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Timeout management */
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           goto error;
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (hspi->TxXferCount > 1U)
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* write on the data register in packing mode */
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount -= 2U;
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pTxBuffPtr ++;
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount--;
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if (hspi->TxXferCount > 1U)
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           /* write on the data register in packing mode */
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         else
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->pTxBuffPtr++;
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->TxXferCount--;
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Timeout management */
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           goto error;
ARM GAS  /tmp/ccXTKjLx.s 			page 18


 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable CRC Transmission */
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check the end of the transaction */
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** error:
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Unlocked */
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Receive an amount of data in blocking mode.
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pData pointer to data buffer
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Size amount of data to be received
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Timeout Timeout duration
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t 
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* in this case, 16-bit access is performed on Data
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        So, check Data is 16-bit aligned address */
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_16BIT_ALIGNED_ADDRESS(pData));
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
ARM GAS  /tmp/ccXTKjLx.s 			page 19


1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Locked */
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tickstart = HAL_GetTick();
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the transaction information */
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = Size;
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /*Init field not used in handle to zero */
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxISR       = NULL;
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Reset CRC Calculation */
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* this is done to handle the CRCNEXT before the latest data */
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxXferCount--;
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the Rx Fifo threshold */
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 16bit */
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccXTKjLx.s 			page 20


1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8bit */
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Configure communication direction: 1Line */
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Enable SPI peripheral */
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Transfer loop */
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Check the RXNE flag */
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* read the received data */
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount--;
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Timeout management */
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           goto error;
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Transfer loop */
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Check the RXNE flag */
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount--;
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Timeout management */
ARM GAS  /tmp/ccXTKjLx.s 			page 21


1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           goto error;
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Handle the CRC Transmission */
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* freeze the CRC before the latest data */
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Read the latest data */
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* the latest data has not been received */
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       goto error;
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Receive last data in 16 Bit mode */
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Receive last data in 8 Bit mode */
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     else
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Wait the CRC data */
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       goto error;
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Read CRC to Flush DR and RXNE flag */
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Read 16bit CRC */
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       READ_REG(hspi->Instance->DR);
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     else
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Read 8bit CRC */
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if ((hspi->Init.DataSize == SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_16B
1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
ARM GAS  /tmp/ccXTKjLx.s 			page 22


1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           /* Error on the CRC reception */
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           goto error;
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Read 8bit CRC again in case of 16bit CRC in 8bit Data mode */
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check the end of the transaction */
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if CRC error occurred */
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** error :
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in blocking mode.
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Timeout Timeout duration
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxDa
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                           uint32_t Timeout)
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint16_t             initial_TxXferCount;
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint16_t             initial_RxXferCount;
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t             tmp_mode;
1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t             tickstart;
ARM GAS  /tmp/ccXTKjLx.s 			page 23


1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t             spi_cr1;
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t             spi_cr2;
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Variable used to alternate Rx and Tx during transfer */
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t             txallowed = 1U;
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* in this case, 16-bit access is performed on Data
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        So, check Data is 16-bit aligned address */
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_16BIT_ALIGNED_ADDRESS(pTxData));
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_16BIT_ALIGNED_ADDRESS(pRxData));
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check Direction parameter */
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Locked */
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tickstart = HAL_GetTick();
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init temporary variables */
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tmp_state           = hspi->State;
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   initial_TxXferCount = Size;
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   initial_RxXferCount = Size;
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   spi_cr1             = READ_REG(hspi->Instance->CR1);
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   spi_cr2             = READ_REG(hspi->Instance->CR2);
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the transaction information */
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
ARM GAS  /tmp/ccXTKjLx.s 			page 24


1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = Size;
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = Size;
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /*Init field not used in handle to zero */
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxISR       = NULL;
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Reset CRC Calculation */
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the Rx Fifo threshold */
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || (initial_RxXferCount > 1U))
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set fiforxthreshold according the reception data length: 16bit */
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
1315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set fiforxthreshold according the reception data length: 8bit */
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Enable SPI peripheral */
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Transmit and Receive data in 16 Bit mode */
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->TxXferCount--;
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
1337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Check TXE flag */
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount--;
1344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         txallowed = 0U;
ARM GAS  /tmp/ccXTKjLx.s 			page 25


1346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Enable CRC Transmission */
1349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
1351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           /* Set NSS Soft to received correctly the CRC on slave mode with NSS pulse activated */
1352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           if ((READ_BIT(spi_cr1, SPI_CR1_MSTR) == 0U) && (READ_BIT(spi_cr2, SPI_CR2_NSSP) == SPI_CR
1353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           {
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR1, SPI_CR1_SSM);
1355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           }
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Check RXNE flag */
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
1363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
1366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount--;
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         txallowed = 1U;
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         goto error;
1374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Transmit and Receive data in 8 Bit mode */
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (hspi->TxXferCount > 1U)
1383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount -= 2U;
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
1389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
1391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pTxBuffPtr++;
1392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount--;
1393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
1396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Check TXE flag */
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
1399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if (hspi->TxXferCount > 1U)
1401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
1402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
ARM GAS  /tmp/ccXTKjLx.s 			page 26


1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         else
1407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->pTxBuffPtr++;
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->TxXferCount--;
1411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         txallowed = 0U;
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Enable CRC Transmission */
1417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
1419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           /* Set NSS Soft to received correctly the CRC on slave mode with NSS pulse activated */
1420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           if ((READ_BIT(spi_cr1, SPI_CR1_MSTR) == 0U) && (READ_BIT(spi_cr2, SPI_CR2_NSSP) == SPI_CR
1421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           {
1422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR1, SPI_CR1_SSM);
1423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           }
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
1426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Wait until RXNE flag is reset */
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
1431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if (hspi->RxXferCount > 1U)
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint16_t);
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->RxXferCount -= 2U;
1437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           if (hspi->RxXferCount <= 1U)
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           {
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             /* Set RX Fifo threshold before to switch on 8 bit data size */
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           }
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
1443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         else
1444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
1445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->pRxBuffPtr++;
1447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->RxXferCount--;
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         txallowed = 1U;
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout =
1453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         goto error;
1456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
ARM GAS  /tmp/ccXTKjLx.s 			page 27


1460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Read CRC from DR to close CRC calculation process */
1462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Wait until TXE flag */
1465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Error on the CRC reception */
1468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       goto error;
1471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Read CRC */
1473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Read 16bit CRC */
1476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       READ_REG(hspi->Instance->DR);
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     else
1479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Read 8bit CRC */
1481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
1482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT)
1484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
1487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           /* Error on the CRC reception */
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           goto error;
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
1492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Read 8bit CRC again in case of 16bit CRC in 8bit Data mode */
1493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if CRC error occurred */
1499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
1500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Clear CRC Flag */
1503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check the end of the transaction */
1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
1511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
1514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** error :
ARM GAS  /tmp/ccXTKjLx.s 			page 28


1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
1521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
1523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with Interrupt.
1524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
1526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pData pointer to data buffer
1527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Size amount of data to be sent
1528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
1530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (
1535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* in this case, 16-bit access is performed on Data
1537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        So, check Data is 16-bit aligned address */
1538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_16BIT_ALIGNED_ADDRESS(pData));
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check Direction parameter */
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Locked */
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the transaction information */
1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = Size;
1565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init field not used in handle to zero */
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
1568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxISR       = NULL;
1571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the function for IT treatment */
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
ARM GAS  /tmp/ccXTKjLx.s 			page 29


1574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_16BIT;
1576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_8BIT;
1580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
1586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Reset CRC Calculation */
1590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
1598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Enable SPI peripheral */
1604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** error :
1608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
1610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
1611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
1613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with Interrupt.
1614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
1616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pData pointer to data buffer
1617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Size amount of data to be sent
1618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
1619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
1620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
1622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (
1625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* in this case, 16-bit access is performed on Data
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        So, check Data is 16-bit aligned address */
1628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_16BIT_ALIGNED_ADDRESS(pData));
1629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
ARM GAS  /tmp/ccXTKjLx.s 			page 30


1631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
1632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_IT(hspi, pData, pData, Size);
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Locked */
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the transaction information */
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = Size;
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init field not used in handle to zero */
1661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check the data size to adapt Rx threshold and the set the function for IT treatment */
1667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 16 bit */
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_16BIT;
1672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
1674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8 bit */
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_8BIT;
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Reset CRC Calculation */
ARM GAS  /tmp/ccXTKjLx.s 			page 31


1688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->CRCSize = 1U;
1691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT
1692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->CRCSize = 2U;
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->CRCSize = 0U;
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
1705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Note : The SPI must be enabled after unlocking current process
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             to avoid the risk of SPI interrupt handle execution before current
1708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             process unlock */
1709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Enable SPI peripheral */
1714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** error :
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Unlocked */
1719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
1721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
1722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
1724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with Interrupt.
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
1727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
1732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_IT(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pR
1733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t             tmp_mode;
1735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
1737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (
1739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* in this case, 16-bit access is performed on Data
1741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        So, check Data is 16-bit aligned address */
1742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_16BIT_ALIGNED_ADDRESS(pTxData));
1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_16BIT_ALIGNED_ADDRESS(pRxData));
1744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
ARM GAS  /tmp/ccXTKjLx.s 			page 32


1745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check Direction parameter */
1747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process locked */
1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init temporary variables */
1753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tmp_state           = hspi->State;
1754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
1757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the transaction information */
1776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = Size;
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = Size;
1783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the function for IT treatment */
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_16BIT;
1788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
1789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
1791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_8BIT;
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
1794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Reset CRC Calculation */
1798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->CRCSize = 1U;
1801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT
ARM GAS  /tmp/ccXTKjLx.s 			page 33


1802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->CRCSize = 2U;
1804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
1808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->CRCSize = 0U;
1810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if packing mode is enabled and if there is more than 2 data to receive */
1814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || (Size >= 2U))
1815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 16 bit */
1817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
1820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8 bit */
1822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable TXE, RXNE and ERR interrupt */
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
1827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Enable SPI peripheral */
1832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** error :
1836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Unlocked */
1837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
1839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
1840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
1842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with DMA.
1843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
1845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pData pointer to data buffer
1846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Size amount of data to be sent
1847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
1848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
1849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
1851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check tx dma handle */
1854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check Direction parameter */
1857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
ARM GAS  /tmp/ccXTKjLx.s 			page 34


1859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Locked */
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the transaction information */
1875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = Size;
1880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init field not used in handle to zero */
1882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
1883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
1884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxISR       = NULL;
1885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
1887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
1892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Reset CRC Calculation */
1896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the SPI TxDMA Half transfer complete callback */
1903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
1904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the SPI TxDMA transfer complete callback */
1906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
1907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the DMA error callback */
1909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback = SPI_DMAError;
1910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
1913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
1915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Packing mode is enabled only if the DMA setting is HALWORD */
ARM GAS  /tmp/ccXTKjLx.s 			page 35


1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->hdmatx->Init.MemDataAlignment == DMA_MDA
1917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Check the even/odd of the data size + crc if enabled */
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if ((hspi->TxXferCount & 0x1U) == 0U)
1920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
1922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U);
1923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     else
1925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
1927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
1928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel */
1932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
1933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                  hspi->TxXferCount))
1934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Update SPI error code */
1936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Enable SPI peripheral */
1947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
1952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable Tx DMA Request */
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
1955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** error :
1957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Unlocked */
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
1960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
1961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
1963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with DMA.
1964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @note   In case of MASTER mode and SPI_DIRECTION_2LINES direction, hdmatx shall be defined.
1965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
1967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pData pointer to data buffer
1968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pData Length must be Size + 1.
1969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Size amount of data to be sent
1970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
1971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
1972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
ARM GAS  /tmp/ccXTKjLx.s 			page 36


1973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
1974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check rx dma handle */
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
1978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
1980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Check tx dma handle */
1984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_DMA(hspi, pData, pData, Size);
1988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Locked */
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
2000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
2002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
2003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the transaction information */
2006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
2007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
2010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = Size;
2011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /*Init field not used in handle to zero */
2013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxISR       = NULL;
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
2015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
2017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Configure communication direction : 1Line */
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
2020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
2022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Reset CRC Calculation */
2026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
2029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
ARM GAS  /tmp/ccXTKjLx.s 			page 37


2030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if defined (STM32F030x6) || defined (STM32F030x8) || defined (STM32F031x6)|| defined (STM32F038xx)
2033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Packing mode management is enabled by the DMA settings */
2034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->hdmarx->Init.MemDataAlignment == DMA_MDA
2035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Restriction the DMA data received is not allowed in this mode */
2037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
2038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
2039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif
2041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
2043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
2044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 16bit */
2046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
2047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
2049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8bit */
2051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
2052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
2054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Set RX Fifo threshold according the reception data length: 16bit */
2056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
2057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if ((hspi->RxXferCount & 0x1U) == 0x0U)
2059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
2061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount = hspi->RxXferCount >> 1U;
2062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
2064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
2066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount = (hspi->RxXferCount >> 1U) + 1U;
2067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the SPI RxDMA Half transfer complete callback */
2072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
2073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the SPI Rx DMA transfer complete callback */
2075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
2076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the DMA error callback */
2078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
2079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
2081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
2082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
2084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
2085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                  hspi->RxXferCount))
2086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccXTKjLx.s 			page 38


2087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Update SPI error code */
2088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
2090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
2093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
2096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
2097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Enable SPI peripheral */
2099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
2100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
2103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
2104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable Rx DMA Request */
2106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
2107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** error:
2109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Unlocked */
2110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
2112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with DMA.
2116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
2118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
2119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
2120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pRxData Length must be Size + 1
2121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Size amount of data to be sent
2122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
2123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *p
2125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                               uint16_t Size)
2126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t             tmp_mode;
2128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
2129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
2130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check rx & tx dma handles */
2132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
2133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
2134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check Direction parameter */
2136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
2137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process locked */
2139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
2140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init temporary variables */
2142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tmp_state           = hspi->State;
2143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
ARM GAS  /tmp/ccXTKjLx.s 			page 39


2144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) ||
2146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
2147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_BUSY;
2149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
2150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
2155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
2156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
2159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
2160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
2162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the transaction information */
2165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
2166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
2167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = Size;
2169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
2170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = Size;
2172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init field not used in handle to zero */
2174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxISR       = NULL;
2175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
2176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Reset CRC Calculation */
2179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
2182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if defined (STM32F030x6) || defined (STM32F030x8) || defined (STM32F031x6) || defined (STM32F038xx
2186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Packing mode management is enabled by the DMA settings */
2187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->hdmarx->Init.MemDataAlignment == DMA_MDA
2188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Restriction the DMA data received is not allowed in this mode */
2190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
2191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
2192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif
2194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Reset the threshold bit */
2196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX | SPI_CR2_LDMARX);
2197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* The packing mode management is enabled by the DMA settings according the spi data size */
2199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
2200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccXTKjLx.s 			page 40


2201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set fiforxthreshold according the reception data length: 16bit */
2202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
2203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
2205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8bit */
2207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
2208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
2210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if ((hspi->TxXferSize & 0x1U) == 0x0U)
2212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
2214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount = hspi->TxXferCount >> 1U;
2215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
2217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
2219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
2220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
2224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Set RX Fifo threshold according the reception data length: 16bit */
2226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
2227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if ((hspi->RxXferCount & 0x1U) == 0x0U)
2229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
2231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount = hspi->RxXferCount >> 1U;
2232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
2234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
2236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount = (hspi->RxXferCount >> 1U) + 1U;
2237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if we are in Rx only or in Rx/Tx Mode and configure the DMA transfer complete callback *
2242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_RX)
2243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set the SPI Rx DMA Half transfer complete callback */
2245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
2246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
2247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
2249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set the SPI Tx/Rx DMA Half transfer complete callback */
2251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfTransmitReceiveCplt;
2252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
2253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the DMA error callback */
2256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
2257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
ARM GAS  /tmp/ccXTKjLx.s 			page 41


2258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
2259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
2260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
2262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
2263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                  hspi->RxXferCount))
2264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Update SPI error code */
2266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
2268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
2271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable Rx DMA Request */
2274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
2275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the SPI Tx DMA transfer complete callback as NULL because the communication closing
2277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   is performed in DMA reception complete callback  */
2278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = NULL;
2279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
2280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
2281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
2282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel  */
2284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
2285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                  hspi->TxXferCount))
2286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Update SPI error code */
2288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
2290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
2293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
2296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
2297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Enable SPI peripheral */
2299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
2300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
2302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
2303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable Tx DMA Request */
2305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
2306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** error :
2308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Unlocked */
2309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
2311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Abort ongoing transfer (blocking mode).
ARM GAS  /tmp/ccXTKjLx.s 			page 42


2315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi SPI handle.
2316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         This procedure performs following operations :
2319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
2320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
2322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           - Set handle State to READY
2323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
2324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
2325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort(SPI_HandleTypeDef *hspi)
2327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __IO uint32_t count;
2330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __IO uint32_t resetcount;
2331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Initialized local variable  */
2333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   errorcode = HAL_OK;
2334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
2335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   count = resetcount;
2336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
2338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
2339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
2341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
2342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
2344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     do
2346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (count == 0U)
2348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
2351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       count--;
2353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
2354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Reset Timeout Counter */
2355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     count = resetcount;
2356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
2359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
2361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     do
2363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (count == 0U)
2365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
2368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       count--;
2370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
2371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Reset Timeout Counter */
ARM GAS  /tmp/ccXTKjLx.s 			page 43


2372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     count = resetcount;
2373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel : use blocking DMA Abort API (no callback) */
2379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
2380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmatx) != HAL_OK)
2387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Disable Tx DMA Request */
2392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN));
2393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
2395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Disable SPI Peripheral */
2400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
2401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Empty the FRLVL fifo */
2403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT,
2404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel : use blocking DMA Abort API (no callback) */
2414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
2415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
2419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmarx) != HAL_OK)
2422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Disable peripheral */
2427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
2428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
ARM GAS  /tmp/ccXTKjLx.s 			page 44


2429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Control the BSY flag */
2430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick
2431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Empty the FRLVL fifo */
2436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT,
2437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Disable Rx DMA Request */
2442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXDMAEN));
2443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Reset Tx and Rx transfer counters */
2446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
2447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
2448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check error during Abort procedure */
2450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
2451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* return HAL_Error in case of error during Abort procedure */
2453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
2454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
2456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Reset errorCode */
2458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
2462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
2463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
2464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Restore hspi->state to ready */
2466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
2469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Abort ongoing transfer (Interrupt mode).
2473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi SPI handle.
2474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         This procedure performs following operations :
2477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
2478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           - Set handle State to READY
2481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           - At abort completion, call user abort complete callback
2482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
2485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
ARM GAS  /tmp/ccXTKjLx.s 			page 45


2486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort_IT(SPI_HandleTypeDef *hspi)
2487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t abortcplt ;
2490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __IO uint32_t count;
2491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __IO uint32_t resetcount;
2492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Initialized local variable  */
2494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   errorcode = HAL_OK;
2495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   abortcplt = 1U;
2496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
2497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   count = resetcount;
2498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
2500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
2501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Change Rx and Tx Irq Handler to Disable TXEIE, RXNEIE and ERRIE interrupts */
2503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
2504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
2506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     do
2508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (count == 0U)
2510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
2513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       count--;
2515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
2516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Reset Timeout Counter */
2517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     count = resetcount;
2518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
2521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
2523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     do
2525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (count == 0U)
2527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
2530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       count--;
2532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
2533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Reset Timeout Counter */
2534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     count = resetcount;
2535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to SPI Handle, DMA Abort complete callbacks sho
2538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****      before any call to DMA Abort functions */
2539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* DMA Tx Handle is valid */
2540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
2541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
ARM GAS  /tmp/ccXTKjLx.s 			page 46


2543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        Otherwise, set it to NULL */
2544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = SPI_DMATxAbortCallback;
2547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     else
2549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* DMA Rx Handle is valid */
2554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
2555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        Otherwise, set it to NULL */
2558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = SPI_DMARxAbortCallback;
2561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     else
2563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
2565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel */
2572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
2573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmatx) != HAL_OK)
2576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->hdmatx->XferAbortCallback = NULL;
2578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
2581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         abortcplt = 0U;
2583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel */
2590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
2591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmarx) !=  HAL_OK)
2594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->hdmarx->XferAbortCallback = NULL;
2596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
2599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
ARM GAS  /tmp/ccXTKjLx.s 			page 47


2600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         abortcplt = 0U;
2601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (abortcplt == 1U)
2606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Reset Tx and Rx transfer counters */
2608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Check error during Abort procedure */
2612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
2613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* return HAL_Error in case of error during Abort procedure */
2615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       errorcode = HAL_ERROR;
2616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     else
2618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Reset errorCode */
2620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Clear the Error flags in the SR register */
2624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
2625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_CLEAR_FREFLAG(hspi);
2626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Restore hspi->State to Ready */
2628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->AbortCpltCallback(hspi);
2633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
2634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     HAL_SPI_AbortCpltCallback(hspi);
2635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
2639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Pause the DMA Transfer.
2643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
2646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAPause(SPI_HandleTypeDef *hspi)
2648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Locked */
2650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
2651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Unlocked */
2656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
ARM GAS  /tmp/ccXTKjLx.s 			page 48


2657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return HAL_OK;
2659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Resume the DMA Transfer.
2663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
2666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAResume(SPI_HandleTypeDef *hspi)
2668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Locked */
2670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
2671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable the SPI DMA Tx & Rx requests */
2673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Unlocked */
2676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return HAL_OK;
2679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Stop the DMA Transfer.
2683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
2686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAStop(SPI_HandleTypeDef *hspi)
2688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
2690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
2691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****      to call the HAL SPI API under callbacks HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() o
2692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
2693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****      and the correspond call back is executed HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() 
2694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****      */
2695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Abort the SPI DMA tx Stream/Channel  */
2697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
2698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmatx))
2700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       errorcode = HAL_ERROR;
2703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Abort the SPI DMA rx Stream/Channel  */
2706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
2707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmarx))
2709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       errorcode = HAL_ERROR;
2712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
ARM GAS  /tmp/ccXTKjLx.s 			page 49


2714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
2719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Handle SPI interrupt request.
2723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
2726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
2728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
2730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
2731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* SPI in mode Receiver ----------------------------------------------------*/
2733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
2734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
2735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxISR(hspi);
2737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return;
2738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* SPI in mode Transmitter -------------------------------------------------*/
2741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE)
2742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxISR(hspi);
2744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return;
2745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* SPI in Error Treatment --------------------------------------------------*/
2748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) !=
2749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT
2750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* SPI Overrun error interrupt occurred ----------------------------------*/
2752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
2753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (hspi->State != HAL_SPI_STATE_BUSY_TX)
2755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
2757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
2758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
2760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
2762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         return;
2763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* SPI Mode Fault error interrupt occurred -------------------------------*/
2767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
2768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
2770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
ARM GAS  /tmp/ccXTKjLx.s 			page 50


2771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* SPI Frame error interrupt occurred ------------------------------------*/
2774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
2775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
2777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
2778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Disable all interrupts */
2783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
2784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
2786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
2787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)
2788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
2790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Abort the SPI DMA Rx channel */
2792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if (hspi->hdmarx != NULL)
2793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
2794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
2797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
2798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           {
2799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           }
2801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
2802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Abort the SPI DMA Tx channel */
2803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if (hspi->hdmatx != NULL)
2804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
2805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
2808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
2809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           {
2810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           }
2812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
2813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
2815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Call user error callback */
2817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCallback(hspi);
2819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
2820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         HAL_SPI_ErrorCallback(hspi);
2821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return;
2825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
ARM GAS  /tmp/ccXTKjLx.s 			page 51


2828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Tx Transfer completed callback.
2830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
2832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
2833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** __weak void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
2835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   UNUSED(hspi);
2838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             the HAL_SPI_TxCpltCallback should be implemented in the user file
2841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****    */
2842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Rx Transfer completed callback.
2846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
2848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
2849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** __weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
2851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   UNUSED(hspi);
2854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             the HAL_SPI_RxCpltCallback should be implemented in the user file
2857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****    */
2858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Tx and Rx Transfer completed callback.
2862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
2864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
2865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** __weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
2867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   UNUSED(hspi);
2870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             the HAL_SPI_TxRxCpltCallback should be implemented in the user file
2873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****    */
2874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Tx Half Transfer completed callback.
2878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
2880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
2881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** __weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccXTKjLx.s 			page 52


2885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   UNUSED(hspi);
2886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
2889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****    */
2890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Rx Half Transfer completed callback.
2894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
2896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
2897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** __weak void HAL_SPI_RxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   UNUSED(hspi);
2902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             the HAL_SPI_RxHalfCpltCallback() should be implemented in the user file
2905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****    */
2906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Tx and Rx Half Transfer callback.
2910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
2912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
2913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** __weak void HAL_SPI_TxRxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   UNUSED(hspi);
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             the HAL_SPI_TxRxHalfCpltCallback() should be implemented in the user file
2921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****    */
2922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  SPI error callback.
2926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
2928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
2929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** __weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
2931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   UNUSED(hspi);
2934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             the HAL_SPI_ErrorCallback should be implemented in the user file
2937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****    */
2938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
2939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             and user can use HAL_SPI_GetError() API to check the latest error occurred
2940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****    */
2941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
ARM GAS  /tmp/ccXTKjLx.s 			page 53


2942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  SPI Abort Complete callback.
2945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi SPI handle.
2946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
2947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** __weak void HAL_SPI_AbortCpltCallback(SPI_HandleTypeDef *hspi)
2949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   UNUSED(hspi);
2952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             the HAL_SPI_AbortCpltCallback can be implemented in the user file.
2955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****    */
2956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @}
2960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group3 Peripheral State and Errors functions
2963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief   SPI control functions
2964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *
2965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** @verbatim
2966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****  ===============================================================================
2967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                       ##### Peripheral State and Errors functions #####
2968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****  ===============================================================================
2969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     [..]
2970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     This subsection provides a set of functions allowing to control the SPI.
2971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****      (+) HAL_SPI_GetState() API can be helpful to check in run-time the state of the SPI peripheral
2972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****      (+) HAL_SPI_GetError() check in run-time Errors occurring during communication
2973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** @endverbatim
2974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @{
2975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Return the SPI handle state.
2979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
2981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval SPI state
2982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_SPI_StateTypeDef HAL_SPI_GetState(SPI_HandleTypeDef *hspi)
2984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Return SPI handle state */
2986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return hspi->State;
2987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Return the SPI error code.
2991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
2993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval SPI error code in bitmap format
2994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** uint32_t HAL_SPI_GetError(SPI_HandleTypeDef *hspi)
2996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Return SPI ErrorCode */
2998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return hspi->ErrorCode;
ARM GAS  /tmp/ccXTKjLx.s 			page 54


2999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @}
3003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @}
3007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /** @addtogroup SPI_Private_Functions
3010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief   Private functions
3011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @{
3012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  DMA SPI transmit process complete callback.
3016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
3024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
3026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tickstart = HAL_GetTick();
3027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* DMA Normal Mode */
3029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
3030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable ERR interrupt */
3032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
3033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable Tx DMA Request */
3035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
3036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Check the end of the transaction */
3038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Clear overrun flag in 2 Lines communication mode because received data is not read */
3044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
3045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
3047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxXferCount = 0U;
3050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
3051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
3053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Call user error callback */
3055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
ARM GAS  /tmp/ccXTKjLx.s 			page 55


3056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return;
3061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Call user Tx complete callback */
3064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxCpltCallback(hspi);
3066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_TxCpltCallback(hspi);
3068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  DMA SPI receive process complete callback.
3073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
3081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
3083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tickstart = HAL_GetTick();
3084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* DMA Normal Mode */
3086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
3087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable ERR interrupt */
3089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
3090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* CRC handling */
3093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Wait until RXNE flag */
3096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstart) !
3097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
3098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Error on the CRC reception */
3099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
3101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Read CRC */
3102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
3103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
3104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Read 16bit CRC */
3105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         READ_REG(hspi->Instance->DR);
3106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
3107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
3108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
3109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Read 8bit CRC */
3110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT)
ARM GAS  /tmp/ccXTKjLx.s 			page 56


3113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
3114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstar
3115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           {
3116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             /* Error on the CRC reception */
3117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           }
3119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           /* Read 8bit CRC again in case of 16bit CRC in 8bit Data mode */
3120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
3122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
3123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request (done by default to handle the case master rx direction 2 lines) *
3127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
3128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Check the end of the transaction */
3130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
3133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxXferCount = 0U;
3136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
3137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Check if CRC error occurred */
3140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
3141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
3148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Call user error callback */
3150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return;
3156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Call user Rx complete callback */
3159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxCpltCallback(hspi);
3161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_RxCpltCallback(hspi);
3163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  DMA SPI transmit receive process complete callback.
3168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
ARM GAS  /tmp/ccXTKjLx.s 			page 57


3170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma)
3173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
3176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
3178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tickstart = HAL_GetTick();
3179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* DMA Normal Mode */
3181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
3182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable ERR interrupt */
3184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
3185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* CRC handling */
3188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if ((hspi->Init.DataSize == SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_8BI
3191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
3192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_QUARTER_FULL, SPI_DEFAULT
3193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                           tickstart) != HAL_OK)
3194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
3195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           /* Error on the CRC reception */
3196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
3198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Read CRC to Flush DR and RXNE flag */
3199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
3201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
3202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
3203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_HALF_FULL, SPI_DEFAULT_TI
3204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
3205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           /* Error on the CRC reception */
3206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
3208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Read CRC to Flush DR and RXNE flag */
3209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         READ_REG(hspi->Instance->DR);
3210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
3211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Check the end of the transaction */
3215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request */
3221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
3222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxXferCount = 0U;
3224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxXferCount = 0U;
3225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
3226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
ARM GAS  /tmp/ccXTKjLx.s 			page 58


3227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Check if CRC error occurred */
3229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
3230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
3237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Call user error callback */
3239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return;
3245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Call user TxRx complete callback */
3248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxRxCpltCallback(hspi);
3250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_TxRxCpltCallback(hspi);
3252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  DMA SPI half transmit process complete callback.
3257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
3262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Call user Tx half complete callback */
3266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxHalfCpltCallback(hspi);
3268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_TxHalfCpltCallback(hspi);
3270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  DMA SPI half receive process complete callback
3275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma)
3280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Call user Rx half complete callback */
ARM GAS  /tmp/ccXTKjLx.s 			page 59


3284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxHalfCpltCallback(hspi);
3286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_RxHalfCpltCallback(hspi);
3288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  DMA SPI half transmit receive process complete callback.
3293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma)
3298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Call user TxRx half complete callback */
3302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxRxHalfCpltCallback(hspi);
3304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_TxRxHalfCpltCallback(hspi);
3306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  DMA SPI communication error callback.
3311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma)
3316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Stop the disable DMA transfer on SPI side */
3320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
3321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
3323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
3324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Call user error callback */
3325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
3327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
3329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  DMA SPI communication abort callback, when initiated by HAL services on Error
3334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hdma DMA handle.
3336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
ARM GAS  /tmp/ccXTKjLx.s 			page 60


3341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
3343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Call user error callback */
3345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
3347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
3349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  DMA SPI Tx communication abort callback, when initiated by user
3354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         Abort still ongoing for Rx DMA Handle.
3357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hdma DMA handle.
3358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
3365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable Tx DMA Request */
3367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
3368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
3370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
3372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable SPI Peripheral */
3375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
3376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Empty the FRLVL fifo */
3378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
3379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
3381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
3385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->hdmarx->XferAbortCallback != NULL)
3387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return;
3389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
3395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check no error during Abort procedure */
3397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
ARM GAS  /tmp/ccXTKjLx.s 			page 61


3398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Reset errorCode */
3400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
3401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
3405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
3406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
3409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Call user Abort complete callback */
3411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  DMA SPI Rx communication abort callback, when initiated by user
3420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         Abort still ongoing for Tx DMA Handle.
3423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hdma DMA handle.
3424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable SPI Peripheral */
3431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
3432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
3434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable Rx DMA Request */
3436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
3437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Control the BSY flag */
3439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) 
3440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
3442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Empty the FRLVL fifo */
3445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
3446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
3448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
3452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->hdmatx->XferAbortCallback != NULL)
3454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
ARM GAS  /tmp/ccXTKjLx.s 			page 62


3455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return;
3456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
3462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check no error during Abort procedure */
3464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
3465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Reset errorCode */
3467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
3468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
3472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
3473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
3476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Call user Abort complete callback */
3478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Receive data in packing mode */
3494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->RxXferCount > 1U)
3495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->pRxBuffPtr += sizeof(uint16_t);
3498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxXferCount -= 2U;
3499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->RxXferCount == 1U)
3500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Set RX Fifo threshold according the reception data length: 8bit */
3502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
3503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
3506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
3507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     *hspi->pRxBuffPtr = *((__IO uint8_t *)&hspi->Instance->DR);
3509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->pRxBuffPtr++;
3510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxXferCount--;
3511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
ARM GAS  /tmp/ccXTKjLx.s 			page 63


3512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check end of the reception */
3514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
3520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_8BITCRC;
3521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return;
3522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable RXNE  and ERR interrupt */
3526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Regsiter */
3545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->CRCSize--;
3548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check end of the reception */
3550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->CRCSize == 0U)
3551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable RXNE and ERR interrupt */
3553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Tx 8-bit handler for Transmit and Receive in Interrupt mode.
3565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
ARM GAS  /tmp/ccXTKjLx.s 			page 64


3569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Transmit data in packing Bit mode */
3572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->TxXferCount >= 2U)
3573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->pTxBuffPtr += sizeof(uint16_t);
3576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxXferCount -= 2U;
3577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
3579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
3580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
3582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->pTxBuffPtr++;
3583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxXferCount--;
3584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check the end of the transmission */
3587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Disable TXE interrupt */
3595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return;
3597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable TXE interrupt */
3601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
3604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Rx 16-bit handler for Transmit and Receive in Interrupt mode.
3612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
3619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
3621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount--;
3622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
ARM GAS  /tmp/ccXTKjLx.s 			page 65


3626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_16BITCRC;
3629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return;
3630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable RXNE interrupt */
3634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive for Transmit and Receive in Interrupt mode.
3646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Regsiter */
3653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
3654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable RXNE interrupt */
3656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_CloseRxTx_ISR(hspi);
3659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Tx 16-bit handler for Transmit and Receive in Interrupt mode.
3664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
3673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount--;
3674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable CRC Transmission */
3676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
ARM GAS  /tmp/ccXTKjLx.s 			page 66


3683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Disable TXE interrupt */
3684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return;
3686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable TXE interrupt */
3690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
3693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Manage the CRC 8-bit receive in Interrupt context.
3702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Register */
3709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->CRCSize--;
3712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->CRCSize == 0U)
3714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Manage the receive 8-bit in Interrupt context.
3722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *hspi->pRxBuffPtr = (*(__IO uint8_t *)&hspi->Instance->DR);
3729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr++;
3730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount--;
3731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable CRC Transmission */
3734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
ARM GAS  /tmp/ccXTKjLx.s 			page 67


3740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->RxISR =  SPI_RxISR_8BITCRC;
3746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return;
3747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive in Interrupt context.
3756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Register */
3763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
3764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
3769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Manage the 16-bit receive in Interrupt context.
3774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
3782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount--;
3783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable CRC Transmission */
3786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
ARM GAS  /tmp/ccXTKjLx.s 			page 68


3797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->RxISR = SPI_RxISR_16BITCRC;
3798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return;
3799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Handle the data 8-bit transmit in Interrupt mode.
3807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
3814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr++;
3815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount--;
3816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Enable CRC Transmission */
3823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
3827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Handle the data 16-bit transmit in Interrupt mode.
3832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
3841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount--;
3842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Enable CRC Transmission */
3849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
3853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
ARM GAS  /tmp/ccXTKjLx.s 			page 69


3854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Handle SPI Communication Timeout.
3858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *              the configuration information for SPI module.
3860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Flag SPI flag to check
3861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  State flag state to check
3862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Timeout Timeout duration
3863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Tickstart tick start value
3864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
3865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
3867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart)
3868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
  25              		.loc 1 3868 0
  26              		.cfi_startproc
  27              		@ args = 4, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              	.LVL0:
  30 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 3, -24
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 0500     		movs	r5, r0
  40 0004 0F00     		movs	r7, r1
  41 0006 1600     		movs	r6, r2
  42 0008 1C00     		movs	r4, r3
  43              	.LVL1:
  44              	.L3:
3869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
  45              		.loc 1 3869 0
  46 000a 2B68     		ldr	r3, [r5]
  47 000c 9B68     		ldr	r3, [r3, #8]
  48 000e 3A00     		movs	r2, r7
  49 0010 9A43     		bics	r2, r3
  50 0012 1300     		movs	r3, r2
  51 0014 5942     		rsbs	r1, r3, #0
  52 0016 5941     		adcs	r1, r1, r3
  53 0018 B142     		cmp	r1, r6
  54 001a 3BD0     		beq	.L10
3870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (Timeout != HAL_MAX_DELAY)
  55              		.loc 1 3871 0
  56 001c 631C     		adds	r3, r4, #1
  57 001e F4D0     		beq	.L3
3872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
  58              		.loc 1 3873 0
  59 0020 FFF7FEFF 		bl	HAL_GetTick
  60              	.LVL2:
  61 0024 069B     		ldr	r3, [sp, #24]
ARM GAS  /tmp/ccXTKjLx.s 			page 70


  62 0026 C01A     		subs	r0, r0, r3
  63 0028 8442     		cmp	r4, r0
  64 002a 01D9     		bls	.L4
  65              		.loc 1 3873 0 is_stmt 0 discriminator 1
  66 002c 002C     		cmp	r4, #0
  67 002e ECD1     		bne	.L3
  68              	.L4:
3874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
3875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Disable the SPI and reset the CRC: the CRC value should be cleared
3876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         on both master and slave sides in order to resynchronize the master
3877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         and slave for their respective CRC calculation */
3878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
3880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
  69              		.loc 1 3880 0 is_stmt 1
  70 0030 2A68     		ldr	r2, [r5]
  71 0032 5368     		ldr	r3, [r2, #4]
  72 0034 E021     		movs	r1, #224
  73 0036 8B43     		bics	r3, r1
  74 0038 5360     		str	r3, [r2, #4]
3881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
  75              		.loc 1 3882 0
  76 003a 8223     		movs	r3, #130
  77 003c 5B00     		lsls	r3, r3, #1
  78 003e 6A68     		ldr	r2, [r5, #4]
  79 0040 9A42     		cmp	r2, r3
  80 0042 0CD0     		beq	.L11
  81              	.L5:
3883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
3884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
3885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           /* Disable SPI peripheral */
3886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
3887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
3888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Reset CRC Calculation */
3890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  82              		.loc 1 3890 0
  83 0044 8023     		movs	r3, #128
  84 0046 9B01     		lsls	r3, r3, #6
  85 0048 AA6A     		ldr	r2, [r5, #40]
  86 004a 9A42     		cmp	r2, r3
  87 004c 16D0     		beq	.L12
  88              	.L7:
3891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
3892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           SPI_RESET_CRC(hspi);
3893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
3894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
  89              		.loc 1 3895 0
  90 004e 0122     		movs	r2, #1
  91 0050 5D23     		movs	r3, #93
  92 0052 EA54     		strb	r2, [r5, r3]
3896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Process Unlocked */
3898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
  93              		.loc 1 3898 0
ARM GAS  /tmp/ccXTKjLx.s 			page 71


  94 0054 0022     		movs	r2, #0
  95 0056 013B     		subs	r3, r3, #1
  96 0058 EA54     		strb	r2, [r5, r3]
3899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         return HAL_TIMEOUT;
  97              		.loc 1 3900 0
  98 005a 0320     		movs	r0, #3
  99 005c 1BE0     		b	.L8
 100              	.L11:
3882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 101              		.loc 1 3882 0 discriminator 1
 102 005e AB68     		ldr	r3, [r5, #8]
 103 0060 8022     		movs	r2, #128
 104 0062 1202     		lsls	r2, r2, #8
 105 0064 9342     		cmp	r3, r2
 106 0066 03D0     		beq	.L6
3883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 107              		.loc 1 3883 0
 108 0068 8022     		movs	r2, #128
 109 006a D200     		lsls	r2, r2, #3
 110 006c 9342     		cmp	r3, r2
 111 006e E9D1     		bne	.L5
 112              	.L6:
3886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 113              		.loc 1 3886 0
 114 0070 2A68     		ldr	r2, [r5]
 115 0072 1368     		ldr	r3, [r2]
 116 0074 4021     		movs	r1, #64
 117 0076 8B43     		bics	r3, r1
 118 0078 1360     		str	r3, [r2]
 119 007a E3E7     		b	.L5
 120              	.L12:
3892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 121              		.loc 1 3892 0
 122 007c 2A68     		ldr	r2, [r5]
 123 007e 1368     		ldr	r3, [r2]
 124 0080 0549     		ldr	r1, .L13
 125 0082 0B40     		ands	r3, r1
 126 0084 1360     		str	r3, [r2]
 127 0086 2A68     		ldr	r2, [r5]
 128 0088 1168     		ldr	r1, [r2]
 129 008a 8023     		movs	r3, #128
 130 008c 9B01     		lsls	r3, r3, #6
 131 008e 0B43     		orrs	r3, r1
 132 0090 1360     		str	r3, [r2]
 133 0092 DCE7     		b	.L7
 134              	.L10:
3901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
3902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return HAL_OK;
 135              		.loc 1 3905 0
 136 0094 0020     		movs	r0, #0
 137              	.L8:
3906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 138              		.loc 1 3906 0
ARM GAS  /tmp/ccXTKjLx.s 			page 72


 139              		@ sp needed
 140              	.LVL3:
 141              	.LVL4:
 142              	.LVL5:
 143 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 144              	.L14:
 145              		.align	2
 146              	.L13:
 147 0098 FFDFFFFF 		.word	-8193
 148              		.cfi_endproc
 149              	.LFE87:
 151              		.section	.text.SPI_WaitFifoStateUntilTimeout,"ax",%progbits
 152              		.align	1
 153              		.syntax unified
 154              		.code	16
 155              		.thumb_func
 156              		.fpu softvfp
 158              	SPI_WaitFifoStateUntilTimeout:
 159              	.LFB88:
3907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Handle SPI FIFO Communication Timeout.
3910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *              the configuration information for SPI module.
3912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Fifo Fifo to check
3913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  State Fifo state to check
3914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Timeout Timeout duration
3915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Tickstart tick start value
3916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
3917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint
3919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart)
3920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
 160              		.loc 1 3920 0
 161              		.cfi_startproc
 162              		@ args = 4, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              	.LVL6:
 165 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 166              	.LCFI1:
 167              		.cfi_def_cfa_offset 24
 168              		.cfi_offset 3, -24
 169              		.cfi_offset 4, -20
 170              		.cfi_offset 5, -16
 171              		.cfi_offset 6, -12
 172              		.cfi_offset 7, -8
 173              		.cfi_offset 14, -4
 174 0002 0700     		movs	r7, r0
 175 0004 0C00     		movs	r4, r1
 176 0006 1500     		movs	r5, r2
 177 0008 1E00     		movs	r6, r3
3921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   while ((hspi->Instance->SR & Fifo) != State)
 178              		.loc 1 3921 0
 179 000a 01E0     		b	.L18
 180              	.LVL7:
 181              	.L17:
3922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccXTKjLx.s 			page 73


3923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if ((Fifo == SPI_SR_FRLVL) && (State == SPI_FRLVL_EMPTY))
3924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Read 8bit CRC to flush Data Register */
3926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       READ_REG(*((__IO uint8_t *)&hspi->Instance->DR));
3927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (Timeout != HAL_MAX_DELAY)
 182              		.loc 1 3929 0
 183 000c 731C     		adds	r3, r6, #1
 184 000e 0CD1     		bne	.L25
 185              	.L18:
3921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   while ((hspi->Instance->SR & Fifo) != State)
 186              		.loc 1 3921 0
 187 0010 3A68     		ldr	r2, [r7]
 188 0012 9368     		ldr	r3, [r2, #8]
 189 0014 2340     		ands	r3, r4
 190 0016 AB42     		cmp	r3, r5
 191 0018 41D0     		beq	.L26
3923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 192              		.loc 1 3923 0
 193 001a C023     		movs	r3, #192
 194 001c DB00     		lsls	r3, r3, #3
 195 001e 9C42     		cmp	r4, r3
 196 0020 F4D1     		bne	.L17
3923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 197              		.loc 1 3923 0 is_stmt 0 discriminator 1
 198 0022 002D     		cmp	r5, #0
 199 0024 F2D1     		bne	.L17
3926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 200              		.loc 1 3926 0 is_stmt 1
 201 0026 137B     		ldrb	r3, [r2, #12]
 202 0028 F0E7     		b	.L17
 203              	.L25:
3930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 204              		.loc 1 3931 0
 205 002a FFF7FEFF 		bl	HAL_GetTick
 206              	.LVL8:
 207 002e 069B     		ldr	r3, [sp, #24]
 208 0030 C01A     		subs	r0, r0, r3
 209 0032 8642     		cmp	r6, r0
 210 0034 01D9     		bls	.L19
 211              		.loc 1 3931 0 is_stmt 0 discriminator 1
 212 0036 002E     		cmp	r6, #0
 213 0038 EAD1     		bne	.L18
 214              	.L19:
3932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
3933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Disable the SPI and reset the CRC: the CRC value should be cleared
3934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****            on both master and slave sides in order to resynchronize the master
3935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****            and slave for their respective CRC calculation */
3936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
3938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 215              		.loc 1 3938 0 is_stmt 1
 216 003a 3A68     		ldr	r2, [r7]
 217 003c 5368     		ldr	r3, [r2, #4]
 218 003e E021     		movs	r1, #224
ARM GAS  /tmp/ccXTKjLx.s 			page 74


 219 0040 8B43     		bics	r3, r1
 220 0042 5360     		str	r3, [r2, #4]
3939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 221              		.loc 1 3940 0
 222 0044 8223     		movs	r3, #130
 223 0046 5B00     		lsls	r3, r3, #1
 224 0048 7A68     		ldr	r2, [r7, #4]
 225 004a 9A42     		cmp	r2, r3
 226 004c 0CD0     		beq	.L27
 227              	.L20:
3941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
3942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
3943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           /* Disable SPI peripheral */
3944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
3945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
3946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Reset CRC Calculation */
3948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 228              		.loc 1 3948 0
 229 004e 8023     		movs	r3, #128
 230 0050 9B01     		lsls	r3, r3, #6
 231 0052 BA6A     		ldr	r2, [r7, #40]
 232 0054 9A42     		cmp	r2, r3
 233 0056 16D0     		beq	.L28
 234              	.L22:
3949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
3950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           SPI_RESET_CRC(hspi);
3951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
3952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 235              		.loc 1 3953 0
 236 0058 0122     		movs	r2, #1
 237 005a 5D23     		movs	r3, #93
 238 005c FA54     		strb	r2, [r7, r3]
3954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Process Unlocked */
3956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
 239              		.loc 1 3956 0
 240 005e 0022     		movs	r2, #0
 241 0060 013B     		subs	r3, r3, #1
 242 0062 FA54     		strb	r2, [r7, r3]
3957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         return HAL_TIMEOUT;
 243              		.loc 1 3958 0
 244 0064 0320     		movs	r0, #3
 245 0066 1BE0     		b	.L23
 246              	.L27:
3940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 247              		.loc 1 3940 0 discriminator 1
 248 0068 BB68     		ldr	r3, [r7, #8]
 249 006a 8022     		movs	r2, #128
 250 006c 1202     		lsls	r2, r2, #8
 251 006e 9342     		cmp	r3, r2
 252 0070 03D0     		beq	.L21
3941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 253              		.loc 1 3941 0
ARM GAS  /tmp/ccXTKjLx.s 			page 75


 254 0072 8022     		movs	r2, #128
 255 0074 D200     		lsls	r2, r2, #3
 256 0076 9342     		cmp	r3, r2
 257 0078 E9D1     		bne	.L20
 258              	.L21:
3944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 259              		.loc 1 3944 0
 260 007a 3A68     		ldr	r2, [r7]
 261 007c 1368     		ldr	r3, [r2]
 262 007e 4021     		movs	r1, #64
 263 0080 8B43     		bics	r3, r1
 264 0082 1360     		str	r3, [r2]
 265 0084 E3E7     		b	.L20
 266              	.L28:
3950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 267              		.loc 1 3950 0
 268 0086 3A68     		ldr	r2, [r7]
 269 0088 1368     		ldr	r3, [r2]
 270 008a 0649     		ldr	r1, .L29
 271 008c 0B40     		ands	r3, r1
 272 008e 1360     		str	r3, [r2]
 273 0090 3A68     		ldr	r2, [r7]
 274 0092 1168     		ldr	r1, [r2]
 275 0094 8023     		movs	r3, #128
 276 0096 9B01     		lsls	r3, r3, #6
 277 0098 0B43     		orrs	r3, r1
 278 009a 1360     		str	r3, [r2]
 279 009c DCE7     		b	.L22
 280              	.L26:
3959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
3960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return HAL_OK;
 281              		.loc 1 3963 0
 282 009e 0020     		movs	r0, #0
 283              	.L23:
3964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 284              		.loc 1 3964 0
 285              		@ sp needed
 286              	.LVL9:
 287              	.LVL10:
 288              	.LVL11:
 289              	.LVL12:
 290 00a0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 291              	.L30:
 292 00a2 C046     		.align	2
 293              	.L29:
 294 00a4 FFDFFFFF 		.word	-8193
 295              		.cfi_endproc
 296              	.LFE88:
 298              		.section	.text.SPI_EndRxTxTransaction,"ax",%progbits
 299              		.align	1
 300              		.syntax unified
 301              		.code	16
 302              		.thumb_func
 303              		.fpu softvfp
ARM GAS  /tmp/ccXTKjLx.s 			page 76


 305              	SPI_EndRxTxTransaction:
 306              	.LFB90:
3965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Handle the check of the RX transaction complete.
3968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Timeout Timeout duration
3971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Tickstart tick start value
3972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
3973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t 
3975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
3977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
3978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable SPI peripheral */
3980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
3981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Control the BSY flag */
3984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
3985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_TIMEOUT;
3988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
3991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
3992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Empty the FRLVL fifo */
3994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) !=
3995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return HAL_TIMEOUT;
3998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return HAL_OK;
4001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
4002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
4004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Handle the check of the RXTX or TX transaction complete.
4005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi SPI handle
4006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Timeout Timeout duration
4007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Tickstart tick start value
4008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
4009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
4010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
4011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
 307              		.loc 1 4011 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              	.LVL13:
 312 0000 70B5     		push	{r4, r5, r6, lr}
 313              	.LCFI2:
 314              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccXTKjLx.s 			page 77


 315              		.cfi_offset 4, -16
 316              		.cfi_offset 5, -12
 317              		.cfi_offset 6, -8
 318              		.cfi_offset 14, -4
 319 0002 82B0     		sub	sp, sp, #8
 320              	.LCFI3:
 321              		.cfi_def_cfa_offset 24
 322 0004 0400     		movs	r4, r0
 323 0006 0D00     		movs	r5, r1
 324 0008 1600     		movs	r6, r2
4012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Control if the TX fifo is empty */
4013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FTLVL, SPI_FTLVL_EMPTY, Timeout, Tickstart) != H
 325              		.loc 1 4013 0
 326 000a 0092     		str	r2, [sp]
 327 000c 0B00     		movs	r3, r1
 328 000e 0022     		movs	r2, #0
 329              	.LVL14:
 330 0010 C021     		movs	r1, #192
 331              	.LVL15:
 332 0012 4901     		lsls	r1, r1, #5
 333 0014 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 334              	.LVL16:
 335 0018 0028     		cmp	r0, #0
 336 001a 06D0     		beq	.L32
4014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 337              		.loc 1 4015 0
 338 001c 236E     		ldr	r3, [r4, #96]
 339 001e 2022     		movs	r2, #32
 340 0020 1343     		orrs	r3, r2
 341 0022 2366     		str	r3, [r4, #96]
4016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_TIMEOUT;
 342              		.loc 1 4016 0
 343 0024 0320     		movs	r0, #3
 344              	.L33:
4017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Control the BSY flag */
4020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
4021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
4023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_TIMEOUT;
4024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Control if the RX fifo is empty */
4027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) != H
4028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
4030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_TIMEOUT;
4031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return HAL_OK;
4034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 345              		.loc 1 4034 0
 346 0026 02B0     		add	sp, sp, #8
 347              		@ sp needed
 348              	.LVL17:
ARM GAS  /tmp/ccXTKjLx.s 			page 78


 349              	.LVL18:
 350              	.LVL19:
 351 0028 70BD     		pop	{r4, r5, r6, pc}
 352              	.LVL20:
 353              	.L32:
4020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 354              		.loc 1 4020 0
 355 002a 0096     		str	r6, [sp]
 356 002c 2B00     		movs	r3, r5
 357 002e 0022     		movs	r2, #0
 358 0030 8021     		movs	r1, #128
 359 0032 2000     		movs	r0, r4
 360 0034 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 361              	.LVL21:
 362 0038 0028     		cmp	r0, #0
 363 003a 05D0     		beq	.L34
4022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_TIMEOUT;
 364              		.loc 1 4022 0
 365 003c 236E     		ldr	r3, [r4, #96]
 366 003e 2022     		movs	r2, #32
 367 0040 1343     		orrs	r3, r2
 368 0042 2366     		str	r3, [r4, #96]
4023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 369              		.loc 1 4023 0
 370 0044 0320     		movs	r0, #3
 371 0046 EEE7     		b	.L33
 372              	.L34:
4027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 373              		.loc 1 4027 0
 374 0048 0096     		str	r6, [sp]
 375 004a 2B00     		movs	r3, r5
 376 004c 0022     		movs	r2, #0
 377 004e C021     		movs	r1, #192
 378 0050 C900     		lsls	r1, r1, #3
 379 0052 2000     		movs	r0, r4
 380 0054 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 381              	.LVL22:
 382 0058 0028     		cmp	r0, #0
 383 005a E4D0     		beq	.L33
4029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_TIMEOUT;
 384              		.loc 1 4029 0
 385 005c 236E     		ldr	r3, [r4, #96]
 386 005e 2022     		movs	r2, #32
 387 0060 1343     		orrs	r3, r2
 388 0062 2366     		str	r3, [r4, #96]
4030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 389              		.loc 1 4030 0
 390 0064 0320     		movs	r0, #3
 391 0066 DEE7     		b	.L33
 392              		.cfi_endproc
 393              	.LFE90:
 395              		.section	.text.SPI_EndRxTransaction,"ax",%progbits
 396              		.align	1
 397              		.syntax unified
 398              		.code	16
 399              		.thumb_func
 400              		.fpu softvfp
ARM GAS  /tmp/ccXTKjLx.s 			page 79


 402              	SPI_EndRxTransaction:
 403              	.LFB89:
3975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 404              		.loc 1 3975 0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 408              	.LVL23:
 409 0000 70B5     		push	{r4, r5, r6, lr}
 410              	.LCFI4:
 411              		.cfi_def_cfa_offset 16
 412              		.cfi_offset 4, -16
 413              		.cfi_offset 5, -12
 414              		.cfi_offset 6, -8
 415              		.cfi_offset 14, -4
 416 0002 82B0     		sub	sp, sp, #8
 417              	.LCFI5:
 418              		.cfi_def_cfa_offset 24
 419 0004 0400     		movs	r4, r0
 420 0006 0D00     		movs	r5, r1
 421 0008 1600     		movs	r6, r2
3976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 422              		.loc 1 3976 0
 423 000a 8223     		movs	r3, #130
 424 000c 5B00     		lsls	r3, r3, #1
 425 000e 4268     		ldr	r2, [r0, #4]
 426              	.LVL24:
 427 0010 9A42     		cmp	r2, r3
 428 0012 0FD0     		beq	.L41
 429              	.LVL25:
 430              	.L36:
3984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 431              		.loc 1 3984 0
 432 0014 0096     		str	r6, [sp]
 433 0016 2B00     		movs	r3, r5
 434 0018 0022     		movs	r2, #0
 435 001a 8021     		movs	r1, #128
 436 001c 2000     		movs	r0, r4
 437              	.LVL26:
 438 001e FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 439              	.LVL27:
 440 0022 0028     		cmp	r0, #0
 441 0024 15D0     		beq	.L38
3986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_TIMEOUT;
 442              		.loc 1 3986 0
 443 0026 236E     		ldr	r3, [r4, #96]
 444 0028 2022     		movs	r2, #32
 445 002a 1343     		orrs	r3, r2
 446 002c 2366     		str	r3, [r4, #96]
3987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 447              		.loc 1 3987 0
 448 002e 0320     		movs	r0, #3
 449              	.L39:
4001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 450              		.loc 1 4001 0
 451 0030 02B0     		add	sp, sp, #8
 452              		@ sp needed
ARM GAS  /tmp/ccXTKjLx.s 			page 80


 453              	.LVL28:
 454              	.LVL29:
 455              	.LVL30:
 456 0032 70BD     		pop	{r4, r5, r6, pc}
 457              	.LVL31:
 458              	.L41:
3976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 459              		.loc 1 3976 0 discriminator 1
 460 0034 8368     		ldr	r3, [r0, #8]
 461 0036 8022     		movs	r2, #128
 462 0038 1202     		lsls	r2, r2, #8
 463 003a 9342     		cmp	r3, r2
 464 003c 03D0     		beq	.L37
3977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 465              		.loc 1 3977 0
 466 003e 8022     		movs	r2, #128
 467 0040 D200     		lsls	r2, r2, #3
 468 0042 9342     		cmp	r3, r2
 469 0044 E6D1     		bne	.L36
 470              	.L37:
3980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 471              		.loc 1 3980 0
 472 0046 2268     		ldr	r2, [r4]
 473 0048 1368     		ldr	r3, [r2]
 474 004a 4021     		movs	r1, #64
 475              	.LVL32:
 476 004c 8B43     		bics	r3, r1
 477 004e 1360     		str	r3, [r2]
 478 0050 E0E7     		b	.L36
 479              	.LVL33:
 480              	.L38:
3990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 481              		.loc 1 3990 0
 482 0052 8223     		movs	r3, #130
 483 0054 5B00     		lsls	r3, r3, #1
 484 0056 6268     		ldr	r2, [r4, #4]
 485 0058 9A42     		cmp	r2, r3
 486 005a E9D1     		bne	.L39
3990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 487              		.loc 1 3990 0 is_stmt 0 discriminator 1
 488 005c A368     		ldr	r3, [r4, #8]
 489 005e 8022     		movs	r2, #128
 490 0060 1202     		lsls	r2, r2, #8
 491 0062 9342     		cmp	r3, r2
 492 0064 03D0     		beq	.L40
3991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 493              		.loc 1 3991 0 is_stmt 1
 494 0066 8022     		movs	r2, #128
 495 0068 D200     		lsls	r2, r2, #3
 496 006a 9342     		cmp	r3, r2
 497 006c E0D1     		bne	.L39
 498              	.L40:
3994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 499              		.loc 1 3994 0
 500 006e 0096     		str	r6, [sp]
 501 0070 2B00     		movs	r3, r5
 502 0072 0022     		movs	r2, #0
ARM GAS  /tmp/ccXTKjLx.s 			page 81


 503 0074 C021     		movs	r1, #192
 504 0076 C900     		lsls	r1, r1, #3
 505 0078 2000     		movs	r0, r4
 506 007a FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 507              	.LVL34:
 508 007e 0028     		cmp	r0, #0
 509 0080 D6D0     		beq	.L39
3996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return HAL_TIMEOUT;
 510              		.loc 1 3996 0
 511 0082 236E     		ldr	r3, [r4, #96]
 512 0084 2022     		movs	r2, #32
 513 0086 1343     		orrs	r3, r2
 514 0088 2366     		str	r3, [r4, #96]
3997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 515              		.loc 1 3997 0
 516 008a 0320     		movs	r0, #3
 517 008c D0E7     		b	.L39
 518              		.cfi_endproc
 519              	.LFE89:
 521              		.global	__aeabi_uidiv
 522              		.section	.text.SPI_AbortRx_ISR,"ax",%progbits
 523              		.align	1
 524              		.syntax unified
 525              		.code	16
 526              		.thumb_func
 527              		.fpu softvfp
 529              	SPI_AbortRx_ISR:
 530              	.LFB94:
4035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
4037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Handle the end of the RXTX transaction.
4038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
4039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
4040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
4041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
4042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi)
4043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
4044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
4045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init tickstart for timeout managment*/
4047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tickstart = HAL_GetTick();
4048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable ERR interrupt */
4050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
4051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check the end of the transaction */
4053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
4054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
4056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
4059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if CRC error occurred */
4060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
4061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
4063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
ARM GAS  /tmp/ccXTKjLx.s 			page 82


4064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
4065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Call user error callback */
4066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
4068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
4069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
4070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
4073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
4075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
4076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
4077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (hspi->State == HAL_SPI_STATE_BUSY_RX)
4078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
4079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
4080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Call user Rx complete callback */
4081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxCpltCallback(hspi);
4083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
4084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         HAL_SPI_RxCpltCallback(hspi);
4085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
4087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
4088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
4089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
4090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Call user TxRx complete callback */
4091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxRxCpltCallback(hspi);
4093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
4094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
4095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
4097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
4098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     else
4099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
4100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
4101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Call user error callback */
4102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
4104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
4105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
4106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
4108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
4109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
4111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
4112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
4114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Handle the end of the RX transaction.
4115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
4116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
4117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
4118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
4119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi)
4120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
ARM GAS  /tmp/ccXTKjLx.s 			page 83


4121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
4122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
4123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check the end of the transaction */
4125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
4126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
4128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
4130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
4132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if CRC error occurred */
4133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
4134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
4136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
4137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Call user error callback */
4138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
4140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
4141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
4142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
4145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
4147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
4148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
4149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Call user Rx complete callback */
4150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->RxCpltCallback(hspi);
4152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
4153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       HAL_SPI_RxCpltCallback(hspi);
4154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
4156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     else
4157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
4158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Call user error callback */
4159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
4161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
4162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
4163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
4165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
4166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
4168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
4169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
4171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Handle the end of the TX transaction.
4172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
4173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
4174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
4175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
4176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi)
4177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
ARM GAS  /tmp/ccXTKjLx.s 			page 84


4178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
4179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
4181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tickstart = HAL_GetTick();
4182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable TXE and ERR interrupt */
4184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
4185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check the end of the transaction */
4187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
4188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
4190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
4193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
4194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
4196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
4199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
4200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Call user error callback */
4202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
4204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
4205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
4206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
4209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Call user Rx complete callback */
4211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxCpltCallback(hspi);
4213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
4214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     HAL_SPI_TxCpltCallback(hspi);
4215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
4218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
4220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Handle abort a Rx transaction.
4221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
4222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
4223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
4224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
4225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi)
4226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
 531              		.loc 1 4226 0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 8
 534              		@ frame_needed = 0, uses_anonymous_args = 0
 535              	.LVL35:
 536 0000 30B5     		push	{r4, r5, lr}
 537              	.LCFI6:
 538              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccXTKjLx.s 			page 85


 539              		.cfi_offset 4, -12
 540              		.cfi_offset 5, -8
 541              		.cfi_offset 14, -4
 542 0002 85B0     		sub	sp, sp, #20
 543              	.LCFI7:
 544              		.cfi_def_cfa_offset 32
 545 0004 0400     		movs	r4, r0
4227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __IO uint32_t count;
4228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable SPI Peripheral */
4230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 546              		.loc 1 4230 0
 547 0006 0268     		ldr	r2, [r0]
 548 0008 1368     		ldr	r3, [r2]
 549 000a 4025     		movs	r5, #64
 550 000c AB43     		bics	r3, r5
 551 000e 1360     		str	r3, [r2]
4231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 552              		.loc 1 4232 0
 553 0010 1D4B     		ldr	r3, .L49
 554 0012 1868     		ldr	r0, [r3]
 555              	.LVL36:
 556 0014 1D49     		ldr	r1, .L49+4
 557 0016 FFF7FEFF 		bl	__aeabi_uidiv
 558              	.LVL37:
 559 001a 6423     		movs	r3, #100
 560 001c 5843     		muls	r0, r3
 561 001e 0390     		str	r0, [sp, #12]
4233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable RXNEIE interrupt */
4235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXNEIE));
 562              		.loc 1 4235 0
 563 0020 2268     		ldr	r2, [r4]
 564 0022 5368     		ldr	r3, [r2, #4]
 565 0024 AB43     		bics	r3, r5
 566 0026 5360     		str	r3, [r2, #4]
 567              	.L45:
4236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check RXNEIE is disabled */
4238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   do
4239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (count == 0U)
 568              		.loc 1 4240 0
 569 0028 039B     		ldr	r3, [sp, #12]
 570 002a 002B     		cmp	r3, #0
 571 002c 07D0     		beq	.L48
4241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
4242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
4243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       break;
4244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
4245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     count--;
 572              		.loc 1 4245 0
 573 002e 039B     		ldr	r3, [sp, #12]
 574 0030 013B     		subs	r3, r3, #1
 575 0032 0393     		str	r3, [sp, #12]
4246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   } while (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE));
ARM GAS  /tmp/ccXTKjLx.s 			page 86


 576              		.loc 1 4246 0
 577 0034 2368     		ldr	r3, [r4]
 578 0036 5B68     		ldr	r3, [r3, #4]
 579 0038 5B06     		lsls	r3, r3, #25
 580 003a F5D4     		bmi	.L45
 581 003c 03E0     		b	.L44
 582              	.L48:
4242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       break;
 583              		.loc 1 4242 0
 584 003e 236E     		ldr	r3, [r4, #96]
 585 0040 4022     		movs	r2, #64
 586 0042 1343     		orrs	r3, r2
 587 0044 2366     		str	r3, [r4, #96]
 588              	.L44:
4247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Control the BSY flag */
4249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) 
 589              		.loc 1 4249 0
 590 0046 FFF7FEFF 		bl	HAL_GetTick
 591              	.LVL38:
 592 004a 0090     		str	r0, [sp]
 593 004c 6423     		movs	r3, #100
 594 004e 0022     		movs	r2, #0
 595 0050 8021     		movs	r1, #128
 596 0052 2000     		movs	r0, r4
 597 0054 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 598              	.LVL39:
 599 0058 0028     		cmp	r0, #0
 600 005a 01D0     		beq	.L46
4250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 601              		.loc 1 4251 0
 602 005c 4023     		movs	r3, #64
 603 005e 2366     		str	r3, [r4, #96]
 604              	.L46:
4252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Empty the FRLVL fifo */
4255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
 605              		.loc 1 4255 0
 606 0060 FFF7FEFF 		bl	HAL_GetTick
 607              	.LVL40:
 608 0064 0090     		str	r0, [sp]
 609 0066 6423     		movs	r3, #100
 610 0068 0022     		movs	r2, #0
 611 006a C021     		movs	r1, #192
 612 006c C900     		lsls	r1, r1, #3
 613 006e 2000     		movs	r0, r4
 614 0070 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 615              	.LVL41:
 616 0074 0028     		cmp	r0, #0
 617 0076 01D0     		beq	.L47
4256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 618              		.loc 1 4257 0
 619 0078 4023     		movs	r3, #64
 620 007a 2366     		str	r3, [r4, #96]
ARM GAS  /tmp/ccXTKjLx.s 			page 87


 621              	.L47:
4258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 622              		.loc 1 4260 0
 623 007c 0722     		movs	r2, #7
 624 007e 5D23     		movs	r3, #93
 625 0080 E254     		strb	r2, [r4, r3]
4261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 626              		.loc 1 4261 0
 627 0082 05B0     		add	sp, sp, #20
 628              		@ sp needed
 629              	.LVL42:
 630 0084 30BD     		pop	{r4, r5, pc}
 631              	.L50:
 632 0086 C046     		.align	2
 633              	.L49:
 634 0088 00000000 		.word	SystemCoreClock
 635 008c C05D0000 		.word	24000
 636              		.cfi_endproc
 637              	.LFE94:
 639              		.section	.text.SPI_AbortTx_ISR,"ax",%progbits
 640              		.align	1
 641              		.syntax unified
 642              		.code	16
 643              		.thumb_func
 644              		.fpu softvfp
 646              	SPI_AbortTx_ISR:
 647              	.LFB95:
4262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
4264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Handle abort a Tx or Rx/Tx transaction.
4265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
4266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
4267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
4268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
4269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi)
4270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
 648              		.loc 1 4270 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 8
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 652              	.LVL43:
 653 0000 10B5     		push	{r4, lr}
 654              	.LCFI8:
 655              		.cfi_def_cfa_offset 8
 656              		.cfi_offset 4, -8
 657              		.cfi_offset 14, -4
 658 0002 84B0     		sub	sp, sp, #16
 659              	.LCFI9:
 660              		.cfi_def_cfa_offset 24
 661 0004 0400     		movs	r4, r0
4271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __IO uint32_t count;
4272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 662              		.loc 1 4273 0
 663 0006 384B     		ldr	r3, .L64
ARM GAS  /tmp/ccXTKjLx.s 			page 88


 664 0008 1868     		ldr	r0, [r3]
 665              	.LVL44:
 666 000a 3849     		ldr	r1, .L64+4
 667 000c FFF7FEFF 		bl	__aeabi_uidiv
 668              	.LVL45:
 669 0010 6423     		movs	r3, #100
 670 0012 5843     		muls	r0, r3
 671 0014 0390     		str	r0, [sp, #12]
4274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable TXEIE interrupt */
4276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE));
 672              		.loc 1 4276 0
 673 0016 2268     		ldr	r2, [r4]
 674 0018 5368     		ldr	r3, [r2, #4]
 675 001a 8021     		movs	r1, #128
 676 001c 8B43     		bics	r3, r1
 677 001e 5360     		str	r3, [r2, #4]
 678              	.L54:
4277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check TXEIE is disabled */
4279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   do
4280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (count == 0U)
 679              		.loc 1 4281 0
 680 0020 039B     		ldr	r3, [sp, #12]
 681 0022 002B     		cmp	r3, #0
 682 0024 07D0     		beq	.L62
4282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
4283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
4284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       break;
4285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
4286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     count--;
 683              		.loc 1 4286 0
 684 0026 039B     		ldr	r3, [sp, #12]
 685 0028 013B     		subs	r3, r3, #1
 686 002a 0393     		str	r3, [sp, #12]
4287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   } while (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE));
 687              		.loc 1 4287 0
 688 002c 2368     		ldr	r3, [r4]
 689 002e 5B68     		ldr	r3, [r3, #4]
 690 0030 1B06     		lsls	r3, r3, #24
 691 0032 F5D4     		bmi	.L54
 692 0034 03E0     		b	.L53
 693              	.L62:
4283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       break;
 694              		.loc 1 4283 0
 695 0036 236E     		ldr	r3, [r4, #96]
 696 0038 4022     		movs	r2, #64
 697 003a 1343     		orrs	r3, r2
 698 003c 2366     		str	r3, [r4, #96]
 699              	.L53:
4288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
 700              		.loc 1 4289 0
 701 003e FFF7FEFF 		bl	HAL_GetTick
 702              	.LVL46:
 703 0042 0200     		movs	r2, r0
ARM GAS  /tmp/ccXTKjLx.s 			page 89


 704 0044 6421     		movs	r1, #100
 705 0046 2000     		movs	r0, r4
 706 0048 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 707              	.LVL47:
 708 004c 0028     		cmp	r0, #0
 709 004e 01D0     		beq	.L55
4290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 710              		.loc 1 4291 0
 711 0050 4023     		movs	r3, #64
 712 0052 2366     		str	r3, [r4, #96]
 713              	.L55:
4292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable SPI Peripheral */
4295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 714              		.loc 1 4295 0
 715 0054 2268     		ldr	r2, [r4]
 716 0056 1368     		ldr	r3, [r2]
 717 0058 4021     		movs	r1, #64
 718 005a 8B43     		bics	r3, r1
 719 005c 1360     		str	r3, [r2]
4296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Empty the FRLVL fifo */
4298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
 720              		.loc 1 4298 0
 721 005e FFF7FEFF 		bl	HAL_GetTick
 722              	.LVL48:
 723 0062 0090     		str	r0, [sp]
 724 0064 6423     		movs	r3, #100
 725 0066 0022     		movs	r2, #0
 726 0068 C021     		movs	r1, #192
 727 006a C900     		lsls	r1, r1, #3
 728 006c 2000     		movs	r0, r4
 729 006e FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 730              	.LVL49:
 731 0072 0028     		cmp	r0, #0
 732 0074 01D0     		beq	.L56
4299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 733              		.loc 1 4300 0
 734 0076 4023     		movs	r3, #64
 735 0078 2366     		str	r3, [r4, #96]
 736              	.L56:
4301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check case of Full-Duplex Mode and disable directly RXNEIE interrupt */
4304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
 737              		.loc 1 4304 0
 738 007a 2368     		ldr	r3, [r4]
 739 007c 5A68     		ldr	r2, [r3, #4]
 740 007e 5206     		lsls	r2, r2, #25
 741 0080 2DD5     		bpl	.L57
4305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable RXNEIE interrupt */
4307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXNEIE));
 742              		.loc 1 4307 0
ARM GAS  /tmp/ccXTKjLx.s 			page 90


 743 0082 5A68     		ldr	r2, [r3, #4]
 744 0084 4021     		movs	r1, #64
 745 0086 8A43     		bics	r2, r1
 746 0088 5A60     		str	r2, [r3, #4]
 747              	.L60:
4308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Check RXNEIE is disabled */
4310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     do
4311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
4312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (count == 0U)
 748              		.loc 1 4312 0
 749 008a 039B     		ldr	r3, [sp, #12]
 750 008c 002B     		cmp	r3, #0
 751 008e 07D0     		beq	.L63
4313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
4314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
4315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
4316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
4317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       count--;
 752              		.loc 1 4317 0
 753 0090 039B     		ldr	r3, [sp, #12]
 754 0092 013B     		subs	r3, r3, #1
 755 0094 0393     		str	r3, [sp, #12]
4318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     } while (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE));
 756              		.loc 1 4318 0
 757 0096 2368     		ldr	r3, [r4]
 758 0098 5B68     		ldr	r3, [r3, #4]
 759 009a 5B06     		lsls	r3, r3, #25
 760 009c F5D4     		bmi	.L60
 761 009e 03E0     		b	.L59
 762              	.L63:
4314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 763              		.loc 1 4314 0
 764 00a0 236E     		ldr	r3, [r4, #96]
 765 00a2 4022     		movs	r2, #64
 766 00a4 1343     		orrs	r3, r2
 767 00a6 2366     		str	r3, [r4, #96]
 768              	.L59:
4319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Control the BSY flag */
4321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick()
 769              		.loc 1 4321 0
 770 00a8 FFF7FEFF 		bl	HAL_GetTick
 771              	.LVL50:
 772 00ac 0090     		str	r0, [sp]
 773 00ae 6423     		movs	r3, #100
 774 00b0 0022     		movs	r2, #0
 775 00b2 8021     		movs	r1, #128
 776 00b4 2000     		movs	r0, r4
 777 00b6 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 778              	.LVL51:
 779 00ba 0028     		cmp	r0, #0
 780 00bc 01D0     		beq	.L61
4322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
4323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 781              		.loc 1 4323 0
 782 00be 4023     		movs	r3, #64
ARM GAS  /tmp/ccXTKjLx.s 			page 91


 783 00c0 2366     		str	r3, [r4, #96]
 784              	.L61:
4324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
4325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Empty the FRLVL fifo */
4327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, H
 785              		.loc 1 4327 0
 786 00c2 FFF7FEFF 		bl	HAL_GetTick
 787              	.LVL52:
 788 00c6 0090     		str	r0, [sp]
 789 00c8 6423     		movs	r3, #100
 790 00ca 0022     		movs	r2, #0
 791 00cc C021     		movs	r1, #192
 792 00ce C900     		lsls	r1, r1, #3
 793 00d0 2000     		movs	r0, r4
 794 00d2 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 795              	.LVL53:
 796 00d6 0028     		cmp	r0, #0
 797 00d8 01D0     		beq	.L57
4328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
4329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 798              		.loc 1 4329 0
 799 00da 4023     		movs	r3, #64
 800 00dc 2366     		str	r3, [r4, #96]
 801              	.L57:
4330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
4331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 802              		.loc 1 4332 0
 803 00de 0722     		movs	r2, #7
 804 00e0 5D23     		movs	r3, #93
 805 00e2 E254     		strb	r2, [r4, r3]
4333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 806              		.loc 1 4333 0
 807 00e4 04B0     		add	sp, sp, #16
 808              		@ sp needed
 809              	.LVL54:
 810 00e6 10BD     		pop	{r4, pc}
 811              	.L65:
 812              		.align	2
 813              	.L64:
 814 00e8 00000000 		.word	SystemCoreClock
 815 00ec C05D0000 		.word	24000
 816              		.cfi_endproc
 817              	.LFE95:
 819              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 820              		.align	1
 821              		.weak	HAL_SPI_MspInit
 822              		.syntax unified
 823              		.code	16
 824              		.thumb_func
 825              		.fpu softvfp
 827              	HAL_SPI_MspInit:
 828              	.LFB42:
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 829              		.loc 1 515 0
 830              		.cfi_startproc
ARM GAS  /tmp/ccXTKjLx.s 			page 92


 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 833              		@ link register save eliminated.
 834              	.LVL55:
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 835              		.loc 1 522 0
 836              		@ sp needed
 837 0000 7047     		bx	lr
 838              		.cfi_endproc
 839              	.LFE42:
 841              		.section	.text.HAL_SPI_Init,"ax",%progbits
 842              		.align	1
 843              		.global	HAL_SPI_Init
 844              		.syntax unified
 845              		.code	16
 846              		.thumb_func
 847              		.fpu softvfp
 849              	HAL_SPI_Init:
 850              	.LFB40:
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t frxth;
 851              		.loc 1 326 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 0
 854              		@ frame_needed = 0, uses_anonymous_args = 0
 855              	.LVL56:
 856 0000 70B5     		push	{r4, r5, r6, lr}
 857              	.LCFI10:
 858              		.cfi_def_cfa_offset 16
 859              		.cfi_offset 4, -16
 860              		.cfi_offset 5, -12
 861              		.cfi_offset 6, -8
 862              		.cfi_offset 14, -4
 863 0002 041E     		subs	r4, r0, #0
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 864              		.loc 1 330 0
 865 0004 5ED0     		beq	.L74
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 866              		.loc 1 358 0
 867 0006 0023     		movs	r3, #0
 868 0008 8362     		str	r3, [r0, #40]
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 869              		.loc 1 361 0
 870 000a 5D33     		adds	r3, r3, #93
 871 000c C35C     		ldrb	r3, [r0, r3]
 872 000e 002B     		cmp	r3, #0
 873 0010 4CD0     		beq	.L76
 874              	.LVL57:
 875              	.L69:
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 876              		.loc 1 390 0
 877 0012 0222     		movs	r2, #2
 878 0014 5D23     		movs	r3, #93
 879 0016 E254     		strb	r2, [r4, r3]
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 880              		.loc 1 393 0
 881 0018 2268     		ldr	r2, [r4]
 882 001a 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccXTKjLx.s 			page 93


 883 001c 4021     		movs	r1, #64
 884 001e 8B43     		bics	r3, r1
 885 0020 1360     		str	r3, [r2]
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 886              		.loc 1 396 0
 887 0022 E368     		ldr	r3, [r4, #12]
 888 0024 E022     		movs	r2, #224
 889 0026 D200     		lsls	r2, r2, #3
 890 0028 9342     		cmp	r3, r2
 891 002a 45D9     		bls	.L75
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 892              		.loc 1 398 0
 893 002c 0021     		movs	r1, #0
 894              	.L70:
 895              	.LVL58:
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 896              		.loc 1 406 0
 897 002e F022     		movs	r2, #240
 898 0030 1201     		lsls	r2, r2, #4
 899 0032 9342     		cmp	r3, r2
 900 0034 05D0     		beq	.L71
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 901              		.loc 1 406 0 is_stmt 0 discriminator 1
 902 0036 E022     		movs	r2, #224
 903 0038 D200     		lsls	r2, r2, #3
 904 003a 9342     		cmp	r3, r2
 905 003c 01D0     		beq	.L71
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 906              		.loc 1 409 0 is_stmt 1
 907 003e 0022     		movs	r2, #0
 908 0040 A262     		str	r2, [r4, #40]
 909              	.L71:
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 910              		.loc 1 413 0
 911 0042 226B     		ldr	r2, [r4, #48]
 912 0044 002A     		cmp	r2, #0
 913 0046 05D1     		bne	.L72
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 914              		.loc 1 416 0
 915 0048 E022     		movs	r2, #224
 916 004a D200     		lsls	r2, r2, #3
 917 004c 9342     		cmp	r3, r2
 918 004e 36D9     		bls	.L73
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 919              		.loc 1 418 0
 920 0050 0223     		movs	r3, #2
 921 0052 2363     		str	r3, [r4, #48]
 922              	.L72:
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                   hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & 
 923              		.loc 1 429 0
 924 0054 2268     		ldr	r2, [r4]
 925 0056 6368     		ldr	r3, [r4, #4]
 926 0058 A068     		ldr	r0, [r4, #8]
 927 005a 0343     		orrs	r3, r0
 928 005c 2069     		ldr	r0, [r4, #16]
 929 005e 0343     		orrs	r3, r0
 930 0060 6069     		ldr	r0, [r4, #20]
ARM GAS  /tmp/ccXTKjLx.s 			page 94


 931 0062 0343     		orrs	r3, r0
 932 0064 8020     		movs	r0, #128
 933 0066 8000     		lsls	r0, r0, #2
 934 0068 A569     		ldr	r5, [r4, #24]
 935 006a 2840     		ands	r0, r5
 936 006c 0343     		orrs	r3, r0
 937 006e E069     		ldr	r0, [r4, #28]
 938 0070 0343     		orrs	r3, r0
 939 0072 206A     		ldr	r0, [r4, #32]
 940 0074 0343     		orrs	r3, r0
 941 0076 A06A     		ldr	r0, [r4, #40]
 942 0078 0343     		orrs	r3, r0
 943 007a 1360     		str	r3, [r2]
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                   hspi->Init.NSSPMode | hspi->Init.DataSize) | frxth);
 944              		.loc 1 441 0
 945 007c 2268     		ldr	r2, [r4]
 946 007e 608B     		ldrh	r0, [r4, #26]
 947 0080 0423     		movs	r3, #4
 948 0082 0340     		ands	r3, r0
 949 0084 606A     		ldr	r0, [r4, #36]
 950 0086 0343     		orrs	r3, r0
 951 0088 606B     		ldr	r0, [r4, #52]
 952 008a 0343     		orrs	r3, r0
 953 008c E068     		ldr	r0, [r4, #12]
 954 008e 0343     		orrs	r3, r0
 955 0090 0B43     		orrs	r3, r1
 956 0092 5360     		str	r3, [r2, #4]
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 957              		.loc 1 455 0
 958 0094 2268     		ldr	r2, [r4]
 959 0096 D369     		ldr	r3, [r2, #28]
 960 0098 0B49     		ldr	r1, .L77
 961              	.LVL59:
 962 009a 0B40     		ands	r3, r1
 963 009c D361     		str	r3, [r2, #28]
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 964              		.loc 1 458 0
 965 009e 0023     		movs	r3, #0
 966 00a0 2366     		str	r3, [r4, #96]
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 967              		.loc 1 459 0
 968 00a2 0122     		movs	r2, #1
 969 00a4 5D33     		adds	r3, r3, #93
 970 00a6 E254     		strb	r2, [r4, r3]
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 971              		.loc 1 461 0
 972 00a8 0020     		movs	r0, #0
 973              	.L68:
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 974              		.loc 1 462 0
 975              		@ sp needed
 976              	.LVL60:
 977 00aa 70BD     		pop	{r4, r5, r6, pc}
 978              	.LVL61:
 979              	.L76:
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 980              		.loc 1 364 0
ARM GAS  /tmp/ccXTKjLx.s 			page 95


 981 00ac 0022     		movs	r2, #0
 982 00ae 5C33     		adds	r3, r3, #92
 983 00b0 C254     		strb	r2, [r0, r3]
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 984              		.loc 1 386 0
 985 00b2 FFF7FEFF 		bl	HAL_SPI_MspInit
 986              	.LVL62:
 987 00b6 ACE7     		b	.L69
 988              	.L75:
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 989              		.loc 1 402 0
 990 00b8 8021     		movs	r1, #128
 991 00ba 4901     		lsls	r1, r1, #5
 992 00bc B7E7     		b	.L70
 993              	.LVL63:
 994              	.L73:
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 995              		.loc 1 422 0
 996 00be 0123     		movs	r3, #1
 997 00c0 2363     		str	r3, [r4, #48]
 998 00c2 C7E7     		b	.L72
 999              	.LVL64:
 1000              	.L74:
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 1001              		.loc 1 332 0
 1002 00c4 0120     		movs	r0, #1
 1003              	.LVL65:
 1004 00c6 F0E7     		b	.L68
 1005              	.L78:
 1006              		.align	2
 1007              	.L77:
 1008 00c8 FFF7FFFF 		.word	-2049
 1009              		.cfi_endproc
 1010              	.LFE40:
 1012              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 1013              		.align	1
 1014              		.weak	HAL_SPI_MspDeInit
 1015              		.syntax unified
 1016              		.code	16
 1017              		.thumb_func
 1018              		.fpu softvfp
 1020              	HAL_SPI_MspDeInit:
 1021              	.LFB43:
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 1022              		.loc 1 531 0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
 1026              		@ link register save eliminated.
 1027              	.LVL66:
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1028              		.loc 1 538 0
 1029              		@ sp needed
 1030 0000 7047     		bx	lr
 1031              		.cfi_endproc
 1032              	.LFE43:
 1034              		.section	.text.HAL_SPI_DeInit,"ax",%progbits
ARM GAS  /tmp/ccXTKjLx.s 			page 96


 1035              		.align	1
 1036              		.global	HAL_SPI_DeInit
 1037              		.syntax unified
 1038              		.code	16
 1039              		.thumb_func
 1040              		.fpu softvfp
 1042              	HAL_SPI_DeInit:
 1043              	.LFB41:
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check the SPI handle allocation */
 1044              		.loc 1 471 0
 1045              		.cfi_startproc
 1046              		@ args = 0, pretend = 0, frame = 0
 1047              		@ frame_needed = 0, uses_anonymous_args = 0
 1048              	.LVL67:
 1049 0000 70B5     		push	{r4, r5, r6, lr}
 1050              	.LCFI11:
 1051              		.cfi_def_cfa_offset 16
 1052              		.cfi_offset 4, -16
 1053              		.cfi_offset 5, -12
 1054              		.cfi_offset 6, -8
 1055              		.cfi_offset 14, -4
 1056 0002 041E     		subs	r4, r0, #0
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1057              		.loc 1 473 0
 1058 0004 10D0     		beq	.L82
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1059              		.loc 1 481 0
 1060 0006 5D25     		movs	r5, #93
 1061 0008 0223     		movs	r3, #2
 1062 000a 4355     		strb	r3, [r0, r5]
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1063              		.loc 1 484 0
 1064 000c 0268     		ldr	r2, [r0]
 1065 000e 1368     		ldr	r3, [r2]
 1066 0010 4021     		movs	r1, #64
 1067 0012 8B43     		bics	r3, r1
 1068 0014 1360     		str	r3, [r2]
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 1069              		.loc 1 496 0
 1070 0016 FFF7FEFF 		bl	HAL_SPI_MspDeInit
 1071              	.LVL68:
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 1072              		.loc 1 499 0
 1073 001a 0023     		movs	r3, #0
 1074 001c 2366     		str	r3, [r4, #96]
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1075              		.loc 1 500 0
 1076 001e 6355     		strb	r3, [r4, r5]
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1077              		.loc 1 503 0
 1078 0020 5C22     		movs	r2, #92
 1079 0022 A354     		strb	r3, [r4, r2]
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 1080              		.loc 1 505 0
 1081 0024 0020     		movs	r0, #0
 1082              	.L81:
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
ARM GAS  /tmp/ccXTKjLx.s 			page 97


 1083              		.loc 1 506 0
 1084              		@ sp needed
 1085              	.LVL69:
 1086 0026 70BD     		pop	{r4, r5, r6, pc}
 1087              	.LVL70:
 1088              	.L82:
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 1089              		.loc 1 475 0
 1090 0028 0120     		movs	r0, #1
 1091              	.LVL71:
 1092 002a FCE7     		b	.L81
 1093              		.cfi_endproc
 1094              	.LFE41:
 1096              		.section	.text.HAL_SPI_Transmit,"ax",%progbits
 1097              		.align	1
 1098              		.global	HAL_SPI_Transmit
 1099              		.syntax unified
 1100              		.code	16
 1101              		.thumb_func
 1102              		.fpu softvfp
 1104              	HAL_SPI_Transmit:
 1105              	.LFB44:
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
 1106              		.loc 1 803 0
 1107              		.cfi_startproc
 1108              		@ args = 0, pretend = 0, frame = 16
 1109              		@ frame_needed = 0, uses_anonymous_args = 0
 1110              	.LVL72:
 1111 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1112              	.LCFI12:
 1113              		.cfi_def_cfa_offset 20
 1114              		.cfi_offset 4, -20
 1115              		.cfi_offset 5, -16
 1116              		.cfi_offset 6, -12
 1117              		.cfi_offset 7, -8
 1118              		.cfi_offset 14, -4
 1119 0002 85B0     		sub	sp, sp, #20
 1120              	.LCFI13:
 1121              		.cfi_def_cfa_offset 40
 1122 0004 0600     		movs	r6, r0
 1123 0006 0191     		str	r1, [sp, #4]
 1124 0008 1500     		movs	r5, r2
 1125 000a 1C00     		movs	r4, r3
 1126              	.LVL73:
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1127              		.loc 1 819 0
 1128 000c 5C23     		movs	r3, #92
 1129              	.LVL74:
 1130 000e C35C     		ldrb	r3, [r0, r3]
 1131 0010 012B     		cmp	r3, #1
 1132 0012 02D1     		bne	.L117
 1133 0014 0220     		movs	r0, #2
 1134              	.LVL75:
 1135              	.L84:
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1136              		.loc 1 981 0
 1137 0016 05B0     		add	sp, sp, #20
ARM GAS  /tmp/ccXTKjLx.s 			page 98


 1138              		@ sp needed
 1139              	.LVL76:
 1140              	.LVL77:
 1141 0018 F0BD     		pop	{r4, r5, r6, r7, pc}
 1142              	.LVL78:
 1143              	.L117:
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1144              		.loc 1 819 0 discriminator 2
 1145 001a 0122     		movs	r2, #1
 1146              	.LVL79:
 1147 001c 5C23     		movs	r3, #92
 1148 001e C254     		strb	r2, [r0, r3]
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   initial_TxXferCount = Size;
 1149              		.loc 1 822 0 discriminator 2
 1150 0020 FFF7FEFF 		bl	HAL_GetTick
 1151              	.LVL80:
 1152 0024 0700     		movs	r7, r0
 1153              	.LVL81:
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1154              		.loc 1 825 0 discriminator 2
 1155 0026 5D23     		movs	r3, #93
 1156 0028 F35C     		ldrb	r3, [r6, r3]
 1157 002a 012B     		cmp	r3, #1
 1158 002c 07D0     		beq	.L118
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 1159              		.loc 1 827 0
 1160 002e 0220     		movs	r0, #2
 1161              	.LVL82:
 1162              	.L85:
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Unlocked */
 1163              		.loc 1 977 0
 1164 0030 0122     		movs	r2, #1
 1165 0032 5D23     		movs	r3, #93
 1166 0034 F254     		strb	r2, [r6, r3]
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
 1167              		.loc 1 979 0
 1168 0036 0022     		movs	r2, #0
 1169 0038 013B     		subs	r3, r3, #1
 1170 003a F254     		strb	r2, [r6, r3]
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 1171              		.loc 1 980 0
 1172 003c EBE7     		b	.L84
 1173              	.LVL83:
 1174              	.L118:
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1175              		.loc 1 831 0
 1176 003e 0199     		ldr	r1, [sp, #4]
 1177 0040 0029     		cmp	r1, #0
 1178 0042 00D1     		bne	.LCB1130
 1179 0044 BDE0     		b	.L110	@long jump
 1180              	.LCB1130:
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1181              		.loc 1 831 0 is_stmt 0 discriminator 1
 1182 0046 002D     		cmp	r5, #0
 1183 0048 00D1     		bne	.LCB1132
 1184 004a BCE0     		b	.L111	@long jump
 1185              	.LCB1132:
ARM GAS  /tmp/ccXTKjLx.s 			page 99


 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1186              		.loc 1 838 0 is_stmt 1
 1187 004c 0322     		movs	r2, #3
 1188 004e 5D23     		movs	r3, #93
 1189 0050 F254     		strb	r2, [r6, r3]
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 1190              		.loc 1 839 0
 1191 0052 0023     		movs	r3, #0
 1192 0054 3366     		str	r3, [r6, #96]
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1193              		.loc 1 840 0
 1194 0056 B163     		str	r1, [r6, #56]
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1195              		.loc 1 841 0
 1196 0058 B587     		strh	r5, [r6, #60]
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1197              		.loc 1 842 0
 1198 005a F587     		strh	r5, [r6, #62]
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 1199              		.loc 1 845 0
 1200 005c 3364     		str	r3, [r6, #64]
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 1201              		.loc 1 846 0
 1202 005e 4422     		movs	r2, #68
 1203 0060 B352     		strh	r3, [r6, r2]
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1204              		.loc 1 847 0
 1205 0062 0232     		adds	r2, r2, #2
 1206 0064 B352     		strh	r3, [r6, r2]
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1207              		.loc 1 848 0
 1208 0066 3365     		str	r3, [r6, #80]
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1209              		.loc 1 849 0
 1210 0068 F364     		str	r3, [r6, #76]
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1211              		.loc 1 852 0
 1212 006a 8023     		movs	r3, #128
 1213 006c 1B02     		lsls	r3, r3, #8
 1214 006e B268     		ldr	r2, [r6, #8]
 1215 0070 9A42     		cmp	r2, r3
 1216 0072 1DD0     		beq	.L119
 1217              	.L86:
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1218              		.loc 1 866 0
 1219 0074 3368     		ldr	r3, [r6]
 1220 0076 1A68     		ldr	r2, [r3]
 1221 0078 5206     		lsls	r2, r2, #25
 1222 007a 03D4     		bmi	.L87
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 1223              		.loc 1 869 0
 1224 007c 1A68     		ldr	r2, [r3]
 1225 007e 4021     		movs	r1, #64
 1226 0080 0A43     		orrs	r2, r1
 1227 0082 1A60     		str	r2, [r3]
 1228              	.L87:
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccXTKjLx.s 			page 100


 1229              		.loc 1 873 0
 1230 0084 E023     		movs	r3, #224
 1231 0086 DB00     		lsls	r3, r3, #3
 1232 0088 F268     		ldr	r2, [r6, #12]
 1233 008a 9A42     		cmp	r2, r3
 1234 008c 35D9     		bls	.L88
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1235              		.loc 1 875 0
 1236 008e 7368     		ldr	r3, [r6, #4]
 1237 0090 002B     		cmp	r3, #0
 1238 0092 01D0     		beq	.L89
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1239              		.loc 1 875 0 is_stmt 0 discriminator 1
 1240 0094 012D     		cmp	r5, #1
 1241 0096 1DD1     		bne	.L91
 1242              	.L89:
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 1243              		.loc 1 877 0 is_stmt 1
 1244 0098 3368     		ldr	r3, [r6]
 1245 009a B26B     		ldr	r2, [r6, #56]
 1246 009c 1288     		ldrh	r2, [r2]
 1247 009e DA60     		str	r2, [r3, #12]
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->TxXferCount--;
 1248              		.loc 1 878 0
 1249 00a0 B36B     		ldr	r3, [r6, #56]
 1250 00a2 0233     		adds	r3, r3, #2
 1251 00a4 B363     		str	r3, [r6, #56]
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 1252              		.loc 1 879 0
 1253 00a6 F38F     		ldrh	r3, [r6, #62]
 1254 00a8 013B     		subs	r3, r3, #1
 1255 00aa 9BB2     		uxth	r3, r3
 1256 00ac F387     		strh	r3, [r6, #62]
 1257 00ae 11E0     		b	.L91
 1258              	.L119:
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 1259              		.loc 1 854 0
 1260 00b0 3268     		ldr	r2, [r6]
 1261 00b2 1168     		ldr	r1, [r2]
 1262 00b4 8023     		movs	r3, #128
 1263 00b6 DB01     		lsls	r3, r3, #7
 1264 00b8 0B43     		orrs	r3, r1
 1265 00ba 1360     		str	r3, [r2]
 1266 00bc DAE7     		b	.L86
 1267              	.LVL84:
 1268              	.L92:
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 1269              		.loc 1 894 0
 1270 00be FFF7FEFF 		bl	HAL_GetTick
 1271              	.LVL85:
 1272 00c2 C01B     		subs	r0, r0, r7
 1273 00c4 A042     		cmp	r0, r4
 1274 00c6 02D3     		bcc	.L94
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 1275              		.loc 1 894 0 is_stmt 0 discriminator 1
 1276 00c8 631C     		adds	r3, r4, #1
 1277 00ca 00D0     		beq	.LCB1217
ARM GAS  /tmp/ccXTKjLx.s 			page 101


 1278 00cc 7DE0     		b	.L112	@long jump
 1279              	.LCB1217:
 1280              	.L94:
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 1281              		.loc 1 894 0 discriminator 3
 1282 00ce 002C     		cmp	r4, #0
 1283 00d0 00D1     		bne	.LCB1220
 1284 00d2 7CE0     		b	.L113	@long jump
 1285              	.LCB1220:
 1286              	.L91:
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1287              		.loc 1 882 0 is_stmt 1
 1288 00d4 F38F     		ldrh	r3, [r6, #62]
 1289 00d6 9BB2     		uxth	r3, r3
 1290 00d8 002B     		cmp	r3, #0
 1291 00da 5AD0     		beq	.L96
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1292              		.loc 1 885 0
 1293 00dc 3368     		ldr	r3, [r6]
 1294 00de 9A68     		ldr	r2, [r3, #8]
 1295 00e0 9207     		lsls	r2, r2, #30
 1296 00e2 ECD5     		bpl	.L92
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1297              		.loc 1 887 0
 1298 00e4 B26B     		ldr	r2, [r6, #56]
 1299 00e6 1288     		ldrh	r2, [r2]
 1300 00e8 DA60     		str	r2, [r3, #12]
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount--;
 1301              		.loc 1 888 0
 1302 00ea B36B     		ldr	r3, [r6, #56]
 1303 00ec 0233     		adds	r3, r3, #2
 1304 00ee B363     		str	r3, [r6, #56]
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 1305              		.loc 1 889 0
 1306 00f0 F38F     		ldrh	r3, [r6, #62]
 1307 00f2 013B     		subs	r3, r3, #1
 1308 00f4 9BB2     		uxth	r3, r3
 1309 00f6 F387     		strh	r3, [r6, #62]
 1310 00f8 ECE7     		b	.L91
 1311              	.LVL86:
 1312              	.L88:
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1313              		.loc 1 905 0
 1314 00fa 7368     		ldr	r3, [r6, #4]
 1315 00fc 002B     		cmp	r3, #0
 1316 00fe 01D0     		beq	.L97
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1317              		.loc 1 905 0 is_stmt 0 discriminator 1
 1318 0100 012D     		cmp	r5, #1
 1319 0102 2FD1     		bne	.L100
 1320              	.L97:
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1321              		.loc 1 907 0 is_stmt 1
 1322 0104 F38F     		ldrh	r3, [r6, #62]
 1323 0106 9BB2     		uxth	r3, r3
 1324 0108 012B     		cmp	r3, #1
 1325 010a 0BD9     		bls	.L99
ARM GAS  /tmp/ccXTKjLx.s 			page 102


 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1326              		.loc 1 910 0
 1327 010c 3368     		ldr	r3, [r6]
 1328 010e B26B     		ldr	r2, [r6, #56]
 1329 0110 1288     		ldrh	r2, [r2]
 1330 0112 DA60     		str	r2, [r3, #12]
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount -= 2U;
 1331              		.loc 1 911 0
 1332 0114 B36B     		ldr	r3, [r6, #56]
 1333 0116 0233     		adds	r3, r3, #2
 1334 0118 B363     		str	r3, [r6, #56]
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 1335              		.loc 1 912 0
 1336 011a F38F     		ldrh	r3, [r6, #62]
 1337 011c 023B     		subs	r3, r3, #2
 1338 011e 9BB2     		uxth	r3, r3
 1339 0120 F387     		strh	r3, [r6, #62]
 1340 0122 1FE0     		b	.L100
 1341              	.L99:
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pTxBuffPtr ++;
 1342              		.loc 1 916 0
 1343 0124 B36B     		ldr	r3, [r6, #56]
 1344 0126 1B78     		ldrb	r3, [r3]
 1345 0128 3268     		ldr	r2, [r6]
 1346 012a 1373     		strb	r3, [r2, #12]
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount--;
 1347              		.loc 1 917 0
 1348 012c B36B     		ldr	r3, [r6, #56]
 1349 012e 0133     		adds	r3, r3, #1
 1350 0130 B363     		str	r3, [r6, #56]
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 1351              		.loc 1 918 0
 1352 0132 F38F     		ldrh	r3, [r6, #62]
 1353 0134 013B     		subs	r3, r3, #1
 1354 0136 9BB2     		uxth	r3, r3
 1355 0138 F387     		strh	r3, [r6, #62]
 1356 013a 13E0     		b	.L100
 1357              	.LVL87:
 1358              	.L102:
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->pTxBuffPtr++;
 1359              		.loc 1 935 0
 1360 013c B36B     		ldr	r3, [r6, #56]
 1361 013e 1B78     		ldrb	r3, [r3]
 1362 0140 1373     		strb	r3, [r2, #12]
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->TxXferCount--;
 1363              		.loc 1 936 0
 1364 0142 B36B     		ldr	r3, [r6, #56]
 1365 0144 0133     		adds	r3, r3, #1
 1366 0146 B363     		str	r3, [r6, #56]
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 1367              		.loc 1 937 0
 1368 0148 F38F     		ldrh	r3, [r6, #62]
 1369 014a 013B     		subs	r3, r3, #1
 1370 014c 9BB2     		uxth	r3, r3
 1371 014e F387     		strh	r3, [r6, #62]
 1372 0150 08E0     		b	.L100
 1373              	.L101:
ARM GAS  /tmp/ccXTKjLx.s 			page 103


 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 1374              		.loc 1 943 0
 1375 0152 FFF7FEFF 		bl	HAL_GetTick
 1376              	.LVL88:
 1377 0156 C01B     		subs	r0, r0, r7
 1378 0158 8442     		cmp	r4, r0
 1379 015a 01D8     		bhi	.L104
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 1380              		.loc 1 943 0 is_stmt 0 discriminator 1
 1381 015c 631C     		adds	r3, r4, #1
 1382 015e 38D1     		bne	.L114
 1383              	.L104:
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 1384              		.loc 1 943 0 discriminator 3
 1385 0160 002C     		cmp	r4, #0
 1386 0162 38D0     		beq	.L115
 1387              	.L100:
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1388              		.loc 1 921 0 is_stmt 1
 1389 0164 F38F     		ldrh	r3, [r6, #62]
 1390 0166 9BB2     		uxth	r3, r3
 1391 0168 002B     		cmp	r3, #0
 1392 016a 12D0     		beq	.L96
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1393              		.loc 1 924 0
 1394 016c 3268     		ldr	r2, [r6]
 1395 016e 9368     		ldr	r3, [r2, #8]
 1396 0170 9B07     		lsls	r3, r3, #30
 1397 0172 EED5     		bpl	.L101
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 1398              		.loc 1 926 0
 1399 0174 F38F     		ldrh	r3, [r6, #62]
 1400 0176 9BB2     		uxth	r3, r3
 1401 0178 012B     		cmp	r3, #1
 1402 017a DFD9     		bls	.L102
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
 1403              		.loc 1 929 0
 1404 017c B36B     		ldr	r3, [r6, #56]
 1405 017e 1B88     		ldrh	r3, [r3]
 1406 0180 D360     		str	r3, [r2, #12]
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
 1407              		.loc 1 930 0
 1408 0182 B36B     		ldr	r3, [r6, #56]
 1409 0184 0233     		adds	r3, r3, #2
 1410 0186 B363     		str	r3, [r6, #56]
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 1411              		.loc 1 931 0
 1412 0188 F38F     		ldrh	r3, [r6, #62]
 1413 018a 023B     		subs	r3, r3, #2
 1414 018c 9BB2     		uxth	r3, r3
 1415 018e F387     		strh	r3, [r6, #62]
 1416 0190 E8E7     		b	.L100
 1417              	.L96:
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1418              		.loc 1 960 0
 1419 0192 3A00     		movs	r2, r7
 1420 0194 2100     		movs	r1, r4
ARM GAS  /tmp/ccXTKjLx.s 			page 104


 1421 0196 3000     		movs	r0, r6
 1422 0198 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 1423              	.LVL89:
 1424 019c 0028     		cmp	r0, #0
 1425 019e 01D0     		beq	.L106
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 1426              		.loc 1 962 0
 1427 01a0 2023     		movs	r3, #32
 1428 01a2 3366     		str	r3, [r6, #96]
 1429              	.L106:
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1430              		.loc 1 966 0
 1431 01a4 B368     		ldr	r3, [r6, #8]
 1432 01a6 002B     		cmp	r3, #0
 1433 01a8 06D1     		bne	.L107
 1434              	.LBB2:
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 1435              		.loc 1 968 0
 1436 01aa 0393     		str	r3, [sp, #12]
 1437 01ac 3368     		ldr	r3, [r6]
 1438 01ae DA68     		ldr	r2, [r3, #12]
 1439 01b0 0392     		str	r2, [sp, #12]
 1440 01b2 9B68     		ldr	r3, [r3, #8]
 1441 01b4 0393     		str	r3, [sp, #12]
 1442 01b6 039B     		ldr	r3, [sp, #12]
 1443              	.L107:
 1444              	.LBE2:
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1445              		.loc 1 971 0
 1446 01b8 336E     		ldr	r3, [r6, #96]
 1447 01ba 002B     		cmp	r3, #0
 1448 01bc 0DD1     		bne	.L116
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint16_t initial_TxXferCount;
 1449              		.loc 1 805 0
 1450 01be 0020     		movs	r0, #0
 1451 01c0 36E7     		b	.L85
 1452              	.LVL90:
 1453              	.L110:
 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 1454              		.loc 1 833 0
 1455 01c2 0120     		movs	r0, #1
 1456              	.LVL91:
 1457 01c4 34E7     		b	.L85
 1458              	.LVL92:
 1459              	.L111:
 1460 01c6 0120     		movs	r0, #1
 1461              	.LVL93:
 1462 01c8 32E7     		b	.L85
 1463              	.L112:
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           goto error;
 1464              		.loc 1 896 0
 1465 01ca 0320     		movs	r0, #3
 1466 01cc 30E7     		b	.L85
 1467              	.L113:
 1468 01ce 0320     		movs	r0, #3
 1469 01d0 2EE7     		b	.L85
 1470              	.L114:
ARM GAS  /tmp/ccXTKjLx.s 			page 105


 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           goto error;
 1471              		.loc 1 945 0
 1472 01d2 0320     		movs	r0, #3
 1473 01d4 2CE7     		b	.L85
 1474              	.L115:
 1475 01d6 0320     		movs	r0, #3
 1476 01d8 2AE7     		b	.L85
 1477              	.L116:
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 1478              		.loc 1 973 0
 1479 01da 0120     		movs	r0, #1
 1480 01dc 28E7     		b	.L85
 1481              		.cfi_endproc
 1482              	.LFE44:
 1484              		.section	.text.HAL_SPI_TransmitReceive,"ax",%progbits
 1485              		.align	1
 1486              		.global	HAL_SPI_TransmitReceive
 1487              		.syntax unified
 1488              		.code	16
 1489              		.thumb_func
 1490              		.fpu softvfp
 1492              	HAL_SPI_TransmitReceive:
 1493              	.LFB46:
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint16_t             initial_TxXferCount;
 1494              		.loc 1 1226 0
 1495              		.cfi_startproc
 1496              		@ args = 4, pretend = 0, frame = 8
 1497              		@ frame_needed = 0, uses_anonymous_args = 0
 1498              	.LVL94:
 1499 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1500              	.LCFI14:
 1501              		.cfi_def_cfa_offset 20
 1502              		.cfi_offset 4, -20
 1503              		.cfi_offset 5, -16
 1504              		.cfi_offset 6, -12
 1505              		.cfi_offset 7, -8
 1506              		.cfi_offset 14, -4
 1507 0002 83B0     		sub	sp, sp, #12
 1508              	.LCFI15:
 1509              		.cfi_def_cfa_offset 32
 1510 0004 0400     		movs	r4, r0
 1511 0006 0E00     		movs	r6, r1
 1512 0008 0192     		str	r2, [sp, #4]
 1513 000a 1D00     		movs	r5, r3
 1514              	.LVL95:
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1515              		.loc 1 1253 0
 1516 000c 5C23     		movs	r3, #92
 1517              	.LVL96:
 1518 000e C35C     		ldrb	r3, [r0, r3]
 1519 0010 012B     		cmp	r3, #1
 1520 0012 02D1     		bne	.L158
 1521 0014 0220     		movs	r0, #2
 1522              	.LVL97:
 1523              	.L121:
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1524              		.loc 1 1520 0
ARM GAS  /tmp/ccXTKjLx.s 			page 106


 1525 0016 03B0     		add	sp, sp, #12
 1526              		@ sp needed
 1527              	.LVL98:
 1528              	.LVL99:
 1529 0018 F0BD     		pop	{r4, r5, r6, r7, pc}
 1530              	.LVL100:
 1531              	.L158:
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1532              		.loc 1 1253 0 discriminator 2
 1533 001a 0122     		movs	r2, #1
 1534              	.LVL101:
 1535 001c 5C23     		movs	r3, #92
 1536 001e C254     		strb	r2, [r0, r3]
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1537              		.loc 1 1256 0 discriminator 2
 1538 0020 FFF7FEFF 		bl	HAL_GetTick
 1539              	.LVL102:
 1540 0024 0700     		movs	r7, r0
 1541              	.LVL103:
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 1542              		.loc 1 1259 0 discriminator 2
 1543 0026 5D23     		movs	r3, #93
 1544 0028 E35C     		ldrb	r3, [r4, r3]
 1545 002a DBB2     		uxtb	r3, r3
 1546              	.LVL104:
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   initial_TxXferCount = Size;
 1547              		.loc 1 1260 0 discriminator 2
 1548 002c 6268     		ldr	r2, [r4, #4]
 1549              	.LVL105:
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1550              		.loc 1 1268 0 discriminator 2
 1551 002e 012B     		cmp	r3, #1
 1552 0030 13D0     		beq	.L122
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1553              		.loc 1 1268 0 is_stmt 0 discriminator 1
 1554 0032 8221     		movs	r1, #130
 1555 0034 4900     		lsls	r1, r1, #1
 1556 0036 8A42     		cmp	r2, r1
 1557 0038 07D0     		beq	.L159
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 1558              		.loc 1 1271 0 is_stmt 1
 1559 003a 0220     		movs	r0, #2
 1560              	.LVL106:
 1561              	.L123:
1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1562              		.loc 1 1517 0
 1563 003c 0122     		movs	r2, #1
 1564 003e 5D23     		movs	r3, #93
 1565 0040 E254     		strb	r2, [r4, r3]
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
 1566              		.loc 1 1518 0
 1567 0042 0022     		movs	r2, #0
 1568 0044 013B     		subs	r3, r3, #1
 1569 0046 E254     		strb	r2, [r4, r3]
1519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 1570              		.loc 1 1519 0
 1571 0048 E5E7     		b	.L121
ARM GAS  /tmp/ccXTKjLx.s 			page 107


 1572              	.LVL107:
 1573              	.L159:
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1574              		.loc 1 1269 0
 1575 004a A268     		ldr	r2, [r4, #8]
 1576              	.LVL108:
 1577 004c 002A     		cmp	r2, #0
 1578 004e 00D0     		beq	.LCB1569
 1579 0050 2CE1     		b	.L149	@long jump
 1580              	.LCB1569:
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1581              		.loc 1 1269 0 is_stmt 0 discriminator 1
 1582 0052 042B     		cmp	r3, #4
 1583 0054 01D0     		beq	.L122
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 1584              		.loc 1 1271 0 is_stmt 1
 1585 0056 0220     		movs	r0, #2
 1586              	.LVL109:
 1587 0058 F0E7     		b	.L123
 1588              	.LVL110:
 1589              	.L122:
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1590              		.loc 1 1275 0
 1591 005a 002E     		cmp	r6, #0
 1592 005c 00D1     		bne	.LCB1582
 1593 005e 27E1     		b	.L151	@long jump
 1594              	.LCB1582:
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1595              		.loc 1 1275 0 is_stmt 0 discriminator 1
 1596 0060 019B     		ldr	r3, [sp, #4]
 1597              	.LVL111:
 1598 0062 002B     		cmp	r3, #0
 1599 0064 00D1     		bne	.LCB1586
 1600 0066 25E1     		b	.L152	@long jump
 1601              	.LCB1586:
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1602              		.loc 1 1275 0 discriminator 2
 1603 0068 002D     		cmp	r5, #0
 1604 006a 00D1     		bne	.LCB1588
 1605 006c 24E1     		b	.L153	@long jump
 1606              	.LCB1588:
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1607              		.loc 1 1282 0 is_stmt 1
 1608 006e 5D23     		movs	r3, #93
 1609 0070 E35C     		ldrb	r3, [r4, r3]
 1610 0072 042B     		cmp	r3, #4
 1611 0074 02D0     		beq	.L124
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 1612              		.loc 1 1284 0
 1613 0076 0522     		movs	r2, #5
 1614 0078 5D23     		movs	r3, #93
 1615 007a E254     		strb	r2, [r4, r3]
 1616              	.LVL112:
 1617              	.L124:
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 1618              		.loc 1 1288 0
 1619 007c 0023     		movs	r3, #0
ARM GAS  /tmp/ccXTKjLx.s 			page 108


 1620 007e 2366     		str	r3, [r4, #96]
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1621              		.loc 1 1289 0
 1622 0080 019A     		ldr	r2, [sp, #4]
 1623 0082 2264     		str	r2, [r4, #64]
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1624              		.loc 1 1290 0
 1625 0084 4622     		movs	r2, #70
 1626 0086 A552     		strh	r5, [r4, r2]
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 1627              		.loc 1 1291 0
 1628 0088 023A     		subs	r2, r2, #2
 1629 008a A552     		strh	r5, [r4, r2]
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1630              		.loc 1 1292 0
 1631 008c A663     		str	r6, [r4, #56]
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1632              		.loc 1 1293 0
 1633 008e E587     		strh	r5, [r4, #62]
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1634              		.loc 1 1294 0
 1635 0090 A587     		strh	r5, [r4, #60]
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1636              		.loc 1 1297 0
 1637 0092 E364     		str	r3, [r4, #76]
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1638              		.loc 1 1298 0
 1639 0094 2365     		str	r3, [r4, #80]
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1640              		.loc 1 1309 0
 1641 0096 E023     		movs	r3, #224
 1642 0098 DB00     		lsls	r3, r3, #3
 1643 009a E268     		ldr	r2, [r4, #12]
 1644 009c 9A42     		cmp	r2, r3
 1645 009e 01D8     		bhi	.L125
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1646              		.loc 1 1309 0 is_stmt 0 discriminator 1
 1647 00a0 012D     		cmp	r5, #1
 1648 00a2 23D9     		bls	.L126
 1649              	.L125:
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 1650              		.loc 1 1312 0 is_stmt 1
 1651 00a4 2268     		ldr	r2, [r4]
 1652 00a6 5368     		ldr	r3, [r2, #4]
 1653 00a8 8749     		ldr	r1, .L163
 1654 00aa 0B40     		ands	r3, r1
 1655 00ac 5360     		str	r3, [r2, #4]
 1656              	.L127:
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1657              		.loc 1 1321 0
 1658 00ae 2368     		ldr	r3, [r4]
 1659 00b0 1A68     		ldr	r2, [r3]
 1660 00b2 5206     		lsls	r2, r2, #25
 1661 00b4 03D4     		bmi	.L128
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 1662              		.loc 1 1324 0
 1663 00b6 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccXTKjLx.s 			page 109


 1664 00b8 4021     		movs	r1, #64
 1665 00ba 0A43     		orrs	r2, r1
 1666 00bc 1A60     		str	r2, [r3]
 1667              	.L128:
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1668              		.loc 1 1328 0
 1669 00be E023     		movs	r3, #224
 1670 00c0 DB00     		lsls	r3, r3, #3
 1671 00c2 E268     		ldr	r2, [r4, #12]
 1672 00c4 9A42     		cmp	r2, r3
 1673 00c6 56D9     		bls	.L129
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1674              		.loc 1 1330 0
 1675 00c8 6368     		ldr	r3, [r4, #4]
 1676 00ca 002B     		cmp	r3, #0
 1677 00cc 01D0     		beq	.L130
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1678              		.loc 1 1330 0 is_stmt 0 discriminator 1
 1679 00ce 012D     		cmp	r5, #1
 1680 00d0 0AD1     		bne	.L131
 1681              	.L130:
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 1682              		.loc 1 1332 0 is_stmt 1
 1683 00d2 2368     		ldr	r3, [r4]
 1684 00d4 A26B     		ldr	r2, [r4, #56]
 1685 00d6 1288     		ldrh	r2, [r2]
 1686 00d8 DA60     		str	r2, [r3, #12]
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->TxXferCount--;
 1687              		.loc 1 1333 0
 1688 00da A36B     		ldr	r3, [r4, #56]
 1689 00dc 0233     		adds	r3, r3, #2
 1690 00de A363     		str	r3, [r4, #56]
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 1691              		.loc 1 1334 0
 1692 00e0 E38F     		ldrh	r3, [r4, #62]
 1693 00e2 013B     		subs	r3, r3, #1
 1694 00e4 9BB2     		uxth	r3, r3
 1695 00e6 E387     		strh	r3, [r4, #62]
 1696              	.L131:
1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 1697              		.loc 1 1368 0
 1698 00e8 0125     		movs	r5, #1
 1699              	.LVL113:
 1700 00ea 24E0     		b	.L132
 1701              	.LVL114:
 1702              	.L126:
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 1703              		.loc 1 1317 0
 1704 00ec 2268     		ldr	r2, [r4]
 1705 00ee 5168     		ldr	r1, [r2, #4]
 1706 00f0 8023     		movs	r3, #128
 1707 00f2 5B01     		lsls	r3, r3, #5
 1708 00f4 0B43     		orrs	r3, r1
 1709 00f6 5360     		str	r3, [r2, #4]
 1710 00f8 D9E7     		b	.L127
 1711              	.LVL115:
 1712              	.L133:
ARM GAS  /tmp/ccXTKjLx.s 			page 110


1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1713              		.loc 1 1362 0
 1714 00fa 2368     		ldr	r3, [r4]
 1715 00fc 9A68     		ldr	r2, [r3, #8]
 1716 00fe D207     		lsls	r2, r2, #31
 1717 0100 10D5     		bpl	.L134
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1718              		.loc 1 1362 0 is_stmt 0 discriminator 1
 1719 0102 4622     		movs	r2, #70
 1720 0104 A25A     		ldrh	r2, [r4, r2]
 1721 0106 92B2     		uxth	r2, r2
 1722 0108 002A     		cmp	r2, #0
 1723 010a 0BD0     		beq	.L134
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 1724              		.loc 1 1364 0 is_stmt 1
 1725 010c DB68     		ldr	r3, [r3, #12]
 1726 010e 226C     		ldr	r2, [r4, #64]
 1727 0110 1380     		strh	r3, [r2]
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount--;
 1728              		.loc 1 1365 0
 1729 0112 236C     		ldr	r3, [r4, #64]
 1730 0114 0233     		adds	r3, r3, #2
 1731 0116 2364     		str	r3, [r4, #64]
1366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
 1732              		.loc 1 1366 0
 1733 0118 4622     		movs	r2, #70
 1734 011a A35A     		ldrh	r3, [r4, r2]
 1735 011c 013B     		subs	r3, r3, #1
 1736 011e 9BB2     		uxth	r3, r3
 1737 0120 A352     		strh	r3, [r4, r2]
 1738              	.LVL116:
1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 1739              		.loc 1 1368 0
 1740 0122 0125     		movs	r5, #1
 1741              	.LVL117:
 1742              	.L134:
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1743              		.loc 1 1370 0
 1744 0124 FFF7FEFF 		bl	HAL_GetTick
 1745              	.LVL118:
 1746 0128 C01B     		subs	r0, r0, r7
 1747 012a 089B     		ldr	r3, [sp, #32]
 1748 012c 9842     		cmp	r0, r3
 1749 012e 02D3     		bcc	.L132
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1750              		.loc 1 1370 0 is_stmt 0 discriminator 1
 1751 0130 0133     		adds	r3, r3, #1
 1752 0132 00D0     		beq	.LCB1742
 1753 0134 C2E0     		b	.L154	@long jump
 1754              	.LCB1742:
 1755              	.LVL119:
 1756              	.L132:
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1757              		.loc 1 1336 0 is_stmt 1
 1758 0136 E38F     		ldrh	r3, [r4, #62]
 1759 0138 9BB2     		uxth	r3, r3
 1760 013a 002B     		cmp	r3, #0
ARM GAS  /tmp/ccXTKjLx.s 			page 111


 1761 013c 05D1     		bne	.L135
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1762              		.loc 1 1336 0 is_stmt 0 discriminator 1
 1763 013e 4633     		adds	r3, r3, #70
 1764 0140 E35A     		ldrh	r3, [r4, r3]
 1765 0142 9BB2     		uxth	r3, r3
 1766 0144 002B     		cmp	r3, #0
 1767 0146 00D1     		bne	.LCB1756
 1768 0148 A4E0     		b	.L136	@long jump
 1769              	.LCB1756:
 1770              	.L135:
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1771              		.loc 1 1339 0 is_stmt 1
 1772 014a 2368     		ldr	r3, [r4]
 1773 014c 9A68     		ldr	r2, [r3, #8]
 1774 014e 9207     		lsls	r2, r2, #30
 1775 0150 D3D5     		bpl	.L133
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1776              		.loc 1 1339 0 is_stmt 0 discriminator 1
 1777 0152 E28F     		ldrh	r2, [r4, #62]
 1778 0154 92B2     		uxth	r2, r2
 1779 0156 002A     		cmp	r2, #0
 1780 0158 CFD0     		beq	.L133
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1781              		.loc 1 1339 0 discriminator 2
 1782 015a 012D     		cmp	r5, #1
 1783 015c CDD1     		bne	.L133
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1784              		.loc 1 1341 0 is_stmt 1
 1785 015e A26B     		ldr	r2, [r4, #56]
 1786 0160 1288     		ldrh	r2, [r2]
 1787 0162 DA60     		str	r2, [r3, #12]
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount--;
 1788              		.loc 1 1342 0
 1789 0164 A36B     		ldr	r3, [r4, #56]
 1790 0166 0233     		adds	r3, r3, #2
 1791 0168 A363     		str	r3, [r4, #56]
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
 1792              		.loc 1 1343 0
 1793 016a E38F     		ldrh	r3, [r4, #62]
 1794 016c 013B     		subs	r3, r3, #1
 1795 016e 9BB2     		uxth	r3, r3
 1796 0170 E387     		strh	r3, [r4, #62]
 1797              	.LVL120:
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1798              		.loc 1 1345 0
 1799 0172 0025     		movs	r5, #0
 1800 0174 C1E7     		b	.L133
 1801              	.LVL121:
 1802              	.L129:
1380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1803              		.loc 1 1380 0
 1804 0176 6368     		ldr	r3, [r4, #4]
 1805 0178 002B     		cmp	r3, #0
 1806 017a 01D0     		beq	.L137
1380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1807              		.loc 1 1380 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccXTKjLx.s 			page 112


 1808 017c 012D     		cmp	r5, #1
 1809 017e 0ED1     		bne	.L138
 1810              	.L137:
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1811              		.loc 1 1382 0 is_stmt 1
 1812 0180 E38F     		ldrh	r3, [r4, #62]
 1813 0182 9BB2     		uxth	r3, r3
 1814 0184 012B     		cmp	r3, #1
 1815 0186 0CD9     		bls	.L139
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1816              		.loc 1 1384 0
 1817 0188 2368     		ldr	r3, [r4]
 1818 018a A26B     		ldr	r2, [r4, #56]
 1819 018c 1288     		ldrh	r2, [r2]
 1820 018e DA60     		str	r2, [r3, #12]
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount -= 2U;
 1821              		.loc 1 1385 0
 1822 0190 A36B     		ldr	r3, [r4, #56]
 1823 0192 0233     		adds	r3, r3, #2
 1824 0194 A363     		str	r3, [r4, #56]
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 1825              		.loc 1 1386 0
 1826 0196 E38F     		ldrh	r3, [r4, #62]
 1827 0198 023B     		subs	r3, r3, #2
 1828 019a 9BB2     		uxth	r3, r3
 1829 019c E387     		strh	r3, [r4, #62]
 1830              	.L138:
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 1831              		.loc 1 1450 0
 1832 019e 0125     		movs	r5, #1
 1833              	.LVL122:
 1834 01a0 46E0     		b	.L145
 1835              	.LVL123:
 1836              	.L139:
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pTxBuffPtr++;
 1837              		.loc 1 1390 0
 1838 01a2 A36B     		ldr	r3, [r4, #56]
 1839 01a4 1B78     		ldrb	r3, [r3]
 1840 01a6 2268     		ldr	r2, [r4]
 1841 01a8 1373     		strb	r3, [r2, #12]
1391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount--;
 1842              		.loc 1 1391 0
 1843 01aa A36B     		ldr	r3, [r4, #56]
 1844 01ac 0133     		adds	r3, r3, #1
 1845 01ae A363     		str	r3, [r4, #56]
1392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 1846              		.loc 1 1392 0
 1847 01b0 E38F     		ldrh	r3, [r4, #62]
 1848 01b2 013B     		subs	r3, r3, #1
 1849 01b4 9BB2     		uxth	r3, r3
 1850 01b6 E387     		strh	r3, [r4, #62]
 1851 01b8 F1E7     		b	.L138
 1852              	.LVL124:
 1853              	.L161:
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 1854              		.loc 1 1400 0
 1855 01ba E28F     		ldrh	r2, [r4, #62]
ARM GAS  /tmp/ccXTKjLx.s 			page 113


 1856 01bc 92B2     		uxth	r2, r2
 1857 01be 012A     		cmp	r2, #1
 1858 01c0 0BD9     		bls	.L141
1402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
 1859              		.loc 1 1402 0
 1860 01c2 A26B     		ldr	r2, [r4, #56]
 1861 01c4 1288     		ldrh	r2, [r2]
 1862 01c6 DA60     		str	r2, [r3, #12]
1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
 1863              		.loc 1 1403 0
 1864 01c8 A36B     		ldr	r3, [r4, #56]
 1865 01ca 0233     		adds	r3, r3, #2
 1866 01cc A363     		str	r3, [r4, #56]
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 1867              		.loc 1 1404 0
 1868 01ce E38F     		ldrh	r3, [r4, #62]
 1869 01d0 023B     		subs	r3, r3, #2
 1870 01d2 9BB2     		uxth	r3, r3
 1871 01d4 E387     		strh	r3, [r4, #62]
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1872              		.loc 1 1413 0
 1873 01d6 0025     		movs	r5, #0
 1874              	.LVL125:
 1875 01d8 3DE0     		b	.L140
 1876              	.LVL126:
 1877              	.L141:
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->pTxBuffPtr++;
 1878              		.loc 1 1408 0
 1879 01da A26B     		ldr	r2, [r4, #56]
 1880 01dc 1278     		ldrb	r2, [r2]
 1881 01de 1A73     		strb	r2, [r3, #12]
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->TxXferCount--;
 1882              		.loc 1 1409 0
 1883 01e0 A36B     		ldr	r3, [r4, #56]
 1884 01e2 0133     		adds	r3, r3, #1
 1885 01e4 A363     		str	r3, [r4, #56]
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 1886              		.loc 1 1410 0
 1887 01e6 E38F     		ldrh	r3, [r4, #62]
 1888 01e8 013B     		subs	r3, r3, #1
 1889 01ea 9BB2     		uxth	r3, r3
 1890 01ec E387     		strh	r3, [r4, #62]
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1891              		.loc 1 1413 0
 1892 01ee 0025     		movs	r5, #0
 1893              	.LVL127:
 1894 01f0 31E0     		b	.L140
 1895              	.LVL128:
 1896              	.L162:
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           }
 1897              		.loc 1 1440 0
 1898 01f2 2268     		ldr	r2, [r4]
 1899 01f4 5168     		ldr	r1, [r2, #4]
 1900 01f6 8023     		movs	r3, #128
 1901 01f8 5B01     		lsls	r3, r3, #5
 1902 01fa 0B43     		orrs	r3, r1
 1903 01fc 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/ccXTKjLx.s 			page 114


1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 1904              		.loc 1 1450 0
 1905 01fe 0125     		movs	r5, #1
 1906              	.LVL129:
 1907 0200 0BE0     		b	.L142
 1908              	.LVL130:
 1909              	.L143:
1445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->pRxBuffPtr++;
 1910              		.loc 1 1445 0
 1911 0202 1B7B     		ldrb	r3, [r3, #12]
 1912 0204 226C     		ldr	r2, [r4, #64]
 1913 0206 1370     		strb	r3, [r2]
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->RxXferCount--;
 1914              		.loc 1 1446 0
 1915 0208 236C     		ldr	r3, [r4, #64]
 1916 020a 0133     		adds	r3, r3, #1
 1917 020c 2364     		str	r3, [r4, #64]
1447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 1918              		.loc 1 1447 0
 1919 020e 4622     		movs	r2, #70
 1920 0210 A35A     		ldrh	r3, [r4, r2]
 1921 0212 013B     		subs	r3, r3, #1
 1922 0214 9BB2     		uxth	r3, r3
 1923 0216 A352     		strh	r3, [r4, r2]
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 1924              		.loc 1 1450 0
 1925 0218 0125     		movs	r5, #1
 1926              	.LVL131:
 1927              	.L142:
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1928              		.loc 1 1452 0
 1929 021a FFF7FEFF 		bl	HAL_GetTick
 1930              	.LVL132:
 1931 021e C01B     		subs	r0, r0, r7
 1932 0220 089B     		ldr	r3, [sp, #32]
 1933 0222 8342     		cmp	r3, r0
 1934 0224 01D8     		bhi	.L144
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1935              		.loc 1 1452 0 is_stmt 0 discriminator 1
 1936 0226 0133     		adds	r3, r3, #1
 1937 0228 4AD1     		bne	.L156
 1938              	.L144:
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1939              		.loc 1 1452 0 discriminator 3
 1940 022a 089B     		ldr	r3, [sp, #32]
 1941 022c 002B     		cmp	r3, #0
 1942 022e 49D0     		beq	.L160
 1943              	.LVL133:
 1944              	.L145:
1395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1945              		.loc 1 1395 0 is_stmt 1
 1946 0230 E38F     		ldrh	r3, [r4, #62]
 1947 0232 9BB2     		uxth	r3, r3
 1948 0234 002B     		cmp	r3, #0
 1949 0236 04D1     		bne	.L146
1395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1950              		.loc 1 1395 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccXTKjLx.s 			page 115


 1951 0238 4633     		adds	r3, r3, #70
 1952 023a E35A     		ldrh	r3, [r4, r3]
 1953 023c 9BB2     		uxth	r3, r3
 1954 023e 002B     		cmp	r3, #0
 1955 0240 28D0     		beq	.L136
 1956              	.L146:
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1957              		.loc 1 1398 0 is_stmt 1
 1958 0242 2368     		ldr	r3, [r4]
 1959 0244 9A68     		ldr	r2, [r3, #8]
 1960 0246 9207     		lsls	r2, r2, #30
 1961 0248 05D5     		bpl	.L140
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1962              		.loc 1 1398 0 is_stmt 0 discriminator 1
 1963 024a E28F     		ldrh	r2, [r4, #62]
 1964 024c 92B2     		uxth	r2, r2
 1965 024e 002A     		cmp	r2, #0
 1966 0250 01D0     		beq	.L140
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1967              		.loc 1 1398 0 discriminator 2
 1968 0252 012D     		cmp	r5, #1
 1969 0254 B1D0     		beq	.L161
 1970              	.LVL134:
 1971              	.L140:
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1972              		.loc 1 1430 0 is_stmt 1
 1973 0256 2368     		ldr	r3, [r4]
 1974 0258 9A68     		ldr	r2, [r3, #8]
 1975 025a D207     		lsls	r2, r2, #31
 1976 025c DDD5     		bpl	.L142
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1977              		.loc 1 1430 0 is_stmt 0 discriminator 1
 1978 025e 4622     		movs	r2, #70
 1979 0260 A25A     		ldrh	r2, [r4, r2]
 1980 0262 92B2     		uxth	r2, r2
 1981 0264 002A     		cmp	r2, #0
 1982 0266 D8D0     		beq	.L142
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 1983              		.loc 1 1432 0 is_stmt 1
 1984 0268 4622     		movs	r2, #70
 1985 026a A25A     		ldrh	r2, [r4, r2]
 1986 026c 92B2     		uxth	r2, r2
 1987 026e 012A     		cmp	r2, #1
 1988 0270 C7D9     		bls	.L143
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint16_t);
 1989              		.loc 1 1434 0
 1990 0272 DB68     		ldr	r3, [r3, #12]
 1991 0274 226C     		ldr	r2, [r4, #64]
 1992 0276 1380     		strh	r3, [r2]
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->RxXferCount -= 2U;
 1993              		.loc 1 1435 0
 1994 0278 236C     		ldr	r3, [r4, #64]
 1995 027a 0233     		adds	r3, r3, #2
 1996 027c 2364     		str	r3, [r4, #64]
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           if (hspi->RxXferCount <= 1U)
 1997              		.loc 1 1436 0
 1998 027e 4622     		movs	r2, #70
ARM GAS  /tmp/ccXTKjLx.s 			page 116


 1999 0280 A35A     		ldrh	r3, [r4, r2]
 2000 0282 023B     		subs	r3, r3, #2
 2001 0284 9BB2     		uxth	r3, r3
 2002 0286 A352     		strh	r3, [r4, r2]
1437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           {
 2003              		.loc 1 1437 0
 2004 0288 A35A     		ldrh	r3, [r4, r2]
 2005 028a 9BB2     		uxth	r3, r3
 2006 028c 012B     		cmp	r3, #1
 2007 028e B0D9     		bls	.L162
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 2008              		.loc 1 1450 0
 2009 0290 0125     		movs	r5, #1
 2010              	.LVL135:
 2011 0292 C2E7     		b	.L142
 2012              	.LVL136:
 2013              	.L136:
1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2014              		.loc 1 1510 0
 2015 0294 3A00     		movs	r2, r7
 2016 0296 0899     		ldr	r1, [sp, #32]
 2017 0298 2000     		movs	r0, r4
 2018 029a FFF7FEFF 		bl	SPI_EndRxTxTransaction
 2019              	.LVL137:
 2020 029e 0028     		cmp	r0, #0
 2021 02a0 00D1     		bne	.LCB2027
 2022 02a2 CBE6     		b	.L123	@long jump
 2023              	.LCB2027:
 2024              	.LVL138:
1513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2025              		.loc 1 1513 0
 2026 02a4 2023     		movs	r3, #32
 2027 02a6 2366     		str	r3, [r4, #96]
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 2028              		.loc 1 1512 0
 2029 02a8 0120     		movs	r0, #1
 2030 02aa C7E6     		b	.L123
 2031              	.LVL139:
 2032              	.L149:
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 2033              		.loc 1 1271 0
 2034 02ac 0220     		movs	r0, #2
 2035              	.LVL140:
 2036 02ae C5E6     		b	.L123
 2037              	.LVL141:
 2038              	.L151:
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 2039              		.loc 1 1277 0
 2040 02b0 0120     		movs	r0, #1
 2041              	.LVL142:
 2042 02b2 C3E6     		b	.L123
 2043              	.LVL143:
 2044              	.L152:
 2045 02b4 0120     		movs	r0, #1
 2046              	.LVL144:
 2047 02b6 C1E6     		b	.L123
 2048              	.LVL145:
ARM GAS  /tmp/ccXTKjLx.s 			page 117


 2049              	.L153:
 2050 02b8 0120     		movs	r0, #1
 2051              	.LVL146:
 2052 02ba BFE6     		b	.L123
 2053              	.LVL147:
 2054              	.L154:
1372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         goto error;
 2055              		.loc 1 1372 0
 2056 02bc 0320     		movs	r0, #3
 2057 02be BDE6     		b	.L123
 2058              	.L156:
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         goto error;
 2059              		.loc 1 1454 0
 2060 02c0 0320     		movs	r0, #3
 2061 02c2 BBE6     		b	.L123
 2062              	.L160:
 2063 02c4 0320     		movs	r0, #3
 2064 02c6 B9E6     		b	.L123
 2065              	.L164:
 2066              		.align	2
 2067              	.L163:
 2068 02c8 FFEFFFFF 		.word	-4097
 2069              		.cfi_endproc
 2070              	.LFE46:
 2072              		.section	.text.HAL_SPI_Receive,"ax",%progbits
 2073              		.align	1
 2074              		.global	HAL_SPI_Receive
 2075              		.syntax unified
 2076              		.code	16
 2077              		.thumb_func
 2078              		.fpu softvfp
 2080              	HAL_SPI_Receive:
 2081              	.LFB45:
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
 2082              		.loc 1 993 0
 2083              		.cfi_startproc
 2084              		@ args = 0, pretend = 0, frame = 8
 2085              		@ frame_needed = 0, uses_anonymous_args = 0
 2086              	.LVL148:
 2087 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2088              	.LCFI16:
 2089              		.cfi_def_cfa_offset 20
 2090              		.cfi_offset 4, -20
 2091              		.cfi_offset 5, -16
 2092              		.cfi_offset 6, -12
 2093              		.cfi_offset 7, -8
 2094              		.cfi_offset 14, -4
 2095 0002 85B0     		sub	sp, sp, #20
 2096              	.LCFI17:
 2097              		.cfi_def_cfa_offset 40
 2098 0004 0500     		movs	r5, r0
 2099 0006 0391     		str	r1, [sp, #12]
 2100 0008 1600     		movs	r6, r2
 2101 000a 1C00     		movs	r4, r3
 2102              	.LVL149:
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2103              		.loc 1 1004 0
ARM GAS  /tmp/ccXTKjLx.s 			page 118


 2104 000c 8223     		movs	r3, #130
 2105              	.LVL150:
 2106 000e 5B00     		lsls	r3, r3, #1
 2107 0010 4268     		ldr	r2, [r0, #4]
 2108              	.LVL151:
 2109 0012 9A42     		cmp	r2, r3
 2110 0014 06D0     		beq	.L194
 2111              	.L166:
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2112              		.loc 1 1012 0
 2113 0016 5C23     		movs	r3, #92
 2114 0018 EB5C     		ldrb	r3, [r5, r3]
 2115 001a 012B     		cmp	r3, #1
 2116 001c 0ED1     		bne	.L195
 2117 001e 0220     		movs	r0, #2
 2118              	.LVL152:
 2119              	.L167:
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2120              		.loc 1 1212 0
 2121 0020 05B0     		add	sp, sp, #20
 2122              		@ sp needed
 2123              	.LVL153:
 2124              	.LVL154:
 2125 0022 F0BD     		pop	{r4, r5, r6, r7, pc}
 2126              	.LVL155:
 2127              	.L194:
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2128              		.loc 1 1004 0 discriminator 1
 2129 0024 8368     		ldr	r3, [r0, #8]
 2130 0026 002B     		cmp	r3, #0
 2131 0028 F5D1     		bne	.L166
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 2132              		.loc 1 1006 0
 2133 002a 0422     		movs	r2, #4
 2134 002c 5D33     		adds	r3, r3, #93
 2135 002e C254     		strb	r2, [r0, r3]
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2136              		.loc 1 1008 0
 2137 0030 0094     		str	r4, [sp]
 2138 0032 3300     		movs	r3, r6
 2139 0034 0A00     		movs	r2, r1
 2140 0036 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 2141              	.LVL156:
 2142 003a F1E7     		b	.L167
 2143              	.LVL157:
 2144              	.L195:
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2145              		.loc 1 1012 0 discriminator 2
 2146 003c 0122     		movs	r2, #1
 2147 003e 5C23     		movs	r3, #92
 2148 0040 EA54     		strb	r2, [r5, r3]
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2149              		.loc 1 1015 0 discriminator 2
 2150 0042 FFF7FEFF 		bl	HAL_GetTick
 2151              	.LVL158:
 2152 0046 0700     		movs	r7, r0
 2153              	.LVL159:
ARM GAS  /tmp/ccXTKjLx.s 			page 119


1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2154              		.loc 1 1017 0 discriminator 2
 2155 0048 5D23     		movs	r3, #93
 2156 004a EB5C     		ldrb	r3, [r5, r3]
 2157 004c 012B     		cmp	r3, #1
 2158 004e 07D0     		beq	.L196
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 2159              		.loc 1 1019 0
 2160 0050 0220     		movs	r0, #2
 2161              	.LVL160:
 2162              	.L168:
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2163              		.loc 1 1209 0
 2164 0052 0122     		movs	r2, #1
 2165 0054 5D23     		movs	r3, #93
 2166 0056 EA54     		strb	r2, [r5, r3]
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
 2167              		.loc 1 1210 0
 2168 0058 0022     		movs	r2, #0
 2169 005a 013B     		subs	r3, r3, #1
 2170 005c EA54     		strb	r2, [r5, r3]
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 2171              		.loc 1 1211 0
 2172 005e DFE7     		b	.L167
 2173              	.LVL161:
 2174              	.L196:
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2175              		.loc 1 1023 0
 2176 0060 0399     		ldr	r1, [sp, #12]
 2177 0062 0029     		cmp	r1, #0
 2178 0064 00D1     		bne	.LCB2223
 2179 0066 85E0     		b	.L187	@long jump
 2180              	.LCB2223:
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2181              		.loc 1 1023 0 is_stmt 0 discriminator 1
 2182 0068 002E     		cmp	r6, #0
 2183 006a 00D1     		bne	.LCB2225
 2184 006c 84E0     		b	.L188	@long jump
 2185              	.LCB2225:
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2186              		.loc 1 1030 0 is_stmt 1
 2187 006e 0422     		movs	r2, #4
 2188 0070 5D23     		movs	r3, #93
 2189 0072 EA54     		strb	r2, [r5, r3]
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2190              		.loc 1 1031 0
 2191 0074 0023     		movs	r3, #0
 2192 0076 2B66     		str	r3, [r5, #96]
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2193              		.loc 1 1032 0
 2194 0078 2964     		str	r1, [r5, #64]
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2195              		.loc 1 1033 0
 2196 007a 4422     		movs	r2, #68
 2197 007c AE52     		strh	r6, [r5, r2]
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2198              		.loc 1 1034 0
ARM GAS  /tmp/ccXTKjLx.s 			page 120


 2199 007e 0232     		adds	r2, r2, #2
 2200 0080 AE52     		strh	r6, [r5, r2]
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2201              		.loc 1 1037 0
 2202 0082 AB63     		str	r3, [r5, #56]
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2203              		.loc 1 1038 0
 2204 0084 AB87     		strh	r3, [r5, #60]
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2205              		.loc 1 1039 0
 2206 0086 EB87     		strh	r3, [r5, #62]
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2207              		.loc 1 1040 0
 2208 0088 EB64     		str	r3, [r5, #76]
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2209              		.loc 1 1041 0
 2210 008a 2B65     		str	r3, [r5, #80]
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2211              		.loc 1 1054 0
 2212 008c E023     		movs	r3, #224
 2213 008e DB00     		lsls	r3, r3, #3
 2214 0090 EA68     		ldr	r2, [r5, #12]
 2215 0092 9A42     		cmp	r2, r3
 2216 0094 17D9     		bls	.L169
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2217              		.loc 1 1057 0
 2218 0096 2A68     		ldr	r2, [r5]
 2219 0098 5368     		ldr	r3, [r2, #4]
 2220 009a 3D49     		ldr	r1, .L198
 2221 009c 0B40     		ands	r3, r1
 2222 009e 5360     		str	r3, [r2, #4]
 2223              	.L170:
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2224              		.loc 1 1066 0
 2225 00a0 8023     		movs	r3, #128
 2226 00a2 1B02     		lsls	r3, r3, #8
 2227 00a4 AA68     		ldr	r2, [r5, #8]
 2228 00a6 9A42     		cmp	r2, r3
 2229 00a8 14D0     		beq	.L197
 2230              	.L171:
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2231              		.loc 1 1072 0
 2232 00aa 2B68     		ldr	r3, [r5]
 2233 00ac 1A68     		ldr	r2, [r3]
 2234 00ae 5206     		lsls	r2, r2, #25
 2235 00b0 03D4     		bmi	.L172
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2236              		.loc 1 1075 0
 2237 00b2 1A68     		ldr	r2, [r3]
 2238 00b4 4021     		movs	r1, #64
 2239 00b6 0A43     		orrs	r2, r1
 2240 00b8 1A60     		str	r2, [r3]
 2241              	.L172:
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2242              		.loc 1 1079 0
 2243 00ba E023     		movs	r3, #224
 2244 00bc DB00     		lsls	r3, r3, #3
ARM GAS  /tmp/ccXTKjLx.s 			page 121


 2245 00be EA68     		ldr	r2, [r5, #12]
 2246 00c0 9A42     		cmp	r2, r3
 2247 00c2 16D9     		bls	.L173
 2248 00c4 33E0     		b	.L174
 2249              	.L169:
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2250              		.loc 1 1062 0
 2251 00c6 2A68     		ldr	r2, [r5]
 2252 00c8 5168     		ldr	r1, [r2, #4]
 2253 00ca 8023     		movs	r3, #128
 2254 00cc 5B01     		lsls	r3, r3, #5
 2255 00ce 0B43     		orrs	r3, r1
 2256 00d0 5360     		str	r3, [r2, #4]
 2257 00d2 E5E7     		b	.L170
 2258              	.L197:
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2259              		.loc 1 1068 0
 2260 00d4 2A68     		ldr	r2, [r5]
 2261 00d6 1368     		ldr	r3, [r2]
 2262 00d8 2E49     		ldr	r1, .L198+4
 2263 00da 0B40     		ands	r3, r1
 2264 00dc 1360     		str	r3, [r2]
 2265 00de E4E7     		b	.L171
 2266              	.LVL162:
 2267              	.L175:
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 2268              		.loc 1 1095 0
 2269 00e0 FFF7FEFF 		bl	HAL_GetTick
 2270              	.LVL163:
 2271 00e4 C01B     		subs	r0, r0, r7
 2272 00e6 8442     		cmp	r4, r0
 2273 00e8 01D8     		bhi	.L177
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 2274              		.loc 1 1095 0 is_stmt 0 discriminator 1
 2275 00ea 631C     		adds	r3, r4, #1
 2276 00ec 46D1     		bne	.L189
 2277              	.L177:
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 2278              		.loc 1 1095 0 discriminator 3
 2279 00ee 002C     		cmp	r4, #0
 2280 00f0 46D0     		beq	.L190
 2281              	.L173:
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 2282              		.loc 1 1082 0 is_stmt 1
 2283 00f2 4623     		movs	r3, #70
 2284 00f4 EB5A     		ldrh	r3, [r5, r3]
 2285 00f6 9BB2     		uxth	r3, r3
 2286 00f8 002B     		cmp	r3, #0
 2287 00fa 2DD0     		beq	.L179
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 2288              		.loc 1 1085 0
 2289 00fc 2B68     		ldr	r3, [r5]
 2290 00fe 9A68     		ldr	r2, [r3, #8]
 2291 0100 D207     		lsls	r2, r2, #31
 2292 0102 EDD5     		bpl	.L175
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
 2293              		.loc 1 1088 0
ARM GAS  /tmp/ccXTKjLx.s 			page 122


 2294 0104 1B7B     		ldrb	r3, [r3, #12]
 2295 0106 2A6C     		ldr	r2, [r5, #64]
 2296 0108 1370     		strb	r3, [r2]
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount--;
 2297              		.loc 1 1089 0
 2298 010a 2B6C     		ldr	r3, [r5, #64]
 2299 010c 0133     		adds	r3, r3, #1
 2300 010e 2B64     		str	r3, [r5, #64]
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 2301              		.loc 1 1090 0
 2302 0110 4622     		movs	r2, #70
 2303 0112 AB5A     		ldrh	r3, [r5, r2]
 2304 0114 013B     		subs	r3, r3, #1
 2305 0116 9BB2     		uxth	r3, r3
 2306 0118 AB52     		strh	r3, [r5, r2]
 2307 011a EAE7     		b	.L173
 2308              	.L180:
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 2309              		.loc 1 1118 0
 2310 011c FFF7FEFF 		bl	HAL_GetTick
 2311              	.LVL164:
 2312 0120 C01B     		subs	r0, r0, r7
 2313 0122 8442     		cmp	r4, r0
 2314 0124 01D8     		bhi	.L182
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 2315              		.loc 1 1118 0 is_stmt 0 discriminator 1
 2316 0126 631C     		adds	r3, r4, #1
 2317 0128 2CD1     		bne	.L191
 2318              	.L182:
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 2319              		.loc 1 1118 0 discriminator 3
 2320 012a 002C     		cmp	r4, #0
 2321 012c 2CD0     		beq	.L192
 2322              	.L174:
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 2323              		.loc 1 1106 0 is_stmt 1
 2324 012e 4623     		movs	r3, #70
 2325 0130 EB5A     		ldrh	r3, [r5, r3]
 2326 0132 9BB2     		uxth	r3, r3
 2327 0134 002B     		cmp	r3, #0
 2328 0136 0FD0     		beq	.L179
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 2329              		.loc 1 1109 0
 2330 0138 2B68     		ldr	r3, [r5]
 2331 013a 9A68     		ldr	r2, [r3, #8]
 2332 013c D207     		lsls	r2, r2, #31
 2333 013e EDD5     		bpl	.L180
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 2334              		.loc 1 1111 0
 2335 0140 DB68     		ldr	r3, [r3, #12]
 2336 0142 2A6C     		ldr	r2, [r5, #64]
 2337 0144 1380     		strh	r3, [r2]
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount--;
 2338              		.loc 1 1112 0
 2339 0146 2B6C     		ldr	r3, [r5, #64]
 2340 0148 0233     		adds	r3, r3, #2
 2341 014a 2B64     		str	r3, [r5, #64]
ARM GAS  /tmp/ccXTKjLx.s 			page 123


1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 2342              		.loc 1 1113 0
 2343 014c 4622     		movs	r2, #70
 2344 014e AB5A     		ldrh	r3, [r5, r2]
 2345 0150 013B     		subs	r3, r3, #1
 2346 0152 9BB2     		uxth	r3, r3
 2347 0154 AB52     		strh	r3, [r5, r2]
 2348 0156 EAE7     		b	.L174
 2349              	.L179:
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2350              		.loc 1 1189 0
 2351 0158 3A00     		movs	r2, r7
 2352 015a 2100     		movs	r1, r4
 2353 015c 2800     		movs	r0, r5
 2354 015e FFF7FEFF 		bl	SPI_EndRxTransaction
 2355              	.LVL165:
 2356 0162 0028     		cmp	r0, #0
 2357 0164 01D0     		beq	.L184
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2358              		.loc 1 1191 0
 2359 0166 2023     		movs	r3, #32
 2360 0168 2B66     		str	r3, [r5, #96]
 2361              	.L184:
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2362              		.loc 1 1203 0
 2363 016a 2B6E     		ldr	r3, [r5, #96]
 2364 016c 002B     		cmp	r3, #0
 2365 016e 0DD1     		bne	.L193
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2366              		.loc 1 995 0
 2367 0170 0020     		movs	r0, #0
 2368 0172 6EE7     		b	.L168
 2369              	.LVL166:
 2370              	.L187:
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 2371              		.loc 1 1025 0
 2372 0174 0120     		movs	r0, #1
 2373              	.LVL167:
 2374 0176 6CE7     		b	.L168
 2375              	.LVL168:
 2376              	.L188:
 2377 0178 0120     		movs	r0, #1
 2378              	.LVL169:
 2379 017a 6AE7     		b	.L168
 2380              	.L189:
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           goto error;
 2381              		.loc 1 1097 0
 2382 017c 0320     		movs	r0, #3
 2383 017e 68E7     		b	.L168
 2384              	.L190:
 2385 0180 0320     		movs	r0, #3
 2386 0182 66E7     		b	.L168
 2387              	.L191:
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           goto error;
 2388              		.loc 1 1120 0
 2389 0184 0320     		movs	r0, #3
 2390 0186 64E7     		b	.L168
ARM GAS  /tmp/ccXTKjLx.s 			page 124


 2391              	.L192:
 2392 0188 0320     		movs	r0, #3
 2393 018a 62E7     		b	.L168
 2394              	.L193:
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2395              		.loc 1 1205 0
 2396 018c 0120     		movs	r0, #1
 2397 018e 60E7     		b	.L168
 2398              	.L199:
 2399              		.align	2
 2400              	.L198:
 2401 0190 FFEFFFFF 		.word	-4097
 2402 0194 FFBFFFFF 		.word	-16385
 2403              		.cfi_endproc
 2404              	.LFE45:
 2406              		.section	.text.HAL_SPI_Transmit_IT,"ax",%progbits
 2407              		.align	1
 2408              		.global	HAL_SPI_Transmit_IT
 2409              		.syntax unified
 2410              		.code	16
 2411              		.thumb_func
 2412              		.fpu softvfp
 2414              	HAL_SPI_Transmit_IT:
 2415              	.LFB47:
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2416              		.loc 1 1531 0
 2417              		.cfi_startproc
 2418              		@ args = 0, pretend = 0, frame = 0
 2419              		@ frame_needed = 0, uses_anonymous_args = 0
 2420              	.LVL170:
 2421 0000 30B5     		push	{r4, r5, lr}
 2422              	.LCFI18:
 2423              		.cfi_def_cfa_offset 12
 2424              		.cfi_offset 4, -12
 2425              		.cfi_offset 5, -8
 2426              		.cfi_offset 14, -4
 2427              	.LVL171:
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2428              		.loc 1 1534 0
 2429 0002 C568     		ldr	r5, [r0, #12]
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2430              		.loc 1 1545 0
 2431 0004 5C23     		movs	r3, #92
 2432 0006 C35C     		ldrb	r3, [r0, r3]
 2433 0008 012B     		cmp	r3, #1
 2434 000a 48D0     		beq	.L206
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2435              		.loc 1 1545 0 is_stmt 0 discriminator 2
 2436 000c 0124     		movs	r4, #1
 2437 000e 5C23     		movs	r3, #92
 2438 0010 C454     		strb	r4, [r0, r3]
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2439              		.loc 1 1547 0 is_stmt 1 discriminator 2
 2440 0012 0029     		cmp	r1, #0
 2441 0014 39D0     		beq	.L207
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2442              		.loc 1 1547 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccXTKjLx.s 			page 125


 2443 0016 002A     		cmp	r2, #0
 2444 0018 39D0     		beq	.L208
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2445              		.loc 1 1553 0 is_stmt 1
 2446 001a 0133     		adds	r3, r3, #1
 2447 001c C35C     		ldrb	r3, [r0, r3]
 2448 001e 012B     		cmp	r3, #1
 2449 0020 01D0     		beq	.L211
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 2450              		.loc 1 1555 0
 2451 0022 0223     		movs	r3, #2
 2452 0024 34E0     		b	.L202
 2453              	.L211:
1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2454              		.loc 1 1560 0
 2455 0026 0234     		adds	r4, r4, #2
 2456 0028 5C33     		adds	r3, r3, #92
 2457 002a C454     		strb	r4, [r0, r3]
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 2458              		.loc 1 1561 0
 2459 002c 0023     		movs	r3, #0
 2460 002e 0366     		str	r3, [r0, #96]
1562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2461              		.loc 1 1562 0
 2462 0030 8163     		str	r1, [r0, #56]
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2463              		.loc 1 1563 0
 2464 0032 8287     		strh	r2, [r0, #60]
1564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2465              		.loc 1 1564 0
 2466 0034 C287     		strh	r2, [r0, #62]
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 2467              		.loc 1 1567 0
 2468 0036 0364     		str	r3, [r0, #64]
1568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 2469              		.loc 1 1568 0
 2470 0038 4422     		movs	r2, #68
 2471              	.LVL172:
 2472 003a 8352     		strh	r3, [r0, r2]
 2473              	.LVL173:
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2474              		.loc 1 1569 0
 2475 003c 0232     		adds	r2, r2, #2
 2476 003e 8352     		strh	r3, [r0, r2]
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2477              		.loc 1 1570 0
 2478 0040 C364     		str	r3, [r0, #76]
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2479              		.loc 1 1573 0
 2480 0042 E023     		movs	r3, #224
 2481 0044 DB00     		lsls	r3, r3, #3
 2482 0046 9D42     		cmp	r5, r3
 2483 0048 15D9     		bls	.L203
1575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2484              		.loc 1 1575 0
 2485 004a 164B     		ldr	r3, .L213
 2486 004c 0365     		str	r3, [r0, #80]
ARM GAS  /tmp/ccXTKjLx.s 			page 126


 2487              	.L204:
1583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2488              		.loc 1 1583 0
 2489 004e 8023     		movs	r3, #128
 2490 0050 1B02     		lsls	r3, r3, #8
 2491 0052 8268     		ldr	r2, [r0, #8]
 2492 0054 9A42     		cmp	r2, r3
 2493 0056 11D0     		beq	.L212
 2494              	.LVL174:
 2495              	.L205:
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2496              		.loc 1 1597 0
 2497 0058 0268     		ldr	r2, [r0]
 2498 005a 5368     		ldr	r3, [r2, #4]
 2499 005c A021     		movs	r1, #160
 2500 005e 0B43     		orrs	r3, r1
 2501 0060 5360     		str	r3, [r2, #4]
1601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2502              		.loc 1 1601 0
 2503 0062 0368     		ldr	r3, [r0]
 2504 0064 1A68     		ldr	r2, [r3]
 2505 0066 5206     		lsls	r2, r2, #25
 2506 0068 17D4     		bmi	.L210
1604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2507              		.loc 1 1604 0
 2508 006a 1A68     		ldr	r2, [r3]
 2509 006c 6039     		subs	r1, r1, #96
 2510 006e 0A43     		orrs	r2, r1
 2511 0070 1A60     		str	r2, [r3]
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2512              		.loc 1 1532 0
 2513 0072 0023     		movs	r3, #0
 2514 0074 0CE0     		b	.L202
 2515              	.LVL175:
 2516              	.L203:
1579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2517              		.loc 1 1579 0
 2518 0076 0C4B     		ldr	r3, .L213+4
 2519 0078 0365     		str	r3, [r0, #80]
 2520 007a E8E7     		b	.L204
 2521              	.L212:
1585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2522              		.loc 1 1585 0
 2523 007c 0268     		ldr	r2, [r0]
 2524 007e 1168     		ldr	r1, [r2]
 2525              	.LVL176:
 2526 0080 8023     		movs	r3, #128
 2527 0082 DB01     		lsls	r3, r3, #7
 2528 0084 0B43     		orrs	r3, r1
 2529 0086 1360     		str	r3, [r2]
 2530 0088 E6E7     		b	.L205
 2531              	.LVL177:
 2532              	.L207:
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 2533              		.loc 1 1549 0
 2534 008a 0123     		movs	r3, #1
 2535 008c 00E0     		b	.L202
ARM GAS  /tmp/ccXTKjLx.s 			page 127


 2536              	.L208:
 2537 008e 0123     		movs	r3, #1
 2538              	.LVL178:
 2539              	.L202:
1608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
 2540              		.loc 1 1608 0
 2541 0090 0021     		movs	r1, #0
 2542 0092 5C22     		movs	r2, #92
 2543 0094 8154     		strb	r1, [r0, r2]
 2544              	.LVL179:
 2545              	.L201:
1610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2546              		.loc 1 1610 0
 2547 0096 1800     		movs	r0, r3
 2548              	.LVL180:
 2549              		@ sp needed
 2550 0098 30BD     		pop	{r4, r5, pc}
 2551              	.LVL181:
 2552              	.L210:
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2553              		.loc 1 1532 0
 2554 009a 0023     		movs	r3, #0
 2555 009c F8E7     		b	.L202
 2556              	.LVL182:
 2557              	.L206:
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2558              		.loc 1 1545 0
 2559 009e 0223     		movs	r3, #2
 2560 00a0 F9E7     		b	.L201
 2561              	.L214:
 2562 00a2 C046     		.align	2
 2563              	.L213:
 2564 00a4 00000000 		.word	SPI_TxISR_16BIT
 2565 00a8 00000000 		.word	SPI_TxISR_8BIT
 2566              		.cfi_endproc
 2567              	.LFE47:
 2569              		.section	.text.HAL_SPI_TransmitReceive_IT,"ax",%progbits
 2570              		.align	1
 2571              		.global	HAL_SPI_TransmitReceive_IT
 2572              		.syntax unified
 2573              		.code	16
 2574              		.thumb_func
 2575              		.fpu softvfp
 2577              	HAL_SPI_TransmitReceive_IT:
 2578              	.LFB49:
1733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t             tmp_mode;
 2579              		.loc 1 1733 0
 2580              		.cfi_startproc
 2581              		@ args = 0, pretend = 0, frame = 0
 2582              		@ frame_needed = 0, uses_anonymous_args = 0
 2583              	.LVL183:
 2584 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2585              	.LCFI19:
 2586              		.cfi_def_cfa_offset 20
 2587              		.cfi_offset 4, -20
 2588              		.cfi_offset 5, -16
 2589              		.cfi_offset 6, -12
ARM GAS  /tmp/ccXTKjLx.s 			page 128


 2590              		.cfi_offset 7, -8
 2591              		.cfi_offset 14, -4
 2592              	.LVL184:
1738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2593              		.loc 1 1738 0
 2594 0002 C668     		ldr	r6, [r0, #12]
1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2595              		.loc 1 1750 0
 2596 0004 5C24     		movs	r4, #92
 2597 0006 045D     		ldrb	r4, [r0, r4]
 2598 0008 012C     		cmp	r4, #1
 2599 000a 69D0     		beq	.L225
1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2600              		.loc 1 1750 0 is_stmt 0 discriminator 2
 2601 000c 0125     		movs	r5, #1
 2602 000e 5C24     		movs	r4, #92
 2603 0010 0555     		strb	r5, [r0, r4]
1753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 2604              		.loc 1 1753 0 is_stmt 1 discriminator 2
 2605 0012 0134     		adds	r4, r4, #1
 2606 0014 045D     		ldrb	r4, [r0, r4]
 2607 0016 E4B2     		uxtb	r4, r4
 2608              	.LVL185:
1754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2609              		.loc 1 1754 0 discriminator 2
 2610 0018 4568     		ldr	r5, [r0, #4]
 2611              	.LVL186:
1756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2612              		.loc 1 1756 0 discriminator 2
 2613 001a 012C     		cmp	r4, #1
 2614 001c 10D0     		beq	.L217
1756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2615              		.loc 1 1756 0 is_stmt 0 discriminator 1
 2616 001e 8227     		movs	r7, #130
 2617 0020 7F00     		lsls	r7, r7, #1
 2618 0022 BD42     		cmp	r5, r7
 2619 0024 05D0     		beq	.L233
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 2620              		.loc 1 1759 0 is_stmt 1
 2621 0026 0223     		movs	r3, #2
 2622              	.LVL187:
 2623              	.L218:
1837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
 2624              		.loc 1 1837 0
 2625 0028 0021     		movs	r1, #0
 2626 002a 5C22     		movs	r2, #92
 2627 002c 8154     		strb	r1, [r0, r2]
 2628              	.LVL188:
 2629              	.L216:
1839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2630              		.loc 1 1839 0
 2631 002e 1800     		movs	r0, r3
 2632              	.LVL189:
 2633              		@ sp needed
 2634 0030 F0BD     		pop	{r4, r5, r6, r7, pc}
 2635              	.LVL190:
 2636              	.L233:
ARM GAS  /tmp/ccXTKjLx.s 			page 129


1757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2637              		.loc 1 1757 0
 2638 0032 8568     		ldr	r5, [r0, #8]
 2639              	.LVL191:
 2640 0034 002D     		cmp	r5, #0
 2641 0036 49D1     		bne	.L227
1757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2642              		.loc 1 1757 0 is_stmt 0 discriminator 1
 2643 0038 042C     		cmp	r4, #4
 2644 003a 01D0     		beq	.L217
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 2645              		.loc 1 1759 0 is_stmt 1
 2646 003c 0223     		movs	r3, #2
 2647              	.LVL192:
 2648 003e F3E7     		b	.L218
 2649              	.LVL193:
 2650              	.L217:
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2651              		.loc 1 1763 0
 2652 0040 0029     		cmp	r1, #0
 2653 0042 45D0     		beq	.L229
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2654              		.loc 1 1763 0 is_stmt 0 discriminator 1
 2655 0044 002A     		cmp	r2, #0
 2656 0046 45D0     		beq	.L230
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2657              		.loc 1 1763 0 discriminator 2
 2658 0048 002B     		cmp	r3, #0
 2659 004a 45D0     		beq	.L231
1770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2660              		.loc 1 1770 0 is_stmt 1
 2661 004c 5D24     		movs	r4, #93
 2662              	.LVL194:
 2663 004e 045D     		ldrb	r4, [r0, r4]
 2664 0050 042C     		cmp	r4, #4
 2665 0052 02D0     		beq	.L219
1772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2666              		.loc 1 1772 0
 2667 0054 0525     		movs	r5, #5
 2668 0056 5D24     		movs	r4, #93
 2669 0058 0555     		strb	r5, [r0, r4]
 2670              	.LVL195:
 2671              	.L219:
1776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 2672              		.loc 1 1776 0
 2673 005a 0024     		movs	r4, #0
 2674 005c 0466     		str	r4, [r0, #96]
1777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2675              		.loc 1 1777 0
 2676 005e 8163     		str	r1, [r0, #56]
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2677              		.loc 1 1778 0
 2678 0060 8387     		strh	r3, [r0, #60]
1779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 2679              		.loc 1 1779 0
 2680 0062 C387     		strh	r3, [r0, #62]
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
ARM GAS  /tmp/ccXTKjLx.s 			page 130


 2681              		.loc 1 1780 0
 2682 0064 0264     		str	r2, [r0, #64]
1781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2683              		.loc 1 1781 0
 2684 0066 4422     		movs	r2, #68
 2685              	.LVL196:
 2686 0068 8352     		strh	r3, [r0, r2]
 2687              	.LVL197:
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2688              		.loc 1 1782 0
 2689 006a 0232     		adds	r2, r2, #2
 2690 006c 8352     		strh	r3, [r0, r2]
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2691              		.loc 1 1785 0
 2692 006e E022     		movs	r2, #224
 2693 0070 D200     		lsls	r2, r2, #3
 2694 0072 9642     		cmp	r6, r2
 2695 0074 1ED9     		bls	.L220
1787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
 2696              		.loc 1 1787 0
 2697 0076 1B4A     		ldr	r2, .L234
 2698 0078 C264     		str	r2, [r0, #76]
1788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2699              		.loc 1 1788 0
 2700 007a 1B4A     		ldr	r2, .L234+4
 2701 007c 0265     		str	r2, [r0, #80]
 2702              	.L221:
1814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2703              		.loc 1 1814 0
 2704 007e E022     		movs	r2, #224
 2705 0080 D200     		lsls	r2, r2, #3
 2706 0082 C168     		ldr	r1, [r0, #12]
 2707              	.LVL198:
 2708 0084 9142     		cmp	r1, r2
 2709 0086 01D8     		bhi	.L222
1814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2710              		.loc 1 1814 0 is_stmt 0 discriminator 1
 2711 0088 012B     		cmp	r3, #1
 2712 008a 18D9     		bls	.L223
 2713              	.L222:
1817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2714              		.loc 1 1817 0 is_stmt 1
 2715 008c 0268     		ldr	r2, [r0]
 2716 008e 5368     		ldr	r3, [r2, #4]
 2717              	.LVL199:
 2718 0090 1649     		ldr	r1, .L234+8
 2719 0092 0B40     		ands	r3, r1
 2720 0094 5360     		str	r3, [r2, #4]
 2721              	.L224:
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2722              		.loc 1 1826 0
 2723 0096 0268     		ldr	r2, [r0]
 2724 0098 5368     		ldr	r3, [r2, #4]
 2725 009a E021     		movs	r1, #224
 2726 009c 0B43     		orrs	r3, r1
 2727 009e 5360     		str	r3, [r2, #4]
1829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccXTKjLx.s 			page 131


 2728              		.loc 1 1829 0
 2729 00a0 0368     		ldr	r3, [r0]
 2730 00a2 1A68     		ldr	r2, [r3]
 2731 00a4 5206     		lsls	r2, r2, #25
 2732 00a6 19D4     		bmi	.L232
1832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2733              		.loc 1 1832 0
 2734 00a8 1A68     		ldr	r2, [r3]
 2735 00aa A039     		subs	r1, r1, #160
 2736 00ac 0A43     		orrs	r2, r1
 2737 00ae 1A60     		str	r2, [r3]
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2738              		.loc 1 1736 0
 2739 00b0 0023     		movs	r3, #0
 2740 00b2 B9E7     		b	.L218
 2741              	.LVL200:
 2742              	.L220:
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
 2743              		.loc 1 1792 0
 2744 00b4 0E4A     		ldr	r2, .L234+12
 2745 00b6 C264     		str	r2, [r0, #76]
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2746              		.loc 1 1793 0
 2747 00b8 0E4A     		ldr	r2, .L234+16
 2748 00ba 0265     		str	r2, [r0, #80]
 2749 00bc DFE7     		b	.L221
 2750              	.LVL201:
 2751              	.L223:
1822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2752              		.loc 1 1822 0
 2753 00be 0268     		ldr	r2, [r0]
 2754 00c0 5168     		ldr	r1, [r2, #4]
 2755 00c2 8023     		movs	r3, #128
 2756              	.LVL202:
 2757 00c4 5B01     		lsls	r3, r3, #5
 2758 00c6 0B43     		orrs	r3, r1
 2759 00c8 5360     		str	r3, [r2, #4]
 2760 00ca E4E7     		b	.L224
 2761              	.LVL203:
 2762              	.L227:
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 2763              		.loc 1 1759 0
 2764 00cc 0223     		movs	r3, #2
 2765              	.LVL204:
 2766 00ce ABE7     		b	.L218
 2767              	.LVL205:
 2768              	.L229:
1765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 2769              		.loc 1 1765 0
 2770 00d0 0123     		movs	r3, #1
 2771              	.LVL206:
 2772 00d2 A9E7     		b	.L218
 2773              	.LVL207:
 2774              	.L230:
 2775 00d4 0123     		movs	r3, #1
 2776              	.LVL208:
 2777 00d6 A7E7     		b	.L218
ARM GAS  /tmp/ccXTKjLx.s 			page 132


 2778              	.LVL209:
 2779              	.L231:
 2780 00d8 0123     		movs	r3, #1
 2781              	.LVL210:
 2782 00da A5E7     		b	.L218
 2783              	.LVL211:
 2784              	.L232:
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2785              		.loc 1 1736 0
 2786 00dc 0023     		movs	r3, #0
 2787 00de A3E7     		b	.L218
 2788              	.LVL212:
 2789              	.L225:
1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2790              		.loc 1 1750 0
 2791 00e0 0223     		movs	r3, #2
 2792              	.LVL213:
 2793 00e2 A4E7     		b	.L216
 2794              	.L235:
 2795              		.align	2
 2796              	.L234:
 2797 00e4 00000000 		.word	SPI_2linesRxISR_16BIT
 2798 00e8 00000000 		.word	SPI_2linesTxISR_16BIT
 2799 00ec FFEFFFFF 		.word	-4097
 2800 00f0 00000000 		.word	SPI_2linesRxISR_8BIT
 2801 00f4 00000000 		.word	SPI_2linesTxISR_8BIT
 2802              		.cfi_endproc
 2803              	.LFE49:
 2805              		.section	.text.HAL_SPI_Receive_IT,"ax",%progbits
 2806              		.align	1
 2807              		.global	HAL_SPI_Receive_IT
 2808              		.syntax unified
 2809              		.code	16
 2810              		.thumb_func
 2811              		.fpu softvfp
 2813              	HAL_SPI_Receive_IT:
 2814              	.LFB48:
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2815              		.loc 1 1621 0
 2816              		.cfi_startproc
 2817              		@ args = 0, pretend = 0, frame = 0
 2818              		@ frame_needed = 0, uses_anonymous_args = 0
 2819              	.LVL214:
 2820 0000 70B5     		push	{r4, r5, r6, lr}
 2821              	.LCFI20:
 2822              		.cfi_def_cfa_offset 16
 2823              		.cfi_offset 4, -16
 2824              		.cfi_offset 5, -12
 2825              		.cfi_offset 6, -8
 2826              		.cfi_offset 14, -4
 2827              	.LVL215:
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2828              		.loc 1 1624 0
 2829 0002 C568     		ldr	r5, [r0, #12]
1631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2830              		.loc 1 1631 0
 2831 0004 8368     		ldr	r3, [r0, #8]
ARM GAS  /tmp/ccXTKjLx.s 			page 133


 2832 0006 002B     		cmp	r3, #0
 2833 0008 04D1     		bne	.L237
1631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2834              		.loc 1 1631 0 is_stmt 0 discriminator 1
 2835 000a 0533     		adds	r3, r3, #5
 2836 000c FF33     		adds	r3, r3, #255
 2837 000e 4468     		ldr	r4, [r0, #4]
 2838 0010 9C42     		cmp	r4, r3
 2839 0012 10D0     		beq	.L248
 2840              	.L237:
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2841              		.loc 1 1639 0 is_stmt 1
 2842 0014 5C24     		movs	r4, #92
 2843 0016 045D     		ldrb	r4, [r0, r4]
 2844 0018 012C     		cmp	r4, #1
 2845 001a 5BD0     		beq	.L243
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2846              		.loc 1 1639 0 is_stmt 0 discriminator 2
 2847 001c 0124     		movs	r4, #1
 2848 001e 5C23     		movs	r3, #92
 2849 0020 C454     		strb	r4, [r0, r3]
1641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2850              		.loc 1 1641 0 is_stmt 1 discriminator 2
 2851 0022 0133     		adds	r3, r3, #1
 2852 0024 C35C     		ldrb	r3, [r0, r3]
 2853 0026 012B     		cmp	r3, #1
 2854 0028 0ED0     		beq	.L249
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 2855              		.loc 1 1643 0
 2856 002a 0223     		movs	r3, #2
 2857              	.LVL216:
 2858              	.L239:
1719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
 2859              		.loc 1 1719 0
 2860 002c 0021     		movs	r1, #0
 2861 002e 5C22     		movs	r2, #92
 2862 0030 8154     		strb	r1, [r0, r2]
 2863              	.LVL217:
 2864              	.L238:
1721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2865              		.loc 1 1721 0
 2866 0032 1800     		movs	r0, r3
 2867              		@ sp needed
 2868 0034 70BD     		pop	{r4, r5, r6, pc}
 2869              	.LVL218:
 2870              	.L248:
1633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 2871              		.loc 1 1633 0
 2872 0036 0424     		movs	r4, #4
 2873 0038 A73B     		subs	r3, r3, #167
 2874 003a C454     		strb	r4, [r0, r3]
1635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2875              		.loc 1 1635 0
 2876 003c 1300     		movs	r3, r2
 2877 003e 0A00     		movs	r2, r1
 2878              	.LVL219:
 2879 0040 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_IT
ARM GAS  /tmp/ccXTKjLx.s 			page 134


 2880              	.LVL220:
 2881 0044 0300     		movs	r3, r0
 2882 0046 F4E7     		b	.L238
 2883              	.LVL221:
 2884              	.L249:
1647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2885              		.loc 1 1647 0
 2886 0048 0029     		cmp	r1, #0
 2887 004a 3DD0     		beq	.L245
1647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2888              		.loc 1 1647 0 is_stmt 0 discriminator 1
 2889 004c 002A     		cmp	r2, #0
 2890 004e 3DD0     		beq	.L246
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2891              		.loc 1 1654 0 is_stmt 1
 2892 0050 0334     		adds	r4, r4, #3
 2893 0052 5C33     		adds	r3, r3, #92
 2894 0054 C454     		strb	r4, [r0, r3]
1655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2895              		.loc 1 1655 0
 2896 0056 0023     		movs	r3, #0
 2897 0058 0366     		str	r3, [r0, #96]
1656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2898              		.loc 1 1656 0
 2899 005a 0164     		str	r1, [r0, #64]
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2900              		.loc 1 1657 0
 2901 005c 4421     		movs	r1, #68
 2902              	.LVL222:
 2903 005e 4252     		strh	r2, [r0, r1]
 2904              	.LVL223:
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2905              		.loc 1 1658 0
 2906 0060 0231     		adds	r1, r1, #2
 2907 0062 4252     		strh	r2, [r0, r1]
1661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2908              		.loc 1 1661 0
 2909 0064 8363     		str	r3, [r0, #56]
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2910              		.loc 1 1662 0
 2911 0066 8387     		strh	r3, [r0, #60]
1663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2912              		.loc 1 1663 0
 2913 0068 C387     		strh	r3, [r0, #62]
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2914              		.loc 1 1664 0
 2915 006a 0365     		str	r3, [r0, #80]
1667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2916              		.loc 1 1667 0
 2917 006c E023     		movs	r3, #224
 2918 006e DB00     		lsls	r3, r3, #3
 2919 0070 9D42     		cmp	r5, r3
 2920 0072 1AD9     		bls	.L240
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_16BIT;
 2921              		.loc 1 1670 0
 2922 0074 0268     		ldr	r2, [r0]
 2923              	.LVL224:
ARM GAS  /tmp/ccXTKjLx.s 			page 135


 2924 0076 5368     		ldr	r3, [r2, #4]
 2925 0078 1749     		ldr	r1, .L251
 2926 007a 0B40     		ands	r3, r1
 2927 007c 5360     		str	r3, [r2, #4]
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2928              		.loc 1 1671 0
 2929 007e 174B     		ldr	r3, .L251+4
 2930 0080 C364     		str	r3, [r0, #76]
 2931              	.L241:
1681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2932              		.loc 1 1681 0
 2933 0082 8023     		movs	r3, #128
 2934 0084 1B02     		lsls	r3, r3, #8
 2935 0086 8268     		ldr	r2, [r0, #8]
 2936 0088 9A42     		cmp	r2, r3
 2937 008a 17D0     		beq	.L250
 2938              	.L242:
1704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2939              		.loc 1 1704 0
 2940 008c 0268     		ldr	r2, [r0]
 2941 008e 5368     		ldr	r3, [r2, #4]
 2942 0090 6021     		movs	r1, #96
 2943 0092 0B43     		orrs	r3, r1
 2944 0094 5360     		str	r3, [r2, #4]
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2945              		.loc 1 1711 0
 2946 0096 0368     		ldr	r3, [r0]
 2947 0098 1A68     		ldr	r2, [r3]
 2948 009a 5206     		lsls	r2, r2, #25
 2949 009c 18D4     		bmi	.L247
1714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2950              		.loc 1 1714 0
 2951 009e 1A68     		ldr	r2, [r3]
 2952 00a0 2039     		subs	r1, r1, #32
 2953 00a2 0A43     		orrs	r2, r1
 2954 00a4 1A60     		str	r2, [r3]
1622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2955              		.loc 1 1622 0
 2956 00a6 0023     		movs	r3, #0
 2957 00a8 C0E7     		b	.L239
 2958              	.LVL225:
 2959              	.L240:
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_8BIT;
 2960              		.loc 1 1676 0
 2961 00aa 0268     		ldr	r2, [r0]
 2962              	.LVL226:
 2963 00ac 5168     		ldr	r1, [r2, #4]
 2964 00ae 8023     		movs	r3, #128
 2965 00b0 5B01     		lsls	r3, r3, #5
 2966 00b2 0B43     		orrs	r3, r1
 2967 00b4 5360     		str	r3, [r2, #4]
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2968              		.loc 1 1677 0
 2969 00b6 0A4B     		ldr	r3, .L251+8
 2970 00b8 C364     		str	r3, [r0, #76]
 2971 00ba E2E7     		b	.L241
 2972              	.L250:
ARM GAS  /tmp/ccXTKjLx.s 			page 136


1683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2973              		.loc 1 1683 0
 2974 00bc 0268     		ldr	r2, [r0]
 2975 00be 1368     		ldr	r3, [r2]
 2976 00c0 0849     		ldr	r1, .L251+12
 2977 00c2 0B40     		ands	r3, r1
 2978 00c4 1360     		str	r3, [r2]
 2979 00c6 E1E7     		b	.L242
 2980              	.LVL227:
 2981              	.L245:
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 2982              		.loc 1 1649 0
 2983 00c8 0123     		movs	r3, #1
 2984 00ca AFE7     		b	.L239
 2985              	.L246:
 2986 00cc 0123     		movs	r3, #1
 2987 00ce ADE7     		b	.L239
 2988              	.LVL228:
 2989              	.L247:
1622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2990              		.loc 1 1622 0
 2991 00d0 0023     		movs	r3, #0
 2992 00d2 ABE7     		b	.L239
 2993              	.LVL229:
 2994              	.L243:
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2995              		.loc 1 1639 0
 2996 00d4 0223     		movs	r3, #2
 2997 00d6 ACE7     		b	.L238
 2998              	.L252:
 2999              		.align	2
 3000              	.L251:
 3001 00d8 FFEFFFFF 		.word	-4097
 3002 00dc 00000000 		.word	SPI_RxISR_16BIT
 3003 00e0 00000000 		.word	SPI_RxISR_8BIT
 3004 00e4 FFBFFFFF 		.word	-16385
 3005              		.cfi_endproc
 3006              	.LFE48:
 3008              		.section	.text.HAL_SPI_Transmit_DMA,"ax",%progbits
 3009              		.align	1
 3010              		.global	HAL_SPI_Transmit_DMA
 3011              		.syntax unified
 3012              		.code	16
 3013              		.thumb_func
 3014              		.fpu softvfp
 3016              	HAL_SPI_Transmit_DMA:
 3017              	.LFB50:
1850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3018              		.loc 1 1850 0
 3019              		.cfi_startproc
 3020              		@ args = 0, pretend = 0, frame = 0
 3021              		@ frame_needed = 0, uses_anonymous_args = 0
 3022              	.LVL230:
 3023 0000 10B5     		push	{r4, lr}
 3024              	.LCFI21:
 3025              		.cfi_def_cfa_offset 8
 3026              		.cfi_offset 4, -8
ARM GAS  /tmp/ccXTKjLx.s 			page 137


 3027              		.cfi_offset 14, -4
 3028 0002 0400     		movs	r4, r0
 3029              	.LVL231:
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3030              		.loc 1 1860 0
 3031 0004 5C23     		movs	r3, #92
 3032 0006 C35C     		ldrb	r3, [r0, r3]
 3033 0008 012B     		cmp	r3, #1
 3034 000a 00D1     		bne	.LCB3119
 3035 000c 86E0     		b	.L261	@long jump
 3036              	.LCB3119:
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3037              		.loc 1 1860 0 is_stmt 0 discriminator 2
 3038 000e 0120     		movs	r0, #1
 3039              	.LVL232:
 3040 0010 5C23     		movs	r3, #92
 3041 0012 E054     		strb	r0, [r4, r3]
1862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3042              		.loc 1 1862 0 is_stmt 1 discriminator 2
 3043 0014 0133     		adds	r3, r3, #1
 3044 0016 E35C     		ldrb	r3, [r4, r3]
 3045 0018 012B     		cmp	r3, #1
 3046 001a 04D0     		beq	.L265
1864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 3047              		.loc 1 1864 0
 3048 001c 0220     		movs	r0, #2
 3049              	.LVL233:
 3050              	.L255:
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
 3051              		.loc 1 1958 0
 3052 001e 0022     		movs	r2, #0
 3053 0020 5C23     		movs	r3, #92
 3054 0022 E254     		strb	r2, [r4, r3]
 3055              	.LVL234:
 3056              	.L254:
1960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3057              		.loc 1 1960 0
 3058              		@ sp needed
 3059              	.LVL235:
 3060 0024 10BD     		pop	{r4, pc}
 3061              	.LVL236:
 3062              	.L265:
1868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3063              		.loc 1 1868 0
 3064 0026 0029     		cmp	r1, #0
 3065 0028 74D0     		beq	.L263
1868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3066              		.loc 1 1868 0 is_stmt 0 discriminator 1
 3067 002a 002A     		cmp	r2, #0
 3068 002c 74D0     		beq	.L264
1875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 3069              		.loc 1 1875 0 is_stmt 1
 3070 002e 0230     		adds	r0, r0, #2
 3071 0030 5C33     		adds	r3, r3, #92
 3072 0032 E054     		strb	r0, [r4, r3]
1876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 3073              		.loc 1 1876 0
ARM GAS  /tmp/ccXTKjLx.s 			page 138


 3074 0034 0023     		movs	r3, #0
 3075 0036 2366     		str	r3, [r4, #96]
1877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 3076              		.loc 1 1877 0
 3077 0038 A163     		str	r1, [r4, #56]
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 3078              		.loc 1 1878 0
 3079 003a A287     		strh	r2, [r4, #60]
1879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3080              		.loc 1 1879 0
 3081 003c E287     		strh	r2, [r4, #62]
1882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3082              		.loc 1 1882 0
 3083 003e 2364     		str	r3, [r4, #64]
1883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxISR       = NULL;
 3084              		.loc 1 1883 0
 3085 0040 2365     		str	r3, [r4, #80]
1884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 3086              		.loc 1 1884 0
 3087 0042 E364     		str	r3, [r4, #76]
1885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 3088              		.loc 1 1885 0
 3089 0044 4422     		movs	r2, #68
 3090              	.LVL237:
 3091 0046 A352     		strh	r3, [r4, r2]
 3092              	.LVL238:
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3093              		.loc 1 1886 0
 3094 0048 0232     		adds	r2, r2, #2
 3095 004a A352     		strh	r3, [r4, r2]
1889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3096              		.loc 1 1889 0
 3097 004c 8023     		movs	r3, #128
 3098 004e 1B02     		lsls	r3, r3, #8
 3099 0050 A268     		ldr	r2, [r4, #8]
 3100 0052 9A42     		cmp	r2, r3
 3101 0054 2ED0     		beq	.L266
 3102              	.LVL239:
 3103              	.L256:
1903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3104              		.loc 1 1903 0
 3105 0056 636D     		ldr	r3, [r4, #84]
 3106 0058 314A     		ldr	r2, .L268
 3107 005a DA62     		str	r2, [r3, #44]
1906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3108              		.loc 1 1906 0
 3109 005c 636D     		ldr	r3, [r4, #84]
 3110 005e 314A     		ldr	r2, .L268+4
 3111 0060 9A62     		str	r2, [r3, #40]
1909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3112              		.loc 1 1909 0
 3113 0062 636D     		ldr	r3, [r4, #84]
 3114 0064 304A     		ldr	r2, .L268+8
 3115 0066 1A63     		str	r2, [r3, #48]
1912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3116              		.loc 1 1912 0
 3117 0068 636D     		ldr	r3, [r4, #84]
ARM GAS  /tmp/ccXTKjLx.s 			page 139


 3118 006a 0022     		movs	r2, #0
 3119 006c 5A63     		str	r2, [r3, #52]
1914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Packing mode is enabled only if the DMA setting is HALWORD */
 3120              		.loc 1 1914 0
 3121 006e 2268     		ldr	r2, [r4]
 3122 0070 5368     		ldr	r3, [r2, #4]
 3123 0072 2E49     		ldr	r1, .L268+12
 3124 0074 0B40     		ands	r3, r1
 3125 0076 5360     		str	r3, [r2, #4]
1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3126              		.loc 1 1916 0
 3127 0078 E023     		movs	r3, #224
 3128 007a DB00     		lsls	r3, r3, #3
 3129 007c E268     		ldr	r2, [r4, #12]
 3130 007e 9A42     		cmp	r2, r3
 3131 0080 05D8     		bhi	.L257
1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3132              		.loc 1 1916 0 is_stmt 0 discriminator 1
 3133 0082 636D     		ldr	r3, [r4, #84]
 3134 0084 5A69     		ldr	r2, [r3, #20]
 3135 0086 8023     		movs	r3, #128
 3136 0088 DB00     		lsls	r3, r3, #3
 3137 008a 9A42     		cmp	r2, r3
 3138 008c 19D0     		beq	.L267
 3139              	.L257:
1932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                  hspi->TxXferCount))
 3140              		.loc 1 1932 0 is_stmt 1
 3141 008e 2268     		ldr	r2, [r4]
 3142 0090 0C32     		adds	r2, r2, #12
1933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3143              		.loc 1 1933 0
 3144 0092 E38F     		ldrh	r3, [r4, #62]
 3145 0094 9BB2     		uxth	r3, r3
1932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                  hspi->TxXferCount))
 3146              		.loc 1 1932 0
 3147 0096 A16B     		ldr	r1, [r4, #56]
 3148 0098 606D     		ldr	r0, [r4, #84]
 3149 009a FFF7FEFF 		bl	HAL_DMA_Start_IT
 3150              	.LVL240:
 3151 009e 0028     		cmp	r0, #0
 3152 00a0 25D0     		beq	.L259
1936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3153              		.loc 1 1936 0
 3154 00a2 236E     		ldr	r3, [r4, #96]
 3155 00a4 1022     		movs	r2, #16
 3156 00a6 1343     		orrs	r3, r2
 3157 00a8 2366     		str	r3, [r4, #96]
 3158              	.LVL241:
1939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 3159              		.loc 1 1939 0
 3160 00aa 0F3A     		subs	r2, r2, #15
 3161 00ac 5D23     		movs	r3, #93
 3162 00ae E254     		strb	r2, [r4, r3]
1937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3163              		.loc 1 1937 0
 3164 00b0 0120     		movs	r0, #1
1940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
ARM GAS  /tmp/ccXTKjLx.s 			page 140


 3165              		.loc 1 1940 0
 3166 00b2 B4E7     		b	.L255
 3167              	.LVL242:
 3168              	.L266:
1891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3169              		.loc 1 1891 0
 3170 00b4 2268     		ldr	r2, [r4]
 3171 00b6 1168     		ldr	r1, [r2]
 3172              	.LVL243:
 3173 00b8 8023     		movs	r3, #128
 3174 00ba DB01     		lsls	r3, r3, #7
 3175 00bc 0B43     		orrs	r3, r1
 3176 00be 1360     		str	r3, [r2]
 3177 00c0 C9E7     		b	.L256
 3178              	.L267:
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 3179              		.loc 1 1919 0
 3180 00c2 E38F     		ldrh	r3, [r4, #62]
 3181 00c4 DB07     		lsls	r3, r3, #31
 3182 00c6 07D4     		bmi	.L258
1921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U);
 3183              		.loc 1 1921 0
 3184 00c8 2268     		ldr	r2, [r4]
 3185 00ca 5368     		ldr	r3, [r2, #4]
 3186 00cc 0B40     		ands	r3, r1
 3187 00ce 5360     		str	r3, [r2, #4]
1922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 3188              		.loc 1 1922 0
 3189 00d0 E38F     		ldrh	r3, [r4, #62]
 3190 00d2 5B08     		lsrs	r3, r3, #1
 3191 00d4 E387     		strh	r3, [r4, #62]
 3192 00d6 DAE7     		b	.L257
 3193              	.L258:
1926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
 3194              		.loc 1 1926 0
 3195 00d8 2268     		ldr	r2, [r4]
 3196 00da 5168     		ldr	r1, [r2, #4]
 3197 00dc 8023     		movs	r3, #128
 3198 00de DB01     		lsls	r3, r3, #7
 3199 00e0 0B43     		orrs	r3, r1
 3200 00e2 5360     		str	r3, [r2, #4]
1927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 3201              		.loc 1 1927 0
 3202 00e4 E38F     		ldrh	r3, [r4, #62]
 3203 00e6 5B08     		lsrs	r3, r3, #1
 3204 00e8 0133     		adds	r3, r3, #1
 3205 00ea E387     		strh	r3, [r4, #62]
 3206 00ec CFE7     		b	.L257
 3207              	.L259:
1944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3208              		.loc 1 1944 0
 3209 00ee 2368     		ldr	r3, [r4]
 3210 00f0 1A68     		ldr	r2, [r3]
 3211 00f2 5206     		lsls	r2, r2, #25
 3212 00f4 03D4     		bmi	.L260
1947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3213              		.loc 1 1947 0
ARM GAS  /tmp/ccXTKjLx.s 			page 141


 3214 00f6 1A68     		ldr	r2, [r3]
 3215 00f8 4021     		movs	r1, #64
 3216 00fa 0A43     		orrs	r2, r1
 3217 00fc 1A60     		str	r2, [r3]
 3218              	.L260:
1951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3219              		.loc 1 1951 0
 3220 00fe 2268     		ldr	r2, [r4]
 3221 0100 5368     		ldr	r3, [r2, #4]
 3222 0102 2021     		movs	r1, #32
 3223 0104 0B43     		orrs	r3, r1
 3224 0106 5360     		str	r3, [r2, #4]
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3225              		.loc 1 1954 0
 3226 0108 2268     		ldr	r2, [r4]
 3227 010a 5368     		ldr	r3, [r2, #4]
 3228 010c 1E39     		subs	r1, r1, #30
 3229 010e 0B43     		orrs	r3, r1
 3230 0110 5360     		str	r3, [r2, #4]
 3231 0112 84E7     		b	.L255
 3232              	.LVL244:
 3233              	.L263:
1870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 3234              		.loc 1 1870 0
 3235 0114 0120     		movs	r0, #1
 3236 0116 82E7     		b	.L255
 3237              	.L264:
 3238 0118 0120     		movs	r0, #1
 3239 011a 80E7     		b	.L255
 3240              	.LVL245:
 3241              	.L261:
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3242              		.loc 1 1860 0
 3243 011c 0220     		movs	r0, #2
 3244              	.LVL246:
 3245 011e 81E7     		b	.L254
 3246              	.L269:
 3247              		.align	2
 3248              	.L268:
 3249 0120 00000000 		.word	SPI_DMAHalfTransmitCplt
 3250 0124 00000000 		.word	SPI_DMATransmitCplt
 3251 0128 00000000 		.word	SPI_DMAError
 3252 012c FFBFFFFF 		.word	-16385
 3253              		.cfi_endproc
 3254              	.LFE50:
 3256              		.section	.text.HAL_SPI_TransmitReceive_DMA,"ax",%progbits
 3257              		.align	1
 3258              		.global	HAL_SPI_TransmitReceive_DMA
 3259              		.syntax unified
 3260              		.code	16
 3261              		.thumb_func
 3262              		.fpu softvfp
 3264              	HAL_SPI_TransmitReceive_DMA:
 3265              	.LFB52:
2126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t             tmp_mode;
 3266              		.loc 1 2126 0
 3267              		.cfi_startproc
ARM GAS  /tmp/ccXTKjLx.s 			page 142


 3268              		@ args = 0, pretend = 0, frame = 0
 3269              		@ frame_needed = 0, uses_anonymous_args = 0
 3270              	.LVL247:
 3271 0000 70B5     		push	{r4, r5, r6, lr}
 3272              	.LCFI22:
 3273              		.cfi_def_cfa_offset 16
 3274              		.cfi_offset 4, -16
 3275              		.cfi_offset 5, -12
 3276              		.cfi_offset 6, -8
 3277              		.cfi_offset 14, -4
 3278 0002 0400     		movs	r4, r0
 3279              	.LVL248:
2139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3280              		.loc 1 2139 0
 3281 0004 5C20     		movs	r0, #92
 3282              	.LVL249:
 3283 0006 205C     		ldrb	r0, [r4, r0]
 3284 0008 0128     		cmp	r0, #1
 3285 000a 00D1     		bne	.LCB3369
 3286 000c F3E0     		b	.L285	@long jump
 3287              	.LCB3369:
2139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3288              		.loc 1 2139 0 is_stmt 0 discriminator 2
 3289 000e 0125     		movs	r5, #1
 3290 0010 5C20     		movs	r0, #92
 3291 0012 2554     		strb	r5, [r4, r0]
2142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 3292              		.loc 1 2142 0 is_stmt 1 discriminator 2
 3293 0014 0130     		adds	r0, r0, #1
 3294 0016 205C     		ldrb	r0, [r4, r0]
 3295 0018 C0B2     		uxtb	r0, r0
 3296              	.LVL250:
2143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3297              		.loc 1 2143 0 discriminator 2
 3298 001a 6568     		ldr	r5, [r4, #4]
 3299              	.LVL251:
2145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 3300              		.loc 1 2145 0 discriminator 2
 3301 001c 0128     		cmp	r0, #1
 3302 001e 10D0     		beq	.L272
2145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 3303              		.loc 1 2145 0 is_stmt 0 discriminator 1
 3304 0020 8226     		movs	r6, #130
 3305 0022 7600     		lsls	r6, r6, #1
 3306 0024 B542     		cmp	r5, r6
 3307 0026 04D0     		beq	.L292
2148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 3308              		.loc 1 2148 0 is_stmt 1
 3309 0028 0220     		movs	r0, #2
 3310              	.LVL252:
 3311              	.L273:
2309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
 3312              		.loc 1 2309 0
 3313 002a 0022     		movs	r2, #0
 3314 002c 5C23     		movs	r3, #92
 3315 002e E254     		strb	r2, [r4, r3]
 3316              	.LVL253:
ARM GAS  /tmp/ccXTKjLx.s 			page 143


 3317              	.L271:
2311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3318              		.loc 1 2311 0
 3319              		@ sp needed
 3320              	.LVL254:
 3321 0030 70BD     		pop	{r4, r5, r6, pc}
 3322              	.LVL255:
 3323              	.L292:
2146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3324              		.loc 1 2146 0
 3325 0032 A568     		ldr	r5, [r4, #8]
 3326              	.LVL256:
 3327 0034 002D     		cmp	r5, #0
 3328 0036 00D0     		beq	.LCB3426
 3329 0038 D5E0     		b	.L287	@long jump
 3330              	.LCB3426:
2146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3331              		.loc 1 2146 0 is_stmt 0 discriminator 1
 3332 003a 0428     		cmp	r0, #4
 3333 003c 01D0     		beq	.L272
2148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 3334              		.loc 1 2148 0 is_stmt 1
 3335 003e 0220     		movs	r0, #2
 3336              	.LVL257:
 3337 0040 F3E7     		b	.L273
 3338              	.LVL258:
 3339              	.L272:
2152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3340              		.loc 1 2152 0
 3341 0042 0029     		cmp	r1, #0
 3342 0044 00D1     		bne	.LCB3439
 3343 0046 D0E0     		b	.L289	@long jump
 3344              	.LCB3439:
2152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3345              		.loc 1 2152 0 is_stmt 0 discriminator 1
 3346 0048 002A     		cmp	r2, #0
 3347 004a 00D1     		bne	.LCB3441
 3348 004c CFE0     		b	.L290	@long jump
 3349              	.LCB3441:
2152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3350              		.loc 1 2152 0 discriminator 2
 3351 004e 002B     		cmp	r3, #0
 3352 0050 00D1     		bne	.LCB3443
 3353 0052 CEE0     		b	.L291	@long jump
 3354              	.LCB3443:
2159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3355              		.loc 1 2159 0 is_stmt 1
 3356 0054 5D20     		movs	r0, #93
 3357              	.LVL259:
 3358 0056 205C     		ldrb	r0, [r4, r0]
 3359 0058 0428     		cmp	r0, #4
 3360 005a 02D0     		beq	.L274
2161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3361              		.loc 1 2161 0
 3362 005c 0525     		movs	r5, #5
 3363 005e 5D20     		movs	r0, #93
 3364 0060 2554     		strb	r5, [r4, r0]
ARM GAS  /tmp/ccXTKjLx.s 			page 144


 3365              	.LVL260:
 3366              	.L274:
2165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 3367              		.loc 1 2165 0
 3368 0062 0020     		movs	r0, #0
 3369 0064 2066     		str	r0, [r4, #96]
2166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 3370              		.loc 1 2166 0
 3371 0066 A163     		str	r1, [r4, #56]
2167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 3372              		.loc 1 2167 0
 3373 0068 A387     		strh	r3, [r4, #60]
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 3374              		.loc 1 2168 0
 3375 006a E387     		strh	r3, [r4, #62]
2169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 3376              		.loc 1 2169 0
 3377 006c 2264     		str	r2, [r4, #64]
2170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = Size;
 3378              		.loc 1 2170 0
 3379 006e 4422     		movs	r2, #68
 3380              	.LVL261:
 3381 0070 A352     		strh	r3, [r4, r2]
 3382              	.LVL262:
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3383              		.loc 1 2171 0
 3384 0072 0232     		adds	r2, r2, #2
 3385 0074 A352     		strh	r3, [r4, r2]
2174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3386              		.loc 1 2174 0
 3387 0076 E064     		str	r0, [r4, #76]
2175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3388              		.loc 1 2175 0
 3389 0078 2065     		str	r0, [r4, #80]
2196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3390              		.loc 1 2196 0
 3391 007a 2268     		ldr	r2, [r4]
 3392 007c 5368     		ldr	r3, [r2, #4]
 3393              	.LVL263:
 3394 007e 5F49     		ldr	r1, .L295
 3395              	.LVL264:
 3396 0080 0B40     		ands	r3, r1
 3397 0082 5360     		str	r3, [r2, #4]
2199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3398              		.loc 1 2199 0
 3399 0084 E023     		movs	r3, #224
 3400 0086 DB00     		lsls	r3, r3, #3
 3401 0088 E268     		ldr	r2, [r4, #12]
 3402 008a 9A42     		cmp	r2, r3
 3403 008c 28D9     		bls	.L275
2202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3404              		.loc 1 2202 0
 3405 008e 2268     		ldr	r2, [r4]
 3406 0090 5368     		ldr	r3, [r2, #4]
 3407 0092 5B49     		ldr	r1, .L295+4
 3408 0094 0B40     		ands	r3, r1
 3409 0096 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/ccXTKjLx.s 			page 145


 3410              	.L276:
2242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3411              		.loc 1 2242 0
 3412 0098 5D23     		movs	r3, #93
 3413 009a E35C     		ldrb	r3, [r4, r3]
 3414 009c 042B     		cmp	r3, #4
 3415 009e 67D0     		beq	.L293
2251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
 3416              		.loc 1 2251 0
 3417 00a0 A36D     		ldr	r3, [r4, #88]
 3418 00a2 584A     		ldr	r2, .L295+8
 3419 00a4 DA62     		str	r2, [r3, #44]
2252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3420              		.loc 1 2252 0
 3421 00a6 A36D     		ldr	r3, [r4, #88]
 3422 00a8 574A     		ldr	r2, .L295+12
 3423 00aa 9A62     		str	r2, [r3, #40]
 3424              	.L281:
2256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3425              		.loc 1 2256 0
 3426 00ac A36D     		ldr	r3, [r4, #88]
 3427 00ae 574A     		ldr	r2, .L295+16
 3428 00b0 1A63     		str	r2, [r3, #48]
2259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3429              		.loc 1 2259 0
 3430 00b2 A36D     		ldr	r3, [r4, #88]
 3431 00b4 0022     		movs	r2, #0
 3432 00b6 5A63     		str	r2, [r3, #52]
2262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                  hspi->RxXferCount))
 3433              		.loc 1 2262 0
 3434 00b8 2168     		ldr	r1, [r4]
 3435 00ba 0C31     		adds	r1, r1, #12
2263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3436              		.loc 1 2263 0
 3437 00bc 4623     		movs	r3, #70
 3438 00be E35A     		ldrh	r3, [r4, r3]
 3439 00c0 9BB2     		uxth	r3, r3
2262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                  hspi->RxXferCount))
 3440              		.loc 1 2262 0
 3441 00c2 226C     		ldr	r2, [r4, #64]
 3442 00c4 A06D     		ldr	r0, [r4, #88]
 3443 00c6 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3444              	.LVL265:
 3445 00ca 0028     		cmp	r0, #0
 3446 00cc 57D0     		beq	.L282
2266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3447              		.loc 1 2266 0
 3448 00ce 236E     		ldr	r3, [r4, #96]
 3449 00d0 1022     		movs	r2, #16
 3450 00d2 1343     		orrs	r3, r2
 3451 00d4 2366     		str	r3, [r4, #96]
 3452              	.LVL266:
2269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 3453              		.loc 1 2269 0
 3454 00d6 0F3A     		subs	r2, r2, #15
 3455 00d8 5D23     		movs	r3, #93
 3456 00da E254     		strb	r2, [r4, r3]
ARM GAS  /tmp/ccXTKjLx.s 			page 146


2267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3457              		.loc 1 2267 0
 3458 00dc 0120     		movs	r0, #1
2270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3459              		.loc 1 2270 0
 3460 00de A4E7     		b	.L273
 3461              	.LVL267:
 3462              	.L275:
2207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3463              		.loc 1 2207 0
 3464 00e0 2268     		ldr	r2, [r4]
 3465 00e2 5168     		ldr	r1, [r2, #4]
 3466 00e4 8023     		movs	r3, #128
 3467 00e6 5B01     		lsls	r3, r3, #5
 3468 00e8 0B43     		orrs	r3, r1
 3469 00ea 5360     		str	r3, [r2, #4]
2209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 3470              		.loc 1 2209 0
 3471 00ec 636D     		ldr	r3, [r4, #84]
 3472 00ee 5A69     		ldr	r2, [r3, #20]
 3473 00f0 8023     		movs	r3, #128
 3474 00f2 DB00     		lsls	r3, r3, #3
 3475 00f4 9A42     		cmp	r2, r3
 3476 00f6 18D0     		beq	.L294
 3477              	.L277:
2223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 3478              		.loc 1 2223 0
 3479 00f8 A36D     		ldr	r3, [r4, #88]
 3480 00fa 5A69     		ldr	r2, [r3, #20]
 3481 00fc 8023     		movs	r3, #128
 3482 00fe DB00     		lsls	r3, r3, #3
 3483 0100 9A42     		cmp	r2, r3
 3484 0102 C9D1     		bne	.L276
2226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3485              		.loc 1 2226 0
 3486 0104 2268     		ldr	r2, [r4]
 3487 0106 5368     		ldr	r3, [r2, #4]
 3488 0108 3D49     		ldr	r1, .L295+4
 3489 010a 0B40     		ands	r3, r1
 3490 010c 5360     		str	r3, [r2, #4]
2228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 3491              		.loc 1 2228 0
 3492 010e 4623     		movs	r3, #70
 3493 0110 E35A     		ldrh	r3, [r4, r3]
 3494 0112 DB07     		lsls	r3, r3, #31
 3495 0114 20D4     		bmi	.L279
2230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount = hspi->RxXferCount >> 1U;
 3496              		.loc 1 2230 0
 3497 0116 2268     		ldr	r2, [r4]
 3498 0118 5368     		ldr	r3, [r2, #4]
 3499 011a 3D49     		ldr	r1, .L295+20
 3500 011c 0B40     		ands	r3, r1
 3501 011e 5360     		str	r3, [r2, #4]
2231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 3502              		.loc 1 2231 0
 3503 0120 4622     		movs	r2, #70
 3504 0122 A35A     		ldrh	r3, [r4, r2]
ARM GAS  /tmp/ccXTKjLx.s 			page 147


 3505 0124 5B08     		lsrs	r3, r3, #1
 3506 0126 A352     		strh	r3, [r4, r2]
 3507 0128 B6E7     		b	.L276
 3508              	.L294:
2211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 3509              		.loc 1 2211 0
 3510 012a A38F     		ldrh	r3, [r4, #60]
 3511 012c DB07     		lsls	r3, r3, #31
 3512 012e 08D4     		bmi	.L278
2213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount = hspi->TxXferCount >> 1U;
 3513              		.loc 1 2213 0
 3514 0130 2268     		ldr	r2, [r4]
 3515 0132 5368     		ldr	r3, [r2, #4]
 3516 0134 3749     		ldr	r1, .L295+24
 3517 0136 0B40     		ands	r3, r1
 3518 0138 5360     		str	r3, [r2, #4]
2214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 3519              		.loc 1 2214 0
 3520 013a E38F     		ldrh	r3, [r4, #62]
 3521 013c 5B08     		lsrs	r3, r3, #1
 3522 013e E387     		strh	r3, [r4, #62]
 3523 0140 DAE7     		b	.L277
 3524              	.L278:
2218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
 3525              		.loc 1 2218 0
 3526 0142 2268     		ldr	r2, [r4]
 3527 0144 5168     		ldr	r1, [r2, #4]
 3528 0146 8023     		movs	r3, #128
 3529 0148 DB01     		lsls	r3, r3, #7
 3530 014a 0B43     		orrs	r3, r1
 3531 014c 5360     		str	r3, [r2, #4]
2219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 3532              		.loc 1 2219 0
 3533 014e E38F     		ldrh	r3, [r4, #62]
 3534 0150 5B08     		lsrs	r3, r3, #1
 3535 0152 0133     		adds	r3, r3, #1
 3536 0154 E387     		strh	r3, [r4, #62]
 3537 0156 CFE7     		b	.L277
 3538              	.L279:
2235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount = (hspi->RxXferCount >> 1U) + 1U;
 3539              		.loc 1 2235 0
 3540 0158 2268     		ldr	r2, [r4]
 3541 015a 5168     		ldr	r1, [r2, #4]
 3542 015c 8023     		movs	r3, #128
 3543 015e 9B01     		lsls	r3, r3, #6
 3544 0160 0B43     		orrs	r3, r1
 3545 0162 5360     		str	r3, [r2, #4]
2236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 3546              		.loc 1 2236 0
 3547 0164 4622     		movs	r2, #70
 3548 0166 A35A     		ldrh	r3, [r4, r2]
 3549 0168 5B08     		lsrs	r3, r3, #1
 3550 016a 0133     		adds	r3, r3, #1
 3551 016c A352     		strh	r3, [r4, r2]
 3552 016e 93E7     		b	.L276
 3553              	.L293:
2245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
ARM GAS  /tmp/ccXTKjLx.s 			page 148


 3554              		.loc 1 2245 0
 3555 0170 A36D     		ldr	r3, [r4, #88]
 3556 0172 294A     		ldr	r2, .L295+28
 3557 0174 DA62     		str	r2, [r3, #44]
2246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3558              		.loc 1 2246 0
 3559 0176 A36D     		ldr	r3, [r4, #88]
 3560 0178 284A     		ldr	r2, .L295+32
 3561 017a 9A62     		str	r2, [r3, #40]
 3562 017c 96E7     		b	.L281
 3563              	.L282:
2274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3564              		.loc 1 2274 0
 3565 017e 2268     		ldr	r2, [r4]
 3566 0180 5368     		ldr	r3, [r2, #4]
 3567 0182 0121     		movs	r1, #1
 3568 0184 0B43     		orrs	r3, r1
 3569 0186 5360     		str	r3, [r2, #4]
2278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
 3570              		.loc 1 2278 0
 3571 0188 626D     		ldr	r2, [r4, #84]
 3572 018a 0023     		movs	r3, #0
 3573 018c D362     		str	r3, [r2, #44]
2279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
 3574              		.loc 1 2279 0
 3575 018e 626D     		ldr	r2, [r4, #84]
 3576 0190 9362     		str	r3, [r2, #40]
2280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
 3577              		.loc 1 2280 0
 3578 0192 626D     		ldr	r2, [r4, #84]
 3579 0194 1363     		str	r3, [r2, #48]
2281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3580              		.loc 1 2281 0
 3581 0196 626D     		ldr	r2, [r4, #84]
 3582 0198 5363     		str	r3, [r2, #52]
2284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                  hspi->TxXferCount))
 3583              		.loc 1 2284 0
 3584 019a 2268     		ldr	r2, [r4]
 3585 019c 0C32     		adds	r2, r2, #12
2285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3586              		.loc 1 2285 0
 3587 019e E38F     		ldrh	r3, [r4, #62]
 3588 01a0 9BB2     		uxth	r3, r3
2284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                  hspi->TxXferCount))
 3589              		.loc 1 2284 0
 3590 01a2 A16B     		ldr	r1, [r4, #56]
 3591 01a4 606D     		ldr	r0, [r4, #84]
 3592 01a6 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3593              	.LVL268:
 3594 01aa 0028     		cmp	r0, #0
 3595 01ac 08D0     		beq	.L283
2288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3596              		.loc 1 2288 0
 3597 01ae 236E     		ldr	r3, [r4, #96]
 3598 01b0 1022     		movs	r2, #16
 3599 01b2 1343     		orrs	r3, r2
 3600 01b4 2366     		str	r3, [r4, #96]
ARM GAS  /tmp/ccXTKjLx.s 			page 149


 3601              	.LVL269:
2291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 3602              		.loc 1 2291 0
 3603 01b6 0F3A     		subs	r2, r2, #15
 3604 01b8 5D23     		movs	r3, #93
 3605 01ba E254     		strb	r2, [r4, r3]
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3606              		.loc 1 2289 0
 3607 01bc 0120     		movs	r0, #1
2292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3608              		.loc 1 2292 0
 3609 01be 34E7     		b	.L273
 3610              	.LVL270:
 3611              	.L283:
2296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3612              		.loc 1 2296 0
 3613 01c0 2368     		ldr	r3, [r4]
 3614 01c2 1A68     		ldr	r2, [r3]
 3615 01c4 5206     		lsls	r2, r2, #25
 3616 01c6 03D4     		bmi	.L284
2299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3617              		.loc 1 2299 0
 3618 01c8 1A68     		ldr	r2, [r3]
 3619 01ca 4021     		movs	r1, #64
 3620 01cc 0A43     		orrs	r2, r1
 3621 01ce 1A60     		str	r2, [r3]
 3622              	.L284:
2302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3623              		.loc 1 2302 0
 3624 01d0 2268     		ldr	r2, [r4]
 3625 01d2 5368     		ldr	r3, [r2, #4]
 3626 01d4 2021     		movs	r1, #32
 3627 01d6 0B43     		orrs	r3, r1
 3628 01d8 5360     		str	r3, [r2, #4]
2305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3629              		.loc 1 2305 0
 3630 01da 2268     		ldr	r2, [r4]
 3631 01dc 5368     		ldr	r3, [r2, #4]
 3632 01de 1E39     		subs	r1, r1, #30
 3633 01e0 0B43     		orrs	r3, r1
 3634 01e2 5360     		str	r3, [r2, #4]
 3635 01e4 21E7     		b	.L273
 3636              	.LVL271:
 3637              	.L287:
2148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 3638              		.loc 1 2148 0
 3639 01e6 0220     		movs	r0, #2
 3640              	.LVL272:
 3641 01e8 1FE7     		b	.L273
 3642              	.LVL273:
 3643              	.L289:
2154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 3644              		.loc 1 2154 0
 3645 01ea 0120     		movs	r0, #1
 3646              	.LVL274:
 3647 01ec 1DE7     		b	.L273
 3648              	.LVL275:
ARM GAS  /tmp/ccXTKjLx.s 			page 150


 3649              	.L290:
 3650 01ee 0120     		movs	r0, #1
 3651              	.LVL276:
 3652 01f0 1BE7     		b	.L273
 3653              	.LVL277:
 3654              	.L291:
 3655 01f2 0120     		movs	r0, #1
 3656              	.LVL278:
 3657 01f4 19E7     		b	.L273
 3658              	.LVL279:
 3659              	.L285:
2139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3660              		.loc 1 2139 0
 3661 01f6 0220     		movs	r0, #2
 3662 01f8 1AE7     		b	.L271
 3663              	.L296:
 3664 01fa C046     		.align	2
 3665              	.L295:
 3666 01fc FF9FFFFF 		.word	-24577
 3667 0200 FFEFFFFF 		.word	-4097
 3668 0204 00000000 		.word	SPI_DMAHalfTransmitReceiveCplt
 3669 0208 00000000 		.word	SPI_DMATransmitReceiveCplt
 3670 020c 00000000 		.word	SPI_DMAError
 3671 0210 FFDFFFFF 		.word	-8193
 3672 0214 FFBFFFFF 		.word	-16385
 3673 0218 00000000 		.word	SPI_DMAHalfReceiveCplt
 3674 021c 00000000 		.word	SPI_DMAReceiveCplt
 3675              		.cfi_endproc
 3676              	.LFE52:
 3678              		.section	.text.HAL_SPI_Receive_DMA,"ax",%progbits
 3679              		.align	1
 3680              		.global	HAL_SPI_Receive_DMA
 3681              		.syntax unified
 3682              		.code	16
 3683              		.thumb_func
 3684              		.fpu softvfp
 3686              	HAL_SPI_Receive_DMA:
 3687              	.LFB51:
1973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3688              		.loc 1 1973 0
 3689              		.cfi_startproc
 3690              		@ args = 0, pretend = 0, frame = 0
 3691              		@ frame_needed = 0, uses_anonymous_args = 0
 3692              	.LVL280:
 3693 0000 70B5     		push	{r4, r5, r6, lr}
 3694              	.LCFI23:
 3695              		.cfi_def_cfa_offset 16
 3696              		.cfi_offset 4, -16
 3697              		.cfi_offset 5, -12
 3698              		.cfi_offset 6, -8
 3699              		.cfi_offset 14, -4
 3700 0002 0400     		movs	r4, r0
 3701              	.LVL281:
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3702              		.loc 1 1979 0
 3703 0004 8568     		ldr	r5, [r0, #8]
 3704 0006 002D     		cmp	r5, #0
ARM GAS  /tmp/ccXTKjLx.s 			page 151


 3705 0008 04D1     		bne	.L298
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3706              		.loc 1 1979 0 is_stmt 0 discriminator 1
 3707 000a 8223     		movs	r3, #130
 3708 000c 5B00     		lsls	r3, r3, #1
 3709 000e 4068     		ldr	r0, [r0, #4]
 3710              	.LVL282:
 3711 0010 9842     		cmp	r0, r3
 3712 0012 10D0     		beq	.L311
 3713              	.L298:
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3714              		.loc 1 1991 0 is_stmt 1
 3715 0014 5C20     		movs	r0, #92
 3716 0016 205C     		ldrb	r0, [r4, r0]
 3717 0018 0128     		cmp	r0, #1
 3718 001a 00D1     		bne	.LCB3806
 3719 001c A3E0     		b	.L307	@long jump
 3720              	.LCB3806:
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3721              		.loc 1 1991 0 is_stmt 0 discriminator 2
 3722 001e 0120     		movs	r0, #1
 3723 0020 5C23     		movs	r3, #92
 3724 0022 E054     		strb	r0, [r4, r3]
1993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3725              		.loc 1 1993 0 is_stmt 1 discriminator 2
 3726 0024 0133     		adds	r3, r3, #1
 3727 0026 E35C     		ldrb	r3, [r4, r3]
 3728 0028 012B     		cmp	r3, #1
 3729 002a 0DD0     		beq	.L312
1995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 3730              		.loc 1 1995 0
 3731 002c 0220     		movs	r0, #2
 3732              	.LVL283:
 3733              	.L300:
2110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
 3734              		.loc 1 2110 0
 3735 002e 0022     		movs	r2, #0
 3736 0030 5C23     		movs	r3, #92
 3737 0032 E254     		strb	r2, [r4, r3]
 3738              	.LVL284:
 3739              	.L299:
2112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3740              		.loc 1 2112 0
 3741              		@ sp needed
 3742              	.LVL285:
 3743 0034 70BD     		pop	{r4, r5, r6, pc}
 3744              	.LVL286:
 3745              	.L311:
1981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3746              		.loc 1 1981 0
 3747 0036 0420     		movs	r0, #4
 3748 0038 A73B     		subs	r3, r3, #167
 3749 003a E054     		strb	r0, [r4, r3]
1987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3750              		.loc 1 1987 0
 3751 003c 1300     		movs	r3, r2
 3752 003e 0A00     		movs	r2, r1
ARM GAS  /tmp/ccXTKjLx.s 			page 152


 3753              	.LVL287:
 3754 0040 2000     		movs	r0, r4
 3755 0042 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_DMA
 3756              	.LVL288:
 3757 0046 F5E7     		b	.L299
 3758              	.LVL289:
 3759              	.L312:
1999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3760              		.loc 1 1999 0
 3761 0048 0029     		cmp	r1, #0
 3762 004a 00D1     		bne	.LCB3861
 3763 004c 87E0     		b	.L309	@long jump
 3764              	.LCB3861:
1999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3765              		.loc 1 1999 0 is_stmt 0 discriminator 1
 3766 004e 002A     		cmp	r2, #0
 3767 0050 00D1     		bne	.LCB3863
 3768 0052 86E0     		b	.L310	@long jump
 3769              	.LCB3863:
2006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 3770              		.loc 1 2006 0 is_stmt 1
 3771 0054 0330     		adds	r0, r0, #3
 3772 0056 5C33     		adds	r3, r3, #92
 3773 0058 E054     		strb	r0, [r4, r3]
2007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 3774              		.loc 1 2007 0
 3775 005a 0023     		movs	r3, #0
 3776 005c 2366     		str	r3, [r4, #96]
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 3777              		.loc 1 2008 0
 3778 005e 2164     		str	r1, [r4, #64]
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = Size;
 3779              		.loc 1 2009 0
 3780 0060 4421     		movs	r1, #68
 3781              	.LVL290:
 3782 0062 6252     		strh	r2, [r4, r1]
 3783              	.LVL291:
2010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3784              		.loc 1 2010 0
 3785 0064 0231     		adds	r1, r1, #2
 3786 0066 6252     		strh	r2, [r4, r1]
2013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3787              		.loc 1 2013 0
 3788 0068 E364     		str	r3, [r4, #76]
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 3789              		.loc 1 2014 0
 3790 006a 2365     		str	r3, [r4, #80]
2015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 3791              		.loc 1 2015 0
 3792 006c A387     		strh	r3, [r4, #60]
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3793              		.loc 1 2016 0
 3794 006e E387     		strh	r3, [r4, #62]
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3795              		.loc 1 2019 0
 3796 0070 8023     		movs	r3, #128
 3797 0072 1B02     		lsls	r3, r3, #8
ARM GAS  /tmp/ccXTKjLx.s 			page 153


 3798 0074 9D42     		cmp	r5, r3
 3799 0076 2ED0     		beq	.L313
 3800              	.LVL292:
 3801              	.L301:
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 3802              		.loc 1 2042 0
 3803 0078 2268     		ldr	r2, [r4]
 3804 007a 5368     		ldr	r3, [r2, #4]
 3805 007c 3B49     		ldr	r1, .L314
 3806 007e 0B40     		ands	r3, r1
 3807 0080 5360     		str	r3, [r2, #4]
2043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3808              		.loc 1 2043 0
 3809 0082 E023     		movs	r3, #224
 3810 0084 DB00     		lsls	r3, r3, #3
 3811 0086 E268     		ldr	r2, [r4, #12]
 3812 0088 9A42     		cmp	r2, r3
 3813 008a 2AD9     		bls	.L302
2046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3814              		.loc 1 2046 0
 3815 008c 2268     		ldr	r2, [r4]
 3816 008e 5368     		ldr	r3, [r2, #4]
 3817 0090 3749     		ldr	r1, .L314+4
 3818 0092 0B40     		ands	r3, r1
 3819 0094 5360     		str	r3, [r2, #4]
 3820              	.L303:
2072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3821              		.loc 1 2072 0
 3822 0096 A36D     		ldr	r3, [r4, #88]
 3823 0098 364A     		ldr	r2, .L314+8
 3824 009a DA62     		str	r2, [r3, #44]
2075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3825              		.loc 1 2075 0
 3826 009c A36D     		ldr	r3, [r4, #88]
 3827 009e 364A     		ldr	r2, .L314+12
 3828 00a0 9A62     		str	r2, [r3, #40]
2078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3829              		.loc 1 2078 0
 3830 00a2 A36D     		ldr	r3, [r4, #88]
 3831 00a4 354A     		ldr	r2, .L314+16
 3832 00a6 1A63     		str	r2, [r3, #48]
2081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3833              		.loc 1 2081 0
 3834 00a8 A36D     		ldr	r3, [r4, #88]
 3835 00aa 0022     		movs	r2, #0
 3836 00ac 5A63     		str	r2, [r3, #52]
2084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                  hspi->RxXferCount))
 3837              		.loc 1 2084 0
 3838 00ae 2168     		ldr	r1, [r4]
 3839 00b0 0C31     		adds	r1, r1, #12
2085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3840              		.loc 1 2085 0
 3841 00b2 4623     		movs	r3, #70
 3842 00b4 E35A     		ldrh	r3, [r4, r3]
 3843 00b6 9BB2     		uxth	r3, r3
2084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                  hspi->RxXferCount))
 3844              		.loc 1 2084 0
ARM GAS  /tmp/ccXTKjLx.s 			page 154


 3845 00b8 226C     		ldr	r2, [r4, #64]
 3846 00ba A06D     		ldr	r0, [r4, #88]
 3847 00bc FFF7FEFF 		bl	HAL_DMA_Start_IT
 3848              	.LVL293:
 3849 00c0 0028     		cmp	r0, #0
 3850 00c2 39D0     		beq	.L305
2088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3851              		.loc 1 2088 0
 3852 00c4 236E     		ldr	r3, [r4, #96]
 3853 00c6 1022     		movs	r2, #16
 3854 00c8 1343     		orrs	r3, r2
 3855 00ca 2366     		str	r3, [r4, #96]
 3856              	.LVL294:
2091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 3857              		.loc 1 2091 0
 3858 00cc 0F3A     		subs	r2, r2, #15
 3859 00ce 5D23     		movs	r3, #93
 3860 00d0 E254     		strb	r2, [r4, r3]
2089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3861              		.loc 1 2089 0
 3862 00d2 0120     		movs	r0, #1
2092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3863              		.loc 1 2092 0
 3864 00d4 ABE7     		b	.L300
 3865              	.LVL295:
 3866              	.L313:
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3867              		.loc 1 2021 0
 3868 00d6 2268     		ldr	r2, [r4]
 3869              	.LVL296:
 3870 00d8 1368     		ldr	r3, [r2]
 3871 00da 2949     		ldr	r1, .L314+20
 3872 00dc 0B40     		ands	r3, r1
 3873 00de 1360     		str	r3, [r2]
 3874 00e0 CAE7     		b	.L301
 3875              	.L302:
2051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3876              		.loc 1 2051 0
 3877 00e2 2268     		ldr	r2, [r4]
 3878 00e4 5168     		ldr	r1, [r2, #4]
 3879 00e6 8023     		movs	r3, #128
 3880 00e8 5B01     		lsls	r3, r3, #5
 3881 00ea 0B43     		orrs	r3, r1
 3882 00ec 5360     		str	r3, [r2, #4]
2053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 3883              		.loc 1 2053 0
 3884 00ee A36D     		ldr	r3, [r4, #88]
 3885 00f0 5A69     		ldr	r2, [r3, #20]
 3886 00f2 8023     		movs	r3, #128
 3887 00f4 DB00     		lsls	r3, r3, #3
 3888 00f6 9A42     		cmp	r2, r3
 3889 00f8 CDD1     		bne	.L303
2056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3890              		.loc 1 2056 0
 3891 00fa 2268     		ldr	r2, [r4]
 3892 00fc 5368     		ldr	r3, [r2, #4]
 3893 00fe 1C49     		ldr	r1, .L314+4
ARM GAS  /tmp/ccXTKjLx.s 			page 155


 3894 0100 0B40     		ands	r3, r1
 3895 0102 5360     		str	r3, [r2, #4]
2058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 3896              		.loc 1 2058 0
 3897 0104 4623     		movs	r3, #70
 3898 0106 E35A     		ldrh	r3, [r4, r3]
 3899 0108 DB07     		lsls	r3, r3, #31
 3900 010a 09D4     		bmi	.L304
2060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount = hspi->RxXferCount >> 1U;
 3901              		.loc 1 2060 0
 3902 010c 2268     		ldr	r2, [r4]
 3903 010e 5368     		ldr	r3, [r2, #4]
 3904 0110 1649     		ldr	r1, .L314
 3905 0112 0B40     		ands	r3, r1
 3906 0114 5360     		str	r3, [r2, #4]
2061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 3907              		.loc 1 2061 0
 3908 0116 4622     		movs	r2, #70
 3909 0118 A35A     		ldrh	r3, [r4, r2]
 3910 011a 5B08     		lsrs	r3, r3, #1
 3911 011c A352     		strh	r3, [r4, r2]
 3912 011e BAE7     		b	.L303
 3913              	.L304:
2065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount = (hspi->RxXferCount >> 1U) + 1U;
 3914              		.loc 1 2065 0
 3915 0120 2268     		ldr	r2, [r4]
 3916 0122 5168     		ldr	r1, [r2, #4]
 3917 0124 8023     		movs	r3, #128
 3918 0126 9B01     		lsls	r3, r3, #6
 3919 0128 0B43     		orrs	r3, r1
 3920 012a 5360     		str	r3, [r2, #4]
2066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 3921              		.loc 1 2066 0
 3922 012c 4622     		movs	r2, #70
 3923 012e A35A     		ldrh	r3, [r4, r2]
 3924 0130 5B08     		lsrs	r3, r3, #1
 3925 0132 0133     		adds	r3, r3, #1
 3926 0134 A352     		strh	r3, [r4, r2]
 3927 0136 AEE7     		b	.L303
 3928              	.L305:
2096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3929              		.loc 1 2096 0
 3930 0138 2368     		ldr	r3, [r4]
 3931 013a 1A68     		ldr	r2, [r3]
 3932 013c 5206     		lsls	r2, r2, #25
 3933 013e 03D4     		bmi	.L306
2099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3934              		.loc 1 2099 0
 3935 0140 1A68     		ldr	r2, [r3]
 3936 0142 4021     		movs	r1, #64
 3937 0144 0A43     		orrs	r2, r1
 3938 0146 1A60     		str	r2, [r3]
 3939              	.L306:
2103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3940              		.loc 1 2103 0
 3941 0148 2268     		ldr	r2, [r4]
 3942 014a 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/ccXTKjLx.s 			page 156


 3943 014c 2021     		movs	r1, #32
 3944 014e 0B43     		orrs	r3, r1
 3945 0150 5360     		str	r3, [r2, #4]
2106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3946              		.loc 1 2106 0
 3947 0152 2268     		ldr	r2, [r4]
 3948 0154 5368     		ldr	r3, [r2, #4]
 3949 0156 1F39     		subs	r1, r1, #31
 3950 0158 0B43     		orrs	r3, r1
 3951 015a 5360     		str	r3, [r2, #4]
 3952 015c 67E7     		b	.L300
 3953              	.LVL297:
 3954              	.L309:
2001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 3955              		.loc 1 2001 0
 3956 015e 0120     		movs	r0, #1
 3957 0160 65E7     		b	.L300
 3958              	.L310:
 3959 0162 0120     		movs	r0, #1
 3960 0164 63E7     		b	.L300
 3961              	.L307:
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3962              		.loc 1 1991 0
 3963 0166 0220     		movs	r0, #2
 3964 0168 64E7     		b	.L299
 3965              	.L315:
 3966 016a C046     		.align	2
 3967              	.L314:
 3968 016c FFDFFFFF 		.word	-8193
 3969 0170 FFEFFFFF 		.word	-4097
 3970 0174 00000000 		.word	SPI_DMAHalfReceiveCplt
 3971 0178 00000000 		.word	SPI_DMAReceiveCplt
 3972 017c 00000000 		.word	SPI_DMAError
 3973 0180 FFBFFFFF 		.word	-16385
 3974              		.cfi_endproc
 3975              	.LFE51:
 3977              		.section	.text.HAL_SPI_Abort,"ax",%progbits
 3978              		.align	1
 3979              		.global	HAL_SPI_Abort
 3980              		.syntax unified
 3981              		.code	16
 3982              		.thumb_func
 3983              		.fpu softvfp
 3985              	HAL_SPI_Abort:
 3986              	.LFB53:
2327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 3987              		.loc 1 2327 0
 3988              		.cfi_startproc
 3989              		@ args = 0, pretend = 0, frame = 16
 3990              		@ frame_needed = 0, uses_anonymous_args = 0
 3991              	.LVL298:
 3992 0000 10B5     		push	{r4, lr}
 3993              	.LCFI24:
 3994              		.cfi_def_cfa_offset 8
 3995              		.cfi_offset 4, -8
 3996              		.cfi_offset 14, -4
 3997 0002 86B0     		sub	sp, sp, #24
ARM GAS  /tmp/ccXTKjLx.s 			page 157


 3998              	.LCFI25:
 3999              		.cfi_def_cfa_offset 32
 4000 0004 0400     		movs	r4, r0
 4001              	.LVL299:
2334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   count = resetcount;
 4002              		.loc 1 2334 0
 4003 0006 604B     		ldr	r3, .L336
 4004 0008 1868     		ldr	r0, [r3]
 4005              	.LVL300:
 4006 000a 6049     		ldr	r1, .L336+4
 4007 000c FFF7FEFF 		bl	__aeabi_uidiv
 4008              	.LVL301:
 4009 0010 6423     		movs	r3, #100
 4010 0012 5843     		muls	r0, r3
 4011 0014 0490     		str	r0, [sp, #16]
2335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4012              		.loc 1 2335 0
 4013 0016 049B     		ldr	r3, [sp, #16]
 4014 0018 0593     		str	r3, [sp, #20]
2338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4015              		.loc 1 2338 0
 4016 001a 2268     		ldr	r2, [r4]
 4017 001c 5368     		ldr	r3, [r2, #4]
 4018 001e 2021     		movs	r1, #32
 4019 0020 8B43     		bics	r3, r1
 4020 0022 5360     		str	r3, [r2, #4]
2341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4021              		.loc 1 2341 0
 4022 0024 2268     		ldr	r2, [r4]
 4023 0026 5368     		ldr	r3, [r2, #4]
 4024 0028 1B06     		lsls	r3, r3, #24
 4025 002a 12D5     		bpl	.L317
2343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 4026              		.loc 1 2343 0
 4027 002c 584B     		ldr	r3, .L336+8
 4028 002e 2365     		str	r3, [r4, #80]
 4029              	.L320:
2347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 4030              		.loc 1 2347 0
 4031 0030 059B     		ldr	r3, [sp, #20]
 4032 0032 002B     		cmp	r3, #0
 4033 0034 07D0     		beq	.L334
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 4034              		.loc 1 2352 0
 4035 0036 059B     		ldr	r3, [sp, #20]
 4036 0038 013B     		subs	r3, r3, #1
 4037 003a 0593     		str	r3, [sp, #20]
2353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Reset Timeout Counter */
 4038              		.loc 1 2353 0
 4039 003c 5D23     		movs	r3, #93
 4040 003e E35C     		ldrb	r3, [r4, r3]
 4041 0040 072B     		cmp	r3, #7
 4042 0042 F5D1     		bne	.L320
 4043 0044 03E0     		b	.L319
 4044              	.L334:
2349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 4045              		.loc 1 2349 0
ARM GAS  /tmp/ccXTKjLx.s 			page 158


 4046 0046 236E     		ldr	r3, [r4, #96]
 4047 0048 4021     		movs	r1, #64
 4048 004a 0B43     		orrs	r3, r1
 4049 004c 2366     		str	r3, [r4, #96]
 4050              	.L319:
2355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 4051              		.loc 1 2355 0
 4052 004e 049B     		ldr	r3, [sp, #16]
 4053 0050 0593     		str	r3, [sp, #20]
 4054              	.L317:
2358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4055              		.loc 1 2358 0
 4056 0052 5368     		ldr	r3, [r2, #4]
 4057 0054 5B06     		lsls	r3, r3, #25
 4058 0056 12D5     		bpl	.L321
2360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 4059              		.loc 1 2360 0
 4060 0058 4E4B     		ldr	r3, .L336+12
 4061 005a E364     		str	r3, [r4, #76]
 4062              	.L324:
2364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 4063              		.loc 1 2364 0
 4064 005c 059B     		ldr	r3, [sp, #20]
 4065 005e 002B     		cmp	r3, #0
 4066 0060 07D0     		beq	.L335
2369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 4067              		.loc 1 2369 0
 4068 0062 059B     		ldr	r3, [sp, #20]
 4069 0064 013B     		subs	r3, r3, #1
 4070 0066 0593     		str	r3, [sp, #20]
2370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Reset Timeout Counter */
 4071              		.loc 1 2370 0
 4072 0068 5D23     		movs	r3, #93
 4073 006a E35C     		ldrb	r3, [r4, r3]
 4074 006c 072B     		cmp	r3, #7
 4075 006e F5D1     		bne	.L324
 4076 0070 03E0     		b	.L323
 4077              	.L335:
2366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 4078              		.loc 1 2366 0
 4079 0072 236E     		ldr	r3, [r4, #96]
 4080 0074 4021     		movs	r1, #64
 4081 0076 0B43     		orrs	r3, r1
 4082 0078 2366     		str	r3, [r4, #96]
 4083              	.L323:
2372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 4084              		.loc 1 2372 0
 4085 007a 049B     		ldr	r3, [sp, #16]
 4086 007c 0593     		str	r3, [sp, #20]
 4087              	.L321:
2376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4088              		.loc 1 2376 0
 4089 007e 5368     		ldr	r3, [r2, #4]
 4090 0080 9B07     		lsls	r3, r3, #30
 4091 0082 2ED5     		bpl	.L325
2379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 4092              		.loc 1 2379 0
ARM GAS  /tmp/ccXTKjLx.s 			page 159


 4093 0084 636D     		ldr	r3, [r4, #84]
 4094 0086 002B     		cmp	r3, #0
 4095 0088 2BD0     		beq	.L325
2383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4096              		.loc 1 2383 0
 4097 008a 0022     		movs	r2, #0
 4098 008c 5A63     		str	r2, [r3, #52]
2386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 4099              		.loc 1 2386 0
 4100 008e 606D     		ldr	r0, [r4, #84]
 4101 0090 FFF7FEFF 		bl	HAL_DMA_Abort
 4102              	.LVL302:
 4103 0094 0028     		cmp	r0, #0
 4104 0096 01D0     		beq	.L326
2388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 4105              		.loc 1 2388 0
 4106 0098 4023     		movs	r3, #64
 4107 009a 2366     		str	r3, [r4, #96]
 4108              	.L326:
2392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4109              		.loc 1 2392 0
 4110 009c 2268     		ldr	r2, [r4]
 4111 009e 5368     		ldr	r3, [r2, #4]
 4112 00a0 0221     		movs	r1, #2
 4113 00a2 8B43     		bics	r3, r1
 4114 00a4 5360     		str	r3, [r2, #4]
2394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 4115              		.loc 1 2394 0
 4116 00a6 FFF7FEFF 		bl	HAL_GetTick
 4117              	.LVL303:
 4118 00aa 0200     		movs	r2, r0
 4119 00ac 6421     		movs	r1, #100
 4120 00ae 2000     		movs	r0, r4
 4121 00b0 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4122              	.LVL304:
 4123 00b4 0028     		cmp	r0, #0
 4124 00b6 01D0     		beq	.L327
2396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 4125              		.loc 1 2396 0
 4126 00b8 4023     		movs	r3, #64
 4127 00ba 2366     		str	r3, [r4, #96]
 4128              	.L327:
2400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4129              		.loc 1 2400 0
 4130 00bc 2268     		ldr	r2, [r4]
 4131 00be 1368     		ldr	r3, [r2]
 4132 00c0 4021     		movs	r1, #64
 4133 00c2 8B43     		bics	r3, r1
 4134 00c4 1360     		str	r3, [r2]
2403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 4135              		.loc 1 2403 0
 4136 00c6 FFF7FEFF 		bl	HAL_GetTick
 4137              	.LVL305:
 4138 00ca 0090     		str	r0, [sp]
 4139 00cc 6423     		movs	r3, #100
 4140 00ce 0022     		movs	r2, #0
 4141 00d0 C021     		movs	r1, #192
ARM GAS  /tmp/ccXTKjLx.s 			page 160


 4142 00d2 C900     		lsls	r1, r1, #3
 4143 00d4 2000     		movs	r0, r4
 4144 00d6 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 4145              	.LVL306:
 4146 00da 0028     		cmp	r0, #0
 4147 00dc 01D0     		beq	.L325
2405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 4148              		.loc 1 2405 0
 4149 00de 4023     		movs	r3, #64
 4150 00e0 2366     		str	r3, [r4, #96]
 4151              	.L325:
2411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4152              		.loc 1 2411 0
 4153 00e2 2368     		ldr	r3, [r4]
 4154 00e4 5B68     		ldr	r3, [r3, #4]
 4155 00e6 DB07     		lsls	r3, r3, #31
 4156 00e8 30D5     		bpl	.L328
2414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 4157              		.loc 1 2414 0
 4158 00ea A36D     		ldr	r3, [r4, #88]
 4159 00ec 002B     		cmp	r3, #0
 4160 00ee 2DD0     		beq	.L328
2418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4161              		.loc 1 2418 0
 4162 00f0 0022     		movs	r2, #0
 4163 00f2 5A63     		str	r2, [r3, #52]
2421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 4164              		.loc 1 2421 0
 4165 00f4 A06D     		ldr	r0, [r4, #88]
 4166 00f6 FFF7FEFF 		bl	HAL_DMA_Abort
 4167              	.LVL307:
 4168 00fa 0028     		cmp	r0, #0
 4169 00fc 01D0     		beq	.L329
2423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 4170              		.loc 1 2423 0
 4171 00fe 4023     		movs	r3, #64
 4172 0100 2366     		str	r3, [r4, #96]
 4173              	.L329:
2427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4174              		.loc 1 2427 0
 4175 0102 2268     		ldr	r2, [r4]
 4176 0104 1368     		ldr	r3, [r2]
 4177 0106 4021     		movs	r1, #64
 4178 0108 8B43     		bics	r3, r1
 4179 010a 1360     		str	r3, [r2]
2430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 4180              		.loc 1 2430 0
 4181 010c FFF7FEFF 		bl	HAL_GetTick
 4182              	.LVL308:
 4183 0110 0090     		str	r0, [sp]
 4184 0112 6423     		movs	r3, #100
 4185 0114 0022     		movs	r2, #0
 4186 0116 8021     		movs	r1, #128
 4187 0118 2000     		movs	r0, r4
 4188 011a FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 4189              	.LVL309:
 4190 011e 0028     		cmp	r0, #0
ARM GAS  /tmp/ccXTKjLx.s 			page 161


 4191 0120 01D0     		beq	.L330
2432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 4192              		.loc 1 2432 0
 4193 0122 4023     		movs	r3, #64
 4194 0124 2366     		str	r3, [r4, #96]
 4195              	.L330:
2436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 4196              		.loc 1 2436 0
 4197 0126 FFF7FEFF 		bl	HAL_GetTick
 4198              	.LVL310:
 4199 012a 0090     		str	r0, [sp]
 4200 012c 6423     		movs	r3, #100
 4201 012e 0022     		movs	r2, #0
 4202 0130 C021     		movs	r1, #192
 4203 0132 C900     		lsls	r1, r1, #3
 4204 0134 2000     		movs	r0, r4
 4205 0136 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 4206              	.LVL311:
 4207 013a 0028     		cmp	r0, #0
 4208 013c 01D0     		beq	.L331
2438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 4209              		.loc 1 2438 0
 4210 013e 4023     		movs	r3, #64
 4211 0140 2366     		str	r3, [r4, #96]
 4212              	.L331:
2442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 4213              		.loc 1 2442 0
 4214 0142 2268     		ldr	r2, [r4]
 4215 0144 5368     		ldr	r3, [r2, #4]
 4216 0146 0121     		movs	r1, #1
 4217 0148 8B43     		bics	r3, r1
 4218 014a 5360     		str	r3, [r2, #4]
 4219              	.L328:
2446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 4220              		.loc 1 2446 0
 4221 014c 0023     		movs	r3, #0
 4222 014e 4622     		movs	r2, #70
 4223 0150 A352     		strh	r3, [r4, r2]
2447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4224              		.loc 1 2447 0
 4225 0152 E387     		strh	r3, [r4, #62]
2450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4226              		.loc 1 2450 0
 4227 0154 236E     		ldr	r3, [r4, #96]
 4228 0156 402B     		cmp	r3, #64
 4229 0158 13D0     		beq	.L333
2458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 4230              		.loc 1 2458 0
 4231 015a 0023     		movs	r3, #0
 4232 015c 2366     		str	r3, [r4, #96]
2333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 4233              		.loc 1 2333 0
 4234 015e 0020     		movs	r0, #0
 4235              	.L332:
 4236              	.LVL312:
 4237              	.LBB3:
2462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
ARM GAS  /tmp/ccXTKjLx.s 			page 162


 4238              		.loc 1 2462 0
 4239 0160 0022     		movs	r2, #0
 4240 0162 0292     		str	r2, [sp, #8]
 4241 0164 2368     		ldr	r3, [r4]
 4242 0166 D968     		ldr	r1, [r3, #12]
 4243 0168 0291     		str	r1, [sp, #8]
 4244 016a 9968     		ldr	r1, [r3, #8]
 4245 016c 0291     		str	r1, [sp, #8]
 4246 016e 0299     		ldr	r1, [sp, #8]
 4247              	.LBE3:
 4248              	.LBB4:
2463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4249              		.loc 1 2463 0
 4250 0170 0392     		str	r2, [sp, #12]
 4251 0172 9B68     		ldr	r3, [r3, #8]
 4252 0174 0393     		str	r3, [sp, #12]
 4253 0176 039B     		ldr	r3, [sp, #12]
 4254              	.LBE4:
2466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4255              		.loc 1 2466 0
 4256 0178 0132     		adds	r2, r2, #1
 4257 017a 5D23     		movs	r3, #93
 4258 017c E254     		strb	r2, [r4, r3]
2469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4259              		.loc 1 2469 0
 4260 017e 06B0     		add	sp, sp, #24
 4261              		@ sp needed
 4262              	.LVL313:
 4263 0180 10BD     		pop	{r4, pc}
 4264              	.LVL314:
 4265              	.L333:
2453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 4266              		.loc 1 2453 0
 4267 0182 0120     		movs	r0, #1
 4268 0184 ECE7     		b	.L332
 4269              	.L337:
 4270 0186 C046     		.align	2
 4271              	.L336:
 4272 0188 00000000 		.word	SystemCoreClock
 4273 018c C05D0000 		.word	24000
 4274 0190 00000000 		.word	SPI_AbortTx_ISR
 4275 0194 00000000 		.word	SPI_AbortRx_ISR
 4276              		.cfi_endproc
 4277              	.LFE53:
 4279              		.section	.text.HAL_SPI_DMAPause,"ax",%progbits
 4280              		.align	1
 4281              		.global	HAL_SPI_DMAPause
 4282              		.syntax unified
 4283              		.code	16
 4284              		.thumb_func
 4285              		.fpu softvfp
 4287              	HAL_SPI_DMAPause:
 4288              	.LFB55:
2648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Locked */
 4289              		.loc 1 2648 0
 4290              		.cfi_startproc
 4291              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccXTKjLx.s 			page 163


 4292              		@ frame_needed = 0, uses_anonymous_args = 0
 4293              	.LVL315:
 4294 0000 10B5     		push	{r4, lr}
 4295              	.LCFI26:
 4296              		.cfi_def_cfa_offset 8
 4297              		.cfi_offset 4, -8
 4298              		.cfi_offset 14, -4
2650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4299              		.loc 1 2650 0
 4300 0002 5C23     		movs	r3, #92
 4301 0004 C35C     		ldrb	r3, [r0, r3]
 4302 0006 012B     		cmp	r3, #1
 4303 0008 0BD0     		beq	.L340
2650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4304              		.loc 1 2650 0 is_stmt 0 discriminator 2
 4305 000a 5C22     		movs	r2, #92
 4306 000c 0123     		movs	r3, #1
 4307 000e 8354     		strb	r3, [r0, r2]
2653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4308              		.loc 1 2653 0 is_stmt 1 discriminator 2
 4309 0010 0168     		ldr	r1, [r0]
 4310 0012 4B68     		ldr	r3, [r1, #4]
 4311 0014 0324     		movs	r4, #3
 4312 0016 A343     		bics	r3, r4
 4313 0018 4B60     		str	r3, [r1, #4]
2656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4314              		.loc 1 2656 0 discriminator 2
 4315 001a 0023     		movs	r3, #0
 4316 001c 8354     		strb	r3, [r0, r2]
2658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 4317              		.loc 1 2658 0 discriminator 2
 4318 001e 0020     		movs	r0, #0
 4319              	.LVL316:
 4320              	.L339:
2659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4321              		.loc 1 2659 0
 4322              		@ sp needed
 4323 0020 10BD     		pop	{r4, pc}
 4324              	.LVL317:
 4325              	.L340:
2650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4326              		.loc 1 2650 0
 4327 0022 0220     		movs	r0, #2
 4328              	.LVL318:
 4329 0024 FCE7     		b	.L339
 4330              		.cfi_endproc
 4331              	.LFE55:
 4333              		.section	.text.HAL_SPI_DMAResume,"ax",%progbits
 4334              		.align	1
 4335              		.global	HAL_SPI_DMAResume
 4336              		.syntax unified
 4337              		.code	16
 4338              		.thumb_func
 4339              		.fpu softvfp
 4341              	HAL_SPI_DMAResume:
 4342              	.LFB56:
2668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Locked */
ARM GAS  /tmp/ccXTKjLx.s 			page 164


 4343              		.loc 1 2668 0
 4344              		.cfi_startproc
 4345              		@ args = 0, pretend = 0, frame = 0
 4346              		@ frame_needed = 0, uses_anonymous_args = 0
 4347              	.LVL319:
 4348 0000 10B5     		push	{r4, lr}
 4349              	.LCFI27:
 4350              		.cfi_def_cfa_offset 8
 4351              		.cfi_offset 4, -8
 4352              		.cfi_offset 14, -4
2670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4353              		.loc 1 2670 0
 4354 0002 5C23     		movs	r3, #92
 4355 0004 C35C     		ldrb	r3, [r0, r3]
 4356 0006 012B     		cmp	r3, #1
 4357 0008 0BD0     		beq	.L343
2670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4358              		.loc 1 2670 0 is_stmt 0 discriminator 2
 4359 000a 5C22     		movs	r2, #92
 4360 000c 0123     		movs	r3, #1
 4361 000e 8354     		strb	r3, [r0, r2]
2673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4362              		.loc 1 2673 0 is_stmt 1 discriminator 2
 4363 0010 0168     		ldr	r1, [r0]
 4364 0012 4B68     		ldr	r3, [r1, #4]
 4365 0014 0324     		movs	r4, #3
 4366 0016 2343     		orrs	r3, r4
 4367 0018 4B60     		str	r3, [r1, #4]
2676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4368              		.loc 1 2676 0 discriminator 2
 4369 001a 0023     		movs	r3, #0
 4370 001c 8354     		strb	r3, [r0, r2]
2678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 4371              		.loc 1 2678 0 discriminator 2
 4372 001e 0020     		movs	r0, #0
 4373              	.LVL320:
 4374              	.L342:
2679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4375              		.loc 1 2679 0
 4376              		@ sp needed
 4377 0020 10BD     		pop	{r4, pc}
 4378              	.LVL321:
 4379              	.L343:
2670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4380              		.loc 1 2670 0
 4381 0022 0220     		movs	r0, #2
 4382              	.LVL322:
 4383 0024 FCE7     		b	.L342
 4384              		.cfi_endproc
 4385              	.LFE56:
 4387              		.section	.text.HAL_SPI_DMAStop,"ax",%progbits
 4388              		.align	1
 4389              		.global	HAL_SPI_DMAStop
 4390              		.syntax unified
 4391              		.code	16
 4392              		.thumb_func
 4393              		.fpu softvfp
ARM GAS  /tmp/ccXTKjLx.s 			page 165


 4395              	HAL_SPI_DMAStop:
 4396              	.LFB57:
2688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 4397              		.loc 1 2688 0
 4398              		.cfi_startproc
 4399              		@ args = 0, pretend = 0, frame = 0
 4400              		@ frame_needed = 0, uses_anonymous_args = 0
 4401              	.LVL323:
 4402 0000 70B5     		push	{r4, r5, r6, lr}
 4403              	.LCFI28:
 4404              		.cfi_def_cfa_offset 16
 4405              		.cfi_offset 4, -16
 4406              		.cfi_offset 5, -12
 4407              		.cfi_offset 6, -8
 4408              		.cfi_offset 14, -4
 4409 0002 0400     		movs	r4, r0
 4410              	.LVL324:
2697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4411              		.loc 1 2697 0
 4412 0004 406D     		ldr	r0, [r0, #84]
 4413              	.LVL325:
 4414 0006 0028     		cmp	r0, #0
 4415 0008 1ED0     		beq	.L347
2699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 4416              		.loc 1 2699 0
 4417 000a FFF7FEFF 		bl	HAL_DMA_Abort
 4418              	.LVL326:
 4419 000e 051E     		subs	r5, r0, #0
 4420 0010 04D0     		beq	.L345
2701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       errorcode = HAL_ERROR;
 4421              		.loc 1 2701 0
 4422 0012 236E     		ldr	r3, [r4, #96]
 4423 0014 1022     		movs	r2, #16
 4424 0016 1343     		orrs	r3, r2
 4425 0018 2366     		str	r3, [r4, #96]
 4426              	.LVL327:
2702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 4427              		.loc 1 2702 0
 4428 001a 0125     		movs	r5, #1
 4429              	.LVL328:
 4430              	.L345:
2706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4431              		.loc 1 2706 0
 4432 001c A06D     		ldr	r0, [r4, #88]
 4433 001e 0028     		cmp	r0, #0
 4434 0020 08D0     		beq	.L346
2708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 4435              		.loc 1 2708 0
 4436 0022 FFF7FEFF 		bl	HAL_DMA_Abort
 4437              	.LVL329:
 4438 0026 0028     		cmp	r0, #0
 4439 0028 04D0     		beq	.L346
2710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       errorcode = HAL_ERROR;
 4440              		.loc 1 2710 0
 4441 002a 236E     		ldr	r3, [r4, #96]
 4442 002c 1022     		movs	r2, #16
 4443 002e 1343     		orrs	r3, r2
ARM GAS  /tmp/ccXTKjLx.s 			page 166


 4444 0030 2366     		str	r3, [r4, #96]
 4445              	.LVL330:
2711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 4446              		.loc 1 2711 0
 4447 0032 0125     		movs	r5, #1
 4448              	.LVL331:
 4449              	.L346:
2716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 4450              		.loc 1 2716 0
 4451 0034 2268     		ldr	r2, [r4]
 4452 0036 5368     		ldr	r3, [r2, #4]
 4453 0038 0321     		movs	r1, #3
 4454 003a 8B43     		bics	r3, r1
 4455 003c 5360     		str	r3, [r2, #4]
2717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
 4456              		.loc 1 2717 0
 4457 003e 0122     		movs	r2, #1
 4458 0040 5D23     		movs	r3, #93
 4459 0042 E254     		strb	r2, [r4, r3]
2719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4460              		.loc 1 2719 0
 4461 0044 2800     		movs	r0, r5
 4462              		@ sp needed
 4463              	.LVL332:
 4464              	.LVL333:
 4465 0046 70BD     		pop	{r4, r5, r6, pc}
 4466              	.LVL334:
 4467              	.L347:
2689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
 4468              		.loc 1 2689 0
 4469 0048 0025     		movs	r5, #0
 4470 004a E7E7     		b	.L345
 4471              		.cfi_endproc
 4472              	.LFE57:
 4474              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 4475              		.align	1
 4476              		.weak	HAL_SPI_TxCpltCallback
 4477              		.syntax unified
 4478              		.code	16
 4479              		.thumb_func
 4480              		.fpu softvfp
 4482              	HAL_SPI_TxCpltCallback:
 4483              	.LFB59:
2835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4484              		.loc 1 2835 0
 4485              		.cfi_startproc
 4486              		@ args = 0, pretend = 0, frame = 0
 4487              		@ frame_needed = 0, uses_anonymous_args = 0
 4488              		@ link register save eliminated.
 4489              	.LVL335:
2842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4490              		.loc 1 2842 0
 4491              		@ sp needed
 4492 0000 7047     		bx	lr
 4493              		.cfi_endproc
 4494              	.LFE59:
 4496              		.section	.text.HAL_SPI_RxCpltCallback,"ax",%progbits
ARM GAS  /tmp/ccXTKjLx.s 			page 167


 4497              		.align	1
 4498              		.weak	HAL_SPI_RxCpltCallback
 4499              		.syntax unified
 4500              		.code	16
 4501              		.thumb_func
 4502              		.fpu softvfp
 4504              	HAL_SPI_RxCpltCallback:
 4505              	.LFB60:
2851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4506              		.loc 1 2851 0
 4507              		.cfi_startproc
 4508              		@ args = 0, pretend = 0, frame = 0
 4509              		@ frame_needed = 0, uses_anonymous_args = 0
 4510              		@ link register save eliminated.
 4511              	.LVL336:
2858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4512              		.loc 1 2858 0
 4513              		@ sp needed
 4514 0000 7047     		bx	lr
 4515              		.cfi_endproc
 4516              	.LFE60:
 4518              		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 4519              		.align	1
 4520              		.weak	HAL_SPI_TxRxCpltCallback
 4521              		.syntax unified
 4522              		.code	16
 4523              		.thumb_func
 4524              		.fpu softvfp
 4526              	HAL_SPI_TxRxCpltCallback:
 4527              	.LFB61:
2867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4528              		.loc 1 2867 0
 4529              		.cfi_startproc
 4530              		@ args = 0, pretend = 0, frame = 0
 4531              		@ frame_needed = 0, uses_anonymous_args = 0
 4532              		@ link register save eliminated.
 4533              	.LVL337:
2874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4534              		.loc 1 2874 0
 4535              		@ sp needed
 4536 0000 7047     		bx	lr
 4537              		.cfi_endproc
 4538              	.LFE61:
 4540              		.section	.text.HAL_SPI_TxHalfCpltCallback,"ax",%progbits
 4541              		.align	1
 4542              		.weak	HAL_SPI_TxHalfCpltCallback
 4543              		.syntax unified
 4544              		.code	16
 4545              		.thumb_func
 4546              		.fpu softvfp
 4548              	HAL_SPI_TxHalfCpltCallback:
 4549              	.LFB62:
2883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4550              		.loc 1 2883 0
 4551              		.cfi_startproc
 4552              		@ args = 0, pretend = 0, frame = 0
 4553              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccXTKjLx.s 			page 168


 4554              		@ link register save eliminated.
 4555              	.LVL338:
2890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4556              		.loc 1 2890 0
 4557              		@ sp needed
 4558 0000 7047     		bx	lr
 4559              		.cfi_endproc
 4560              	.LFE62:
 4562              		.section	.text.SPI_DMAHalfTransmitCplt,"ax",%progbits
 4563              		.align	1
 4564              		.syntax unified
 4565              		.code	16
 4566              		.thumb_func
 4567              		.fpu softvfp
 4569              	SPI_DMAHalfTransmitCplt:
 4570              	.LFB72:
3262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4571              		.loc 1 3262 0
 4572              		.cfi_startproc
 4573              		@ args = 0, pretend = 0, frame = 0
 4574              		@ frame_needed = 0, uses_anonymous_args = 0
 4575              	.LVL339:
 4576 0000 10B5     		push	{r4, lr}
 4577              	.LCFI29:
 4578              		.cfi_def_cfa_offset 8
 4579              		.cfi_offset 4, -8
 4580              		.cfi_offset 14, -4
3263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4581              		.loc 1 3263 0
 4582 0002 406A     		ldr	r0, [r0, #36]
 4583              	.LVL340:
3269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4584              		.loc 1 3269 0
 4585 0004 FFF7FEFF 		bl	HAL_SPI_TxHalfCpltCallback
 4586              	.LVL341:
3271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4587              		.loc 1 3271 0
 4588              		@ sp needed
 4589 0008 10BD     		pop	{r4, pc}
 4590              		.cfi_endproc
 4591              	.LFE72:
 4593              		.section	.text.HAL_SPI_RxHalfCpltCallback,"ax",%progbits
 4594              		.align	1
 4595              		.weak	HAL_SPI_RxHalfCpltCallback
 4596              		.syntax unified
 4597              		.code	16
 4598              		.thumb_func
 4599              		.fpu softvfp
 4601              	HAL_SPI_RxHalfCpltCallback:
 4602              	.LFB63:
2899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4603              		.loc 1 2899 0
 4604              		.cfi_startproc
 4605              		@ args = 0, pretend = 0, frame = 0
 4606              		@ frame_needed = 0, uses_anonymous_args = 0
 4607              		@ link register save eliminated.
 4608              	.LVL342:
ARM GAS  /tmp/ccXTKjLx.s 			page 169


2906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4609              		.loc 1 2906 0
 4610              		@ sp needed
 4611 0000 7047     		bx	lr
 4612              		.cfi_endproc
 4613              	.LFE63:
 4615              		.section	.text.SPI_DMAHalfReceiveCplt,"ax",%progbits
 4616              		.align	1
 4617              		.syntax unified
 4618              		.code	16
 4619              		.thumb_func
 4620              		.fpu softvfp
 4622              	SPI_DMAHalfReceiveCplt:
 4623              	.LFB73:
3280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4624              		.loc 1 3280 0
 4625              		.cfi_startproc
 4626              		@ args = 0, pretend = 0, frame = 0
 4627              		@ frame_needed = 0, uses_anonymous_args = 0
 4628              	.LVL343:
 4629 0000 10B5     		push	{r4, lr}
 4630              	.LCFI30:
 4631              		.cfi_def_cfa_offset 8
 4632              		.cfi_offset 4, -8
 4633              		.cfi_offset 14, -4
3281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4634              		.loc 1 3281 0
 4635 0002 406A     		ldr	r0, [r0, #36]
 4636              	.LVL344:
3287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4637              		.loc 1 3287 0
 4638 0004 FFF7FEFF 		bl	HAL_SPI_RxHalfCpltCallback
 4639              	.LVL345:
3289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4640              		.loc 1 3289 0
 4641              		@ sp needed
 4642 0008 10BD     		pop	{r4, pc}
 4643              		.cfi_endproc
 4644              	.LFE73:
 4646              		.section	.text.HAL_SPI_TxRxHalfCpltCallback,"ax",%progbits
 4647              		.align	1
 4648              		.weak	HAL_SPI_TxRxHalfCpltCallback
 4649              		.syntax unified
 4650              		.code	16
 4651              		.thumb_func
 4652              		.fpu softvfp
 4654              	HAL_SPI_TxRxHalfCpltCallback:
 4655              	.LFB64:
2915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4656              		.loc 1 2915 0
 4657              		.cfi_startproc
 4658              		@ args = 0, pretend = 0, frame = 0
 4659              		@ frame_needed = 0, uses_anonymous_args = 0
 4660              		@ link register save eliminated.
 4661              	.LVL346:
2922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4662              		.loc 1 2922 0
ARM GAS  /tmp/ccXTKjLx.s 			page 170


 4663              		@ sp needed
 4664 0000 7047     		bx	lr
 4665              		.cfi_endproc
 4666              	.LFE64:
 4668              		.section	.text.SPI_DMAHalfTransmitReceiveCplt,"ax",%progbits
 4669              		.align	1
 4670              		.syntax unified
 4671              		.code	16
 4672              		.thumb_func
 4673              		.fpu softvfp
 4675              	SPI_DMAHalfTransmitReceiveCplt:
 4676              	.LFB74:
3298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4677              		.loc 1 3298 0
 4678              		.cfi_startproc
 4679              		@ args = 0, pretend = 0, frame = 0
 4680              		@ frame_needed = 0, uses_anonymous_args = 0
 4681              	.LVL347:
 4682 0000 10B5     		push	{r4, lr}
 4683              	.LCFI31:
 4684              		.cfi_def_cfa_offset 8
 4685              		.cfi_offset 4, -8
 4686              		.cfi_offset 14, -4
3299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4687              		.loc 1 3299 0
 4688 0002 406A     		ldr	r0, [r0, #36]
 4689              	.LVL348:
3305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4690              		.loc 1 3305 0
 4691 0004 FFF7FEFF 		bl	HAL_SPI_TxRxHalfCpltCallback
 4692              	.LVL349:
3307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4693              		.loc 1 3307 0
 4694              		@ sp needed
 4695 0008 10BD     		pop	{r4, pc}
 4696              		.cfi_endproc
 4697              	.LFE74:
 4699              		.section	.text.HAL_SPI_ErrorCallback,"ax",%progbits
 4700              		.align	1
 4701              		.weak	HAL_SPI_ErrorCallback
 4702              		.syntax unified
 4703              		.code	16
 4704              		.thumb_func
 4705              		.fpu softvfp
 4707              	HAL_SPI_ErrorCallback:
 4708              	.LFB65:
2931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4709              		.loc 1 2931 0
 4710              		.cfi_startproc
 4711              		@ args = 0, pretend = 0, frame = 0
 4712              		@ frame_needed = 0, uses_anonymous_args = 0
 4713              		@ link register save eliminated.
 4714              	.LVL350:
2941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4715              		.loc 1 2941 0
 4716              		@ sp needed
 4717 0000 7047     		bx	lr
ARM GAS  /tmp/ccXTKjLx.s 			page 171


 4718              		.cfi_endproc
 4719              	.LFE65:
 4721              		.section	.text.SPI_CloseTx_ISR,"ax",%progbits
 4722              		.align	1
 4723              		.syntax unified
 4724              		.code	16
 4725              		.thumb_func
 4726              		.fpu softvfp
 4728              	SPI_CloseTx_ISR:
 4729              	.LFB93:
4177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
 4730              		.loc 1 4177 0
 4731              		.cfi_startproc
 4732              		@ args = 0, pretend = 0, frame = 8
 4733              		@ frame_needed = 0, uses_anonymous_args = 0
 4734              	.LVL351:
 4735 0000 10B5     		push	{r4, lr}
 4736              	.LCFI32:
 4737              		.cfi_def_cfa_offset 8
 4738              		.cfi_offset 4, -8
 4739              		.cfi_offset 14, -4
 4740 0002 82B0     		sub	sp, sp, #8
 4741              	.LCFI33:
 4742              		.cfi_def_cfa_offset 16
 4743 0004 0400     		movs	r4, r0
4181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4744              		.loc 1 4181 0
 4745 0006 FFF7FEFF 		bl	HAL_GetTick
 4746              	.LVL352:
 4747 000a 0200     		movs	r2, r0
 4748              	.LVL353:
4184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4749              		.loc 1 4184 0
 4750 000c 2168     		ldr	r1, [r4]
 4751 000e 4B68     		ldr	r3, [r1, #4]
 4752 0010 A020     		movs	r0, #160
 4753              	.LVL354:
 4754 0012 8343     		bics	r3, r0
 4755 0014 4B60     		str	r3, [r1, #4]
4187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4756              		.loc 1 4187 0
 4757 0016 6421     		movs	r1, #100
 4758 0018 2000     		movs	r0, r4
 4759 001a FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4760              	.LVL355:
 4761 001e 0028     		cmp	r0, #0
 4762 0020 03D0     		beq	.L359
4189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 4763              		.loc 1 4189 0
 4764 0022 236E     		ldr	r3, [r4, #96]
 4765 0024 2022     		movs	r2, #32
 4766 0026 1343     		orrs	r3, r2
 4767 0028 2366     		str	r3, [r4, #96]
 4768              	.L359:
4193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4769              		.loc 1 4193 0
 4770 002a A368     		ldr	r3, [r4, #8]
ARM GAS  /tmp/ccXTKjLx.s 			page 172


 4771 002c 002B     		cmp	r3, #0
 4772 002e 06D1     		bne	.L360
 4773              	.LBB5:
4195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 4774              		.loc 1 4195 0
 4775 0030 0193     		str	r3, [sp, #4]
 4776 0032 2368     		ldr	r3, [r4]
 4777 0034 DA68     		ldr	r2, [r3, #12]
 4778 0036 0192     		str	r2, [sp, #4]
 4779 0038 9B68     		ldr	r3, [r3, #8]
 4780 003a 0193     		str	r3, [sp, #4]
 4781 003c 019B     		ldr	r3, [sp, #4]
 4782              	.L360:
 4783              	.LBE5:
4198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 4784              		.loc 1 4198 0
 4785 003e 0122     		movs	r2, #1
 4786 0040 5D23     		movs	r3, #93
 4787 0042 E254     		strb	r2, [r4, r3]
4199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4788              		.loc 1 4199 0
 4789 0044 236E     		ldr	r3, [r4, #96]
 4790 0046 002B     		cmp	r3, #0
 4791 0048 04D1     		bne	.L363
4214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4792              		.loc 1 4214 0
 4793 004a 2000     		movs	r0, r4
 4794 004c FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 4795              	.LVL356:
 4796              	.L358:
4217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4797              		.loc 1 4217 0
 4798 0050 02B0     		add	sp, sp, #8
 4799              		@ sp needed
 4800              	.LVL357:
 4801 0052 10BD     		pop	{r4, pc}
 4802              	.LVL358:
 4803              	.L363:
4205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4804              		.loc 1 4205 0
 4805 0054 2000     		movs	r0, r4
 4806 0056 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4807              	.LVL359:
 4808 005a F9E7     		b	.L358
 4809              		.cfi_endproc
 4810              	.LFE93:
 4812              		.section	.text.SPI_TxISR_8BIT,"ax",%progbits
 4813              		.align	1
 4814              		.syntax unified
 4815              		.code	16
 4816              		.thumb_func
 4817              		.fpu softvfp
 4819              	SPI_TxISR_8BIT:
 4820              	.LFB85:
3812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 4821              		.loc 1 3812 0
 4822              		.cfi_startproc
ARM GAS  /tmp/ccXTKjLx.s 			page 173


 4823              		@ args = 0, pretend = 0, frame = 0
 4824              		@ frame_needed = 0, uses_anonymous_args = 0
 4825              	.LVL360:
 4826 0000 10B5     		push	{r4, lr}
 4827              	.LCFI34:
 4828              		.cfi_def_cfa_offset 8
 4829              		.cfi_offset 4, -8
 4830              		.cfi_offset 14, -4
3813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr++;
 4831              		.loc 1 3813 0
 4832 0002 836B     		ldr	r3, [r0, #56]
 4833 0004 1B78     		ldrb	r3, [r3]
 4834 0006 0268     		ldr	r2, [r0]
 4835 0008 1373     		strb	r3, [r2, #12]
3814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount--;
 4836              		.loc 1 3814 0
 4837 000a 836B     		ldr	r3, [r0, #56]
 4838 000c 0133     		adds	r3, r3, #1
 4839 000e 8363     		str	r3, [r0, #56]
3815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4840              		.loc 1 3815 0
 4841 0010 C38F     		ldrh	r3, [r0, #62]
 4842 0012 013B     		subs	r3, r3, #1
 4843 0014 9BB2     		uxth	r3, r3
 4844 0016 C387     		strh	r3, [r0, #62]
3817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4845              		.loc 1 3817 0
 4846 0018 C38F     		ldrh	r3, [r0, #62]
 4847 001a 9BB2     		uxth	r3, r3
 4848 001c 002B     		cmp	r3, #0
 4849 001e 00D0     		beq	.L366
 4850              	.LVL361:
 4851              	.L364:
3828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4852              		.loc 1 3828 0
 4853              		@ sp needed
 4854 0020 10BD     		pop	{r4, pc}
 4855              	.LVL362:
 4856              	.L366:
3826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 4857              		.loc 1 3826 0
 4858 0022 FFF7FEFF 		bl	SPI_CloseTx_ISR
 4859              	.LVL363:
3828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4860              		.loc 1 3828 0
 4861 0026 FBE7     		b	.L364
 4862              		.cfi_endproc
 4863              	.LFE85:
 4865              		.section	.text.SPI_TxISR_16BIT,"ax",%progbits
 4866              		.align	1
 4867              		.syntax unified
 4868              		.code	16
 4869              		.thumb_func
 4870              		.fpu softvfp
 4872              	SPI_TxISR_16BIT:
 4873              	.LFB86:
3837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
ARM GAS  /tmp/ccXTKjLx.s 			page 174


 4874              		.loc 1 3837 0
 4875              		.cfi_startproc
 4876              		@ args = 0, pretend = 0, frame = 0
 4877              		@ frame_needed = 0, uses_anonymous_args = 0
 4878              	.LVL364:
 4879 0000 10B5     		push	{r4, lr}
 4880              	.LCFI35:
 4881              		.cfi_def_cfa_offset 8
 4882              		.cfi_offset 4, -8
 4883              		.cfi_offset 14, -4
3839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 4884              		.loc 1 3839 0
 4885 0002 0368     		ldr	r3, [r0]
 4886 0004 826B     		ldr	r2, [r0, #56]
 4887 0006 1288     		ldrh	r2, [r2]
 4888 0008 DA60     		str	r2, [r3, #12]
3840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount--;
 4889              		.loc 1 3840 0
 4890 000a 836B     		ldr	r3, [r0, #56]
 4891 000c 0233     		adds	r3, r3, #2
 4892 000e 8363     		str	r3, [r0, #56]
3841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4893              		.loc 1 3841 0
 4894 0010 C38F     		ldrh	r3, [r0, #62]
 4895 0012 013B     		subs	r3, r3, #1
 4896 0014 9BB2     		uxth	r3, r3
 4897 0016 C387     		strh	r3, [r0, #62]
3843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4898              		.loc 1 3843 0
 4899 0018 C38F     		ldrh	r3, [r0, #62]
 4900 001a 9BB2     		uxth	r3, r3
 4901 001c 002B     		cmp	r3, #0
 4902 001e 00D0     		beq	.L369
 4903              	.LVL365:
 4904              	.L367:
3854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4905              		.loc 1 3854 0
 4906              		@ sp needed
 4907 0020 10BD     		pop	{r4, pc}
 4908              	.LVL366:
 4909              	.L369:
3852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 4910              		.loc 1 3852 0
 4911 0022 FFF7FEFF 		bl	SPI_CloseTx_ISR
 4912              	.LVL367:
3854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4913              		.loc 1 3854 0
 4914 0026 FBE7     		b	.L367
 4915              		.cfi_endproc
 4916              	.LFE86:
 4918              		.section	.text.SPI_CloseRx_ISR,"ax",%progbits
 4919              		.align	1
 4920              		.syntax unified
 4921              		.code	16
 4922              		.thumb_func
 4923              		.fpu softvfp
 4925              	SPI_CloseRx_ISR:
ARM GAS  /tmp/ccXTKjLx.s 			page 175


 4926              	.LFB92:
4120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
 4927              		.loc 1 4120 0
 4928              		.cfi_startproc
 4929              		@ args = 0, pretend = 0, frame = 0
 4930              		@ frame_needed = 0, uses_anonymous_args = 0
 4931              	.LVL368:
 4932 0000 10B5     		push	{r4, lr}
 4933              	.LCFI36:
 4934              		.cfi_def_cfa_offset 8
 4935              		.cfi_offset 4, -8
 4936              		.cfi_offset 14, -4
 4937 0002 0400     		movs	r4, r0
4122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4938              		.loc 1 4122 0
 4939 0004 0268     		ldr	r2, [r0]
 4940 0006 5368     		ldr	r3, [r2, #4]
 4941 0008 6021     		movs	r1, #96
 4942 000a 8B43     		bics	r3, r1
 4943 000c 5360     		str	r3, [r2, #4]
4125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4944              		.loc 1 4125 0
 4945 000e FFF7FEFF 		bl	HAL_GetTick
 4946              	.LVL369:
 4947 0012 0200     		movs	r2, r0
 4948 0014 6421     		movs	r1, #100
 4949 0016 2000     		movs	r0, r4
 4950 0018 FFF7FEFF 		bl	SPI_EndRxTransaction
 4951              	.LVL370:
 4952 001c 0028     		cmp	r0, #0
 4953 001e 03D0     		beq	.L371
4127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 4954              		.loc 1 4127 0
 4955 0020 236E     		ldr	r3, [r4, #96]
 4956 0022 2022     		movs	r2, #32
 4957 0024 1343     		orrs	r3, r2
 4958 0026 2366     		str	r3, [r4, #96]
 4959              	.L371:
4129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4960              		.loc 1 4129 0
 4961 0028 0122     		movs	r2, #1
 4962 002a 5D23     		movs	r3, #93
 4963 002c E254     		strb	r2, [r4, r3]
4147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 4964              		.loc 1 4147 0
 4965 002e 236E     		ldr	r3, [r4, #96]
 4966 0030 002B     		cmp	r3, #0
 4967 0032 03D0     		beq	.L374
4162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4968              		.loc 1 4162 0
 4969 0034 2000     		movs	r0, r4
 4970 0036 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4971              	.LVL371:
 4972              	.L370:
4168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4973              		.loc 1 4168 0
 4974              		@ sp needed
ARM GAS  /tmp/ccXTKjLx.s 			page 176


 4975              	.LVL372:
 4976 003a 10BD     		pop	{r4, pc}
 4977              	.LVL373:
 4978              	.L374:
4153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4979              		.loc 1 4153 0
 4980 003c 2000     		movs	r0, r4
 4981 003e FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 4982              	.LVL374:
 4983 0042 FAE7     		b	.L370
 4984              		.cfi_endproc
 4985              	.LFE92:
 4987              		.section	.text.SPI_RxISR_8BIT,"ax",%progbits
 4988              		.align	1
 4989              		.syntax unified
 4990              		.code	16
 4991              		.thumb_func
 4992              		.fpu softvfp
 4994              	SPI_RxISR_8BIT:
 4995              	.LFB83:
3727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *hspi->pRxBuffPtr = (*(__IO uint8_t *)&hspi->Instance->DR);
 4996              		.loc 1 3727 0
 4997              		.cfi_startproc
 4998              		@ args = 0, pretend = 0, frame = 0
 4999              		@ frame_needed = 0, uses_anonymous_args = 0
 5000              	.LVL375:
 5001 0000 10B5     		push	{r4, lr}
 5002              	.LCFI37:
 5003              		.cfi_def_cfa_offset 8
 5004              		.cfi_offset 4, -8
 5005              		.cfi_offset 14, -4
3728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr++;
 5006              		.loc 1 3728 0
 5007 0002 0368     		ldr	r3, [r0]
 5008 0004 1B7B     		ldrb	r3, [r3, #12]
 5009 0006 026C     		ldr	r2, [r0, #64]
 5010 0008 1370     		strb	r3, [r2]
3729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount--;
 5011              		.loc 1 3729 0
 5012 000a 036C     		ldr	r3, [r0, #64]
 5013 000c 0133     		adds	r3, r3, #1
 5014 000e 0364     		str	r3, [r0, #64]
3730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5015              		.loc 1 3730 0
 5016 0010 4622     		movs	r2, #70
 5017 0012 835A     		ldrh	r3, [r0, r2]
 5018 0014 013B     		subs	r3, r3, #1
 5019 0016 9BB2     		uxth	r3, r3
 5020 0018 8352     		strh	r3, [r0, r2]
3740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5021              		.loc 1 3740 0
 5022 001a 835A     		ldrh	r3, [r0, r2]
 5023 001c 9BB2     		uxth	r3, r3
 5024 001e 002B     		cmp	r3, #0
 5025 0020 00D0     		beq	.L377
 5026              	.LVL376:
 5027              	.L375:
ARM GAS  /tmp/ccXTKjLx.s 			page 177


3751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5028              		.loc 1 3751 0
 5029              		@ sp needed
 5030 0022 10BD     		pop	{r4, pc}
 5031              	.LVL377:
 5032              	.L377:
3749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 5033              		.loc 1 3749 0
 5034 0024 FFF7FEFF 		bl	SPI_CloseRx_ISR
 5035              	.LVL378:
3751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5036              		.loc 1 3751 0
 5037 0028 FBE7     		b	.L375
 5038              		.cfi_endproc
 5039              	.LFE83:
 5041              		.section	.text.SPI_RxISR_16BIT,"ax",%progbits
 5042              		.align	1
 5043              		.syntax unified
 5044              		.code	16
 5045              		.thumb_func
 5046              		.fpu softvfp
 5048              	SPI_RxISR_16BIT:
 5049              	.LFB84:
3779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
 5050              		.loc 1 3779 0
 5051              		.cfi_startproc
 5052              		@ args = 0, pretend = 0, frame = 0
 5053              		@ frame_needed = 0, uses_anonymous_args = 0
 5054              	.LVL379:
 5055 0000 10B5     		push	{r4, lr}
 5056              	.LCFI38:
 5057              		.cfi_def_cfa_offset 8
 5058              		.cfi_offset 4, -8
 5059              		.cfi_offset 14, -4
3780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 5060              		.loc 1 3780 0
 5061 0002 0368     		ldr	r3, [r0]
 5062 0004 DB68     		ldr	r3, [r3, #12]
 5063 0006 026C     		ldr	r2, [r0, #64]
 5064 0008 1380     		strh	r3, [r2]
3781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount--;
 5065              		.loc 1 3781 0
 5066 000a 036C     		ldr	r3, [r0, #64]
 5067 000c 0233     		adds	r3, r3, #2
 5068 000e 0364     		str	r3, [r0, #64]
3782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5069              		.loc 1 3782 0
 5070 0010 4622     		movs	r2, #70
 5071 0012 835A     		ldrh	r3, [r0, r2]
 5072 0014 013B     		subs	r3, r3, #1
 5073 0016 9BB2     		uxth	r3, r3
 5074 0018 8352     		strh	r3, [r0, r2]
3792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5075              		.loc 1 3792 0
 5076 001a 835A     		ldrh	r3, [r0, r2]
 5077 001c 9BB2     		uxth	r3, r3
 5078 001e 002B     		cmp	r3, #0
ARM GAS  /tmp/ccXTKjLx.s 			page 178


 5079 0020 00D0     		beq	.L380
 5080              	.LVL380:
 5081              	.L378:
3803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5082              		.loc 1 3803 0
 5083              		@ sp needed
 5084 0022 10BD     		pop	{r4, pc}
 5085              	.LVL381:
 5086              	.L380:
3801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 5087              		.loc 1 3801 0
 5088 0024 FFF7FEFF 		bl	SPI_CloseRx_ISR
 5089              	.LVL382:
3803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5090              		.loc 1 3803 0
 5091 0028 FBE7     		b	.L378
 5092              		.cfi_endproc
 5093              	.LFE84:
 5095              		.section	.text.SPI_CloseRxTx_ISR,"ax",%progbits
 5096              		.align	1
 5097              		.syntax unified
 5098              		.code	16
 5099              		.thumb_func
 5100              		.fpu softvfp
 5102              	SPI_CloseRxTx_ISR:
 5103              	.LFB91:
4043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
 5104              		.loc 1 4043 0
 5105              		.cfi_startproc
 5106              		@ args = 0, pretend = 0, frame = 0
 5107              		@ frame_needed = 0, uses_anonymous_args = 0
 5108              	.LVL383:
 5109 0000 10B5     		push	{r4, lr}
 5110              	.LCFI39:
 5111              		.cfi_def_cfa_offset 8
 5112              		.cfi_offset 4, -8
 5113              		.cfi_offset 14, -4
 5114 0002 0400     		movs	r4, r0
4047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5115              		.loc 1 4047 0
 5116 0004 FFF7FEFF 		bl	HAL_GetTick
 5117              	.LVL384:
 5118 0008 0200     		movs	r2, r0
 5119              	.LVL385:
4050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5120              		.loc 1 4050 0
 5121 000a 2168     		ldr	r1, [r4]
 5122 000c 4B68     		ldr	r3, [r1, #4]
 5123 000e 2020     		movs	r0, #32
 5124              	.LVL386:
 5125 0010 8343     		bics	r3, r0
 5126 0012 4B60     		str	r3, [r1, #4]
4053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5127              		.loc 1 4053 0
 5128 0014 6421     		movs	r1, #100
 5129 0016 2000     		movs	r0, r4
 5130 0018 FFF7FEFF 		bl	SPI_EndRxTxTransaction
ARM GAS  /tmp/ccXTKjLx.s 			page 179


 5131              	.LVL387:
 5132 001c 0028     		cmp	r0, #0
 5133 001e 03D0     		beq	.L382
4055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 5134              		.loc 1 4055 0
 5135 0020 236E     		ldr	r3, [r4, #96]
 5136 0022 2022     		movs	r2, #32
 5137 0024 1343     		orrs	r3, r2
 5138 0026 2366     		str	r3, [r4, #96]
 5139              	.L382:
4075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5140              		.loc 1 4075 0
 5141 0028 236E     		ldr	r3, [r4, #96]
 5142 002a 002B     		cmp	r3, #0
 5143 002c 11D1     		bne	.L383
4077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 5144              		.loc 1 4077 0
 5145 002e 5D33     		adds	r3, r3, #93
 5146 0030 E35C     		ldrb	r3, [r4, r3]
 5147 0032 042B     		cmp	r3, #4
 5148 0034 06D0     		beq	.L386
4089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Call user TxRx complete callback */
 5149              		.loc 1 4089 0
 5150 0036 0122     		movs	r2, #1
 5151 0038 5D23     		movs	r3, #93
 5152 003a E254     		strb	r2, [r4, r3]
4094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5153              		.loc 1 4094 0
 5154 003c 2000     		movs	r0, r4
 5155 003e FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 5156              	.LVL388:
 5157              	.L381:
4111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5158              		.loc 1 4111 0
 5159              		@ sp needed
 5160              	.LVL389:
 5161 0042 10BD     		pop	{r4, pc}
 5162              	.LVL390:
 5163              	.L386:
4079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Call user Rx complete callback */
 5164              		.loc 1 4079 0
 5165 0044 0122     		movs	r2, #1
 5166 0046 5933     		adds	r3, r3, #89
 5167 0048 E254     		strb	r2, [r4, r3]
4084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5168              		.loc 1 4084 0
 5169 004a 2000     		movs	r0, r4
 5170 004c FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 5171              	.LVL391:
 5172 0050 F7E7     		b	.L381
 5173              	.L383:
4100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Call user error callback */
 5174              		.loc 1 4100 0
 5175 0052 0122     		movs	r2, #1
 5176 0054 5D23     		movs	r3, #93
 5177 0056 E254     		strb	r2, [r4, r3]
4105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccXTKjLx.s 			page 180


 5178              		.loc 1 4105 0
 5179 0058 2000     		movs	r0, r4
 5180 005a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5181              	.LVL392:
4111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5182              		.loc 1 4111 0
 5183 005e F0E7     		b	.L381
 5184              		.cfi_endproc
 5185              	.LFE91:
 5187              		.section	.text.SPI_2linesTxISR_8BIT,"ax",%progbits
 5188              		.align	1
 5189              		.syntax unified
 5190              		.code	16
 5191              		.thumb_func
 5192              		.fpu softvfp
 5194              	SPI_2linesTxISR_8BIT:
 5195              	.LFB80:
3570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Transmit data in packing Bit mode */
 5196              		.loc 1 3570 0
 5197              		.cfi_startproc
 5198              		@ args = 0, pretend = 0, frame = 0
 5199              		@ frame_needed = 0, uses_anonymous_args = 0
 5200              	.LVL393:
 5201 0000 10B5     		push	{r4, lr}
 5202              	.LCFI40:
 5203              		.cfi_def_cfa_offset 8
 5204              		.cfi_offset 4, -8
 5205              		.cfi_offset 14, -4
3572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5206              		.loc 1 3572 0
 5207 0002 C38F     		ldrh	r3, [r0, #62]
 5208 0004 9BB2     		uxth	r3, r3
 5209 0006 012B     		cmp	r3, #1
 5210 0008 19D9     		bls	.L388
3574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->pTxBuffPtr += sizeof(uint16_t);
 5211              		.loc 1 3574 0
 5212 000a 0368     		ldr	r3, [r0]
 5213 000c 826B     		ldr	r2, [r0, #56]
 5214 000e 1288     		ldrh	r2, [r2]
 5215 0010 DA60     		str	r2, [r3, #12]
3575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxXferCount -= 2U;
 5216              		.loc 1 3575 0
 5217 0012 836B     		ldr	r3, [r0, #56]
 5218 0014 0233     		adds	r3, r3, #2
 5219 0016 8363     		str	r3, [r0, #56]
3576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 5220              		.loc 1 3576 0
 5221 0018 C38F     		ldrh	r3, [r0, #62]
 5222 001a 023B     		subs	r3, r3, #2
 5223 001c 9BB2     		uxth	r3, r3
 5224 001e C387     		strh	r3, [r0, #62]
 5225              	.L389:
3587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5226              		.loc 1 3587 0
 5227 0020 C38F     		ldrh	r3, [r0, #62]
 5228 0022 9BB2     		uxth	r3, r3
 5229 0024 002B     		cmp	r3, #0
ARM GAS  /tmp/ccXTKjLx.s 			page 181


 5230 0026 09D1     		bne	.L387
3601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5231              		.loc 1 3601 0
 5232 0028 0268     		ldr	r2, [r0]
 5233 002a 5368     		ldr	r3, [r2, #4]
 5234 002c 8021     		movs	r1, #128
 5235 002e 8B43     		bics	r3, r1
 5236 0030 5360     		str	r3, [r2, #4]
3603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5237              		.loc 1 3603 0
 5238 0032 4623     		movs	r3, #70
 5239 0034 C35A     		ldrh	r3, [r0, r3]
 5240 0036 9BB2     		uxth	r3, r3
 5241 0038 002B     		cmp	r3, #0
 5242 003a 0CD0     		beq	.L391
 5243              	.LVL394:
 5244              	.L387:
3608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5245              		.loc 1 3608 0
 5246              		@ sp needed
 5247 003c 10BD     		pop	{r4, pc}
 5248              	.LVL395:
 5249              	.L388:
3581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->pTxBuffPtr++;
 5250              		.loc 1 3581 0
 5251 003e 836B     		ldr	r3, [r0, #56]
 5252 0040 1B78     		ldrb	r3, [r3]
 5253 0042 0268     		ldr	r2, [r0]
 5254 0044 1373     		strb	r3, [r2, #12]
3582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxXferCount--;
 5255              		.loc 1 3582 0
 5256 0046 836B     		ldr	r3, [r0, #56]
 5257 0048 0133     		adds	r3, r3, #1
 5258 004a 8363     		str	r3, [r0, #56]
3583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 5259              		.loc 1 3583 0
 5260 004c C38F     		ldrh	r3, [r0, #62]
 5261 004e 013B     		subs	r3, r3, #1
 5262 0050 9BB2     		uxth	r3, r3
 5263 0052 C387     		strh	r3, [r0, #62]
 5264 0054 E4E7     		b	.L389
 5265              	.L391:
3605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5266              		.loc 1 3605 0
 5267 0056 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 5268              	.LVL396:
3608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5269              		.loc 1 3608 0
 5270 005a EFE7     		b	.L387
 5271              		.cfi_endproc
 5272              	.LFE80:
 5274              		.section	.text.SPI_2linesRxISR_8BIT,"ax",%progbits
 5275              		.align	1
 5276              		.syntax unified
 5277              		.code	16
 5278              		.thumb_func
 5279              		.fpu softvfp
ARM GAS  /tmp/ccXTKjLx.s 			page 182


 5281              	SPI_2linesRxISR_8BIT:
 5282              	.LFB79:
3492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Receive data in packing mode */
 5283              		.loc 1 3492 0
 5284              		.cfi_startproc
 5285              		@ args = 0, pretend = 0, frame = 0
 5286              		@ frame_needed = 0, uses_anonymous_args = 0
 5287              	.LVL397:
 5288 0000 10B5     		push	{r4, lr}
 5289              	.LCFI41:
 5290              		.cfi_def_cfa_offset 8
 5291              		.cfi_offset 4, -8
 5292              		.cfi_offset 14, -4
3494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5293              		.loc 1 3494 0
 5294 0002 4623     		movs	r3, #70
 5295 0004 C35A     		ldrh	r3, [r0, r3]
 5296 0006 9BB2     		uxth	r3, r3
 5297 0008 012B     		cmp	r3, #1
 5298 000a 25D9     		bls	.L393
3496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->pRxBuffPtr += sizeof(uint16_t);
 5299              		.loc 1 3496 0
 5300 000c 0368     		ldr	r3, [r0]
 5301 000e DB68     		ldr	r3, [r3, #12]
 5302 0010 026C     		ldr	r2, [r0, #64]
 5303 0012 1380     		strh	r3, [r2]
3497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxXferCount -= 2U;
 5304              		.loc 1 3497 0
 5305 0014 036C     		ldr	r3, [r0, #64]
 5306 0016 0233     		adds	r3, r3, #2
 5307 0018 0364     		str	r3, [r0, #64]
3498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->RxXferCount == 1U)
 5308              		.loc 1 3498 0
 5309 001a 4622     		movs	r2, #70
 5310 001c 835A     		ldrh	r3, [r0, r2]
 5311 001e 023B     		subs	r3, r3, #2
 5312 0020 9BB2     		uxth	r3, r3
 5313 0022 8352     		strh	r3, [r0, r2]
3499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5314              		.loc 1 3499 0
 5315 0024 835A     		ldrh	r3, [r0, r2]
 5316 0026 9BB2     		uxth	r3, r3
 5317 0028 012B     		cmp	r3, #1
 5318 002a 0ED0     		beq	.L396
 5319              	.L394:
3514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5320              		.loc 1 3514 0
 5321 002c 4623     		movs	r3, #70
 5322 002e C35A     		ldrh	r3, [r0, r3]
 5323 0030 9BB2     		uxth	r3, r3
 5324 0032 002B     		cmp	r3, #0
 5325 0034 08D1     		bne	.L392
3526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5326              		.loc 1 3526 0
 5327 0036 0268     		ldr	r2, [r0]
 5328 0038 5368     		ldr	r3, [r2, #4]
 5329 003a 6021     		movs	r1, #96
ARM GAS  /tmp/ccXTKjLx.s 			page 183


 5330 003c 8B43     		bics	r3, r1
 5331 003e 5360     		str	r3, [r2, #4]
3528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5332              		.loc 1 3528 0
 5333 0040 C38F     		ldrh	r3, [r0, #62]
 5334 0042 9BB2     		uxth	r3, r3
 5335 0044 002B     		cmp	r3, #0
 5336 0046 14D0     		beq	.L397
 5337              	.LVL398:
 5338              	.L392:
3533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5339              		.loc 1 3533 0
 5340              		@ sp needed
 5341 0048 10BD     		pop	{r4, pc}
 5342              	.LVL399:
 5343              	.L396:
3502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5344              		.loc 1 3502 0
 5345 004a 0268     		ldr	r2, [r0]
 5346 004c 5168     		ldr	r1, [r2, #4]
 5347 004e 8023     		movs	r3, #128
 5348 0050 5B01     		lsls	r3, r3, #5
 5349 0052 0B43     		orrs	r3, r1
 5350 0054 5360     		str	r3, [r2, #4]
 5351 0056 E9E7     		b	.L394
 5352              	.L393:
3508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->pRxBuffPtr++;
 5353              		.loc 1 3508 0
 5354 0058 0368     		ldr	r3, [r0]
 5355 005a 1B7B     		ldrb	r3, [r3, #12]
 5356 005c 026C     		ldr	r2, [r0, #64]
 5357 005e 1370     		strb	r3, [r2]
3509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxXferCount--;
 5358              		.loc 1 3509 0
 5359 0060 036C     		ldr	r3, [r0, #64]
 5360 0062 0133     		adds	r3, r3, #1
 5361 0064 0364     		str	r3, [r0, #64]
3510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 5362              		.loc 1 3510 0
 5363 0066 4622     		movs	r2, #70
 5364 0068 835A     		ldrh	r3, [r0, r2]
 5365 006a 013B     		subs	r3, r3, #1
 5366 006c 9BB2     		uxth	r3, r3
 5367 006e 8352     		strh	r3, [r0, r2]
 5368 0070 DCE7     		b	.L394
 5369              	.L397:
3530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5370              		.loc 1 3530 0
 5371 0072 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 5372              	.LVL400:
3533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5373              		.loc 1 3533 0
 5374 0076 E7E7     		b	.L392
 5375              		.cfi_endproc
 5376              	.LFE79:
 5378              		.section	.text.SPI_2linesTxISR_16BIT,"ax",%progbits
 5379              		.align	1
ARM GAS  /tmp/ccXTKjLx.s 			page 184


 5380              		.syntax unified
 5381              		.code	16
 5382              		.thumb_func
 5383              		.fpu softvfp
 5385              	SPI_2linesTxISR_16BIT:
 5386              	.LFB82:
3669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 5387              		.loc 1 3669 0
 5388              		.cfi_startproc
 5389              		@ args = 0, pretend = 0, frame = 0
 5390              		@ frame_needed = 0, uses_anonymous_args = 0
 5391              	.LVL401:
 5392 0000 10B5     		push	{r4, lr}
 5393              	.LCFI42:
 5394              		.cfi_def_cfa_offset 8
 5395              		.cfi_offset 4, -8
 5396              		.cfi_offset 14, -4
3671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 5397              		.loc 1 3671 0
 5398 0002 0368     		ldr	r3, [r0]
 5399 0004 826B     		ldr	r2, [r0, #56]
 5400 0006 1288     		ldrh	r2, [r2]
 5401 0008 DA60     		str	r2, [r3, #12]
3672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount--;
 5402              		.loc 1 3672 0
 5403 000a 836B     		ldr	r3, [r0, #56]
 5404 000c 0233     		adds	r3, r3, #2
 5405 000e 8363     		str	r3, [r0, #56]
3673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5406              		.loc 1 3673 0
 5407 0010 C38F     		ldrh	r3, [r0, #62]
 5408 0012 013B     		subs	r3, r3, #1
 5409 0014 9BB2     		uxth	r3, r3
 5410 0016 C387     		strh	r3, [r0, #62]
3676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5411              		.loc 1 3676 0
 5412 0018 C38F     		ldrh	r3, [r0, #62]
 5413 001a 9BB2     		uxth	r3, r3
 5414 001c 002B     		cmp	r3, #0
 5415 001e 09D1     		bne	.L398
3690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5416              		.loc 1 3690 0
 5417 0020 0268     		ldr	r2, [r0]
 5418 0022 5368     		ldr	r3, [r2, #4]
 5419 0024 8021     		movs	r1, #128
 5420 0026 8B43     		bics	r3, r1
 5421 0028 5360     		str	r3, [r2, #4]
3692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5422              		.loc 1 3692 0
 5423 002a 4623     		movs	r3, #70
 5424 002c C35A     		ldrh	r3, [r0, r3]
 5425 002e 9BB2     		uxth	r3, r3
 5426 0030 002B     		cmp	r3, #0
 5427 0032 00D0     		beq	.L400
 5428              	.LVL402:
 5429              	.L398:
3697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
ARM GAS  /tmp/ccXTKjLx.s 			page 185


 5430              		.loc 1 3697 0
 5431              		@ sp needed
 5432 0034 10BD     		pop	{r4, pc}
 5433              	.LVL403:
 5434              	.L400:
3694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5435              		.loc 1 3694 0
 5436 0036 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 5437              	.LVL404:
3697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5438              		.loc 1 3697 0
 5439 003a FBE7     		b	.L398
 5440              		.cfi_endproc
 5441              	.LFE82:
 5443              		.section	.text.SPI_2linesRxISR_16BIT,"ax",%progbits
 5444              		.align	1
 5445              		.syntax unified
 5446              		.code	16
 5447              		.thumb_func
 5448              		.fpu softvfp
 5450              	SPI_2linesRxISR_16BIT:
 5451              	.LFB81:
3617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
 5452              		.loc 1 3617 0
 5453              		.cfi_startproc
 5454              		@ args = 0, pretend = 0, frame = 0
 5455              		@ frame_needed = 0, uses_anonymous_args = 0
 5456              	.LVL405:
 5457 0000 10B5     		push	{r4, lr}
 5458              	.LCFI43:
 5459              		.cfi_def_cfa_offset 8
 5460              		.cfi_offset 4, -8
 5461              		.cfi_offset 14, -4
3619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 5462              		.loc 1 3619 0
 5463 0002 0368     		ldr	r3, [r0]
 5464 0004 DB68     		ldr	r3, [r3, #12]
 5465 0006 026C     		ldr	r2, [r0, #64]
 5466 0008 1380     		strh	r3, [r2]
3620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount--;
 5467              		.loc 1 3620 0
 5468 000a 036C     		ldr	r3, [r0, #64]
 5469 000c 0233     		adds	r3, r3, #2
 5470 000e 0364     		str	r3, [r0, #64]
3621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5471              		.loc 1 3621 0
 5472 0010 4622     		movs	r2, #70
 5473 0012 835A     		ldrh	r3, [r0, r2]
 5474 0014 013B     		subs	r3, r3, #1
 5475 0016 9BB2     		uxth	r3, r3
 5476 0018 8352     		strh	r3, [r0, r2]
3623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5477              		.loc 1 3623 0
 5478 001a 835A     		ldrh	r3, [r0, r2]
 5479 001c 9BB2     		uxth	r3, r3
 5480 001e 002B     		cmp	r3, #0
 5481 0020 08D1     		bne	.L401
ARM GAS  /tmp/ccXTKjLx.s 			page 186


3634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5482              		.loc 1 3634 0
 5483 0022 0268     		ldr	r2, [r0]
 5484 0024 5368     		ldr	r3, [r2, #4]
 5485 0026 4021     		movs	r1, #64
 5486 0028 8B43     		bics	r3, r1
 5487 002a 5360     		str	r3, [r2, #4]
3636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5488              		.loc 1 3636 0
 5489 002c C38F     		ldrh	r3, [r0, #62]
 5490 002e 9BB2     		uxth	r3, r3
 5491 0030 002B     		cmp	r3, #0
 5492 0032 00D0     		beq	.L403
 5493              	.LVL406:
 5494              	.L401:
3641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5495              		.loc 1 3641 0
 5496              		@ sp needed
 5497 0034 10BD     		pop	{r4, pc}
 5498              	.LVL407:
 5499              	.L403:
3638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5500              		.loc 1 3638 0
 5501 0036 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 5502              	.LVL408:
3641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5503              		.loc 1 3641 0
 5504 003a FBE7     		b	.L401
 5505              		.cfi_endproc
 5506              	.LFE81:
 5508              		.section	.text.SPI_DMAError,"ax",%progbits
 5509              		.align	1
 5510              		.syntax unified
 5511              		.code	16
 5512              		.thumb_func
 5513              		.fpu softvfp
 5515              	SPI_DMAError:
 5516              	.LFB75:
3316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5517              		.loc 1 3316 0
 5518              		.cfi_startproc
 5519              		@ args = 0, pretend = 0, frame = 0
 5520              		@ frame_needed = 0, uses_anonymous_args = 0
 5521              	.LVL409:
 5522 0000 10B5     		push	{r4, lr}
 5523              	.LCFI44:
 5524              		.cfi_def_cfa_offset 8
 5525              		.cfi_offset 4, -8
 5526              		.cfi_offset 14, -4
3317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5527              		.loc 1 3317 0
 5528 0002 406A     		ldr	r0, [r0, #36]
 5529              	.LVL410:
3320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5530              		.loc 1 3320 0
 5531 0004 0268     		ldr	r2, [r0]
 5532 0006 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/ccXTKjLx.s 			page 187


 5533 0008 0321     		movs	r1, #3
 5534 000a 8B43     		bics	r3, r1
 5535 000c 5360     		str	r3, [r2, #4]
3322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 5536              		.loc 1 3322 0
 5537 000e 036E     		ldr	r3, [r0, #96]
 5538 0010 1022     		movs	r2, #16
 5539 0012 1343     		orrs	r3, r2
 5540 0014 0366     		str	r3, [r0, #96]
3323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Call user error callback */
 5541              		.loc 1 3323 0
 5542 0016 0F3A     		subs	r2, r2, #15
 5543 0018 5D23     		movs	r3, #93
 5544 001a C254     		strb	r2, [r0, r3]
3328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5545              		.loc 1 3328 0
 5546 001c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5547              	.LVL411:
3330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5548              		.loc 1 3330 0
 5549              		@ sp needed
 5550 0020 10BD     		pop	{r4, pc}
 5551              		.cfi_endproc
 5552              	.LFE75:
 5554              		.section	.text.SPI_DMATransmitCplt,"ax",%progbits
 5555              		.align	1
 5556              		.syntax unified
 5557              		.code	16
 5558              		.thumb_func
 5559              		.fpu softvfp
 5561              	SPI_DMATransmitCplt:
 5562              	.LFB69:
3021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5563              		.loc 1 3021 0
 5564              		.cfi_startproc
 5565              		@ args = 0, pretend = 0, frame = 8
 5566              		@ frame_needed = 0, uses_anonymous_args = 0
 5567              	.LVL412:
 5568 0000 30B5     		push	{r4, r5, lr}
 5569              	.LCFI45:
 5570              		.cfi_def_cfa_offset 12
 5571              		.cfi_offset 4, -12
 5572              		.cfi_offset 5, -8
 5573              		.cfi_offset 14, -4
 5574 0002 83B0     		sub	sp, sp, #12
 5575              	.LCFI46:
 5576              		.cfi_def_cfa_offset 24
 5577 0004 0500     		movs	r5, r0
3022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
 5578              		.loc 1 3022 0
 5579 0006 446A     		ldr	r4, [r0, #36]
 5580              	.LVL413:
3026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5581              		.loc 1 3026 0
 5582 0008 FFF7FEFF 		bl	HAL_GetTick
 5583              	.LVL414:
3029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccXTKjLx.s 			page 188


 5584              		.loc 1 3029 0
 5585 000c 2B68     		ldr	r3, [r5]
 5586 000e 1B68     		ldr	r3, [r3]
 5587 0010 9B06     		lsls	r3, r3, #26
 5588 0012 26D4     		bmi	.L406
3032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5589              		.loc 1 3032 0
 5590 0014 2268     		ldr	r2, [r4]
 5591 0016 5368     		ldr	r3, [r2, #4]
 5592 0018 2021     		movs	r1, #32
 5593 001a 8B43     		bics	r3, r1
 5594 001c 5360     		str	r3, [r2, #4]
3035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5595              		.loc 1 3035 0
 5596 001e 2268     		ldr	r2, [r4]
 5597 0020 5368     		ldr	r3, [r2, #4]
 5598 0022 1E39     		subs	r1, r1, #30
 5599 0024 8B43     		bics	r3, r1
 5600 0026 5360     		str	r3, [r2, #4]
3038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5601              		.loc 1 3038 0
 5602 0028 0200     		movs	r2, r0
 5603 002a 6231     		adds	r1, r1, #98
 5604 002c 2000     		movs	r0, r4
 5605              	.LVL415:
 5606 002e FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5607              	.LVL416:
 5608 0032 0028     		cmp	r0, #0
 5609 0034 03D0     		beq	.L407
3040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5610              		.loc 1 3040 0
 5611 0036 236E     		ldr	r3, [r4, #96]
 5612 0038 2022     		movs	r2, #32
 5613 003a 1343     		orrs	r3, r2
 5614 003c 2366     		str	r3, [r4, #96]
 5615              	.L407:
3044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5616              		.loc 1 3044 0
 5617 003e A368     		ldr	r3, [r4, #8]
 5618 0040 002B     		cmp	r3, #0
 5619 0042 06D1     		bne	.L408
 5620              	.LBB6:
3046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5621              		.loc 1 3046 0
 5622 0044 0193     		str	r3, [sp, #4]
 5623 0046 2368     		ldr	r3, [r4]
 5624 0048 DA68     		ldr	r2, [r3, #12]
 5625 004a 0192     		str	r2, [sp, #4]
 5626 004c 9B68     		ldr	r3, [r3, #8]
 5627 004e 0193     		str	r3, [sp, #4]
 5628 0050 019B     		ldr	r3, [sp, #4]
 5629              	.L408:
 5630              	.LBE6:
3049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5631              		.loc 1 3049 0
 5632 0052 0023     		movs	r3, #0
 5633 0054 E387     		strh	r3, [r4, #62]
ARM GAS  /tmp/ccXTKjLx.s 			page 189


3050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5634              		.loc 1 3050 0
 5635 0056 0122     		movs	r2, #1
 5636 0058 5D33     		adds	r3, r3, #93
 5637 005a E254     		strb	r2, [r4, r3]
3052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5638              		.loc 1 3052 0
 5639 005c 236E     		ldr	r3, [r4, #96]
 5640 005e 002B     		cmp	r3, #0
 5641 0060 04D1     		bne	.L410
 5642              	.L406:
3067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5643              		.loc 1 3067 0
 5644 0062 2000     		movs	r0, r4
 5645 0064 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 5646              	.LVL417:
 5647              	.L405:
3069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5648              		.loc 1 3069 0
 5649 0068 03B0     		add	sp, sp, #12
 5650              		@ sp needed
 5651              	.LVL418:
 5652              	.LVL419:
 5653 006a 30BD     		pop	{r4, r5, pc}
 5654              	.LVL420:
 5655              	.L410:
3058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5656              		.loc 1 3058 0
 5657 006c 2000     		movs	r0, r4
 5658 006e FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5659              	.LVL421:
3060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5660              		.loc 1 3060 0
 5661 0072 F9E7     		b	.L405
 5662              		.cfi_endproc
 5663              	.LFE69:
 5665              		.section	.text.SPI_DMAReceiveCplt,"ax",%progbits
 5666              		.align	1
 5667              		.syntax unified
 5668              		.code	16
 5669              		.thumb_func
 5670              		.fpu softvfp
 5672              	SPI_DMAReceiveCplt:
 5673              	.LFB70:
3078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5674              		.loc 1 3078 0
 5675              		.cfi_startproc
 5676              		@ args = 0, pretend = 0, frame = 0
 5677              		@ frame_needed = 0, uses_anonymous_args = 0
 5678              	.LVL422:
 5679 0000 70B5     		push	{r4, r5, r6, lr}
 5680              	.LCFI47:
 5681              		.cfi_def_cfa_offset 16
 5682              		.cfi_offset 4, -16
 5683              		.cfi_offset 5, -12
 5684              		.cfi_offset 6, -8
 5685              		.cfi_offset 14, -4
ARM GAS  /tmp/ccXTKjLx.s 			page 190


 5686 0002 0500     		movs	r5, r0
3079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
 5687              		.loc 1 3079 0
 5688 0004 446A     		ldr	r4, [r0, #36]
 5689              	.LVL423:
3083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5690              		.loc 1 3083 0
 5691 0006 FFF7FEFF 		bl	HAL_GetTick
 5692              	.LVL424:
3086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5693              		.loc 1 3086 0
 5694 000a 2B68     		ldr	r3, [r5]
 5695 000c 1B68     		ldr	r3, [r3]
 5696 000e 9B06     		lsls	r3, r3, #26
 5697 0010 1BD4     		bmi	.L412
3089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5698              		.loc 1 3089 0
 5699 0012 2268     		ldr	r2, [r4]
 5700 0014 5368     		ldr	r3, [r2, #4]
 5701 0016 2021     		movs	r1, #32
 5702 0018 8B43     		bics	r3, r1
 5703 001a 5360     		str	r3, [r2, #4]
3127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5704              		.loc 1 3127 0
 5705 001c 2268     		ldr	r2, [r4]
 5706 001e 5368     		ldr	r3, [r2, #4]
 5707 0020 1D39     		subs	r1, r1, #29
 5708 0022 8B43     		bics	r3, r1
 5709 0024 5360     		str	r3, [r2, #4]
3130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5710              		.loc 1 3130 0
 5711 0026 0200     		movs	r2, r0
 5712 0028 6131     		adds	r1, r1, #97
 5713 002a 2000     		movs	r0, r4
 5714              	.LVL425:
 5715 002c FFF7FEFF 		bl	SPI_EndRxTransaction
 5716              	.LVL426:
 5717 0030 0028     		cmp	r0, #0
 5718 0032 01D0     		beq	.L413
3132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5719              		.loc 1 3132 0
 5720 0034 2023     		movs	r3, #32
 5721 0036 2366     		str	r3, [r4, #96]
 5722              	.L413:
3135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5723              		.loc 1 3135 0
 5724 0038 0022     		movs	r2, #0
 5725 003a 4623     		movs	r3, #70
 5726 003c E252     		strh	r2, [r4, r3]
3136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5727              		.loc 1 3136 0
 5728 003e 0132     		adds	r2, r2, #1
 5729 0040 1733     		adds	r3, r3, #23
 5730 0042 E254     		strb	r2, [r4, r3]
3147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5731              		.loc 1 3147 0
 5732 0044 236E     		ldr	r3, [r4, #96]
ARM GAS  /tmp/ccXTKjLx.s 			page 191


 5733 0046 002B     		cmp	r3, #0
 5734 0048 03D1     		bne	.L415
 5735              	.L412:
3162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5736              		.loc 1 3162 0
 5737 004a 2000     		movs	r0, r4
 5738 004c FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 5739              	.LVL427:
 5740              	.L411:
3164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5741              		.loc 1 3164 0
 5742              		@ sp needed
 5743              	.LVL428:
 5744              	.LVL429:
 5745 0050 70BD     		pop	{r4, r5, r6, pc}
 5746              	.LVL430:
 5747              	.L415:
3153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5748              		.loc 1 3153 0
 5749 0052 2000     		movs	r0, r4
 5750 0054 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5751              	.LVL431:
3155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5752              		.loc 1 3155 0
 5753 0058 FAE7     		b	.L411
 5754              		.cfi_endproc
 5755              	.LFE70:
 5757              		.section	.text.SPI_DMATransmitReceiveCplt,"ax",%progbits
 5758              		.align	1
 5759              		.syntax unified
 5760              		.code	16
 5761              		.thumb_func
 5762              		.fpu softvfp
 5764              	SPI_DMATransmitReceiveCplt:
 5765              	.LFB71:
3173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5766              		.loc 1 3173 0
 5767              		.cfi_startproc
 5768              		@ args = 0, pretend = 0, frame = 0
 5769              		@ frame_needed = 0, uses_anonymous_args = 0
 5770              	.LVL432:
 5771 0000 70B5     		push	{r4, r5, r6, lr}
 5772              	.LCFI48:
 5773              		.cfi_def_cfa_offset 16
 5774              		.cfi_offset 4, -16
 5775              		.cfi_offset 5, -12
 5776              		.cfi_offset 6, -8
 5777              		.cfi_offset 14, -4
 5778 0002 0500     		movs	r5, r0
3174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
 5779              		.loc 1 3174 0
 5780 0004 446A     		ldr	r4, [r0, #36]
 5781              	.LVL433:
3178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5782              		.loc 1 3178 0
 5783 0006 FFF7FEFF 		bl	HAL_GetTick
 5784              	.LVL434:
ARM GAS  /tmp/ccXTKjLx.s 			page 192


3181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5785              		.loc 1 3181 0
 5786 000a 2B68     		ldr	r3, [r5]
 5787 000c 1B68     		ldr	r3, [r3]
 5788 000e 9B06     		lsls	r3, r3, #26
 5789 0010 1ED4     		bmi	.L417
3184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5790              		.loc 1 3184 0
 5791 0012 2268     		ldr	r2, [r4]
 5792 0014 5368     		ldr	r3, [r2, #4]
 5793 0016 2021     		movs	r1, #32
 5794 0018 8B43     		bics	r3, r1
 5795 001a 5360     		str	r3, [r2, #4]
3215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5796              		.loc 1 3215 0
 5797 001c 0200     		movs	r2, r0
 5798 001e 4431     		adds	r1, r1, #68
 5799 0020 2000     		movs	r0, r4
 5800              	.LVL435:
 5801 0022 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5802              	.LVL436:
 5803 0026 0028     		cmp	r0, #0
 5804 0028 03D0     		beq	.L418
3217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5805              		.loc 1 3217 0
 5806 002a 236E     		ldr	r3, [r4, #96]
 5807 002c 2022     		movs	r2, #32
 5808 002e 1343     		orrs	r3, r2
 5809 0030 2366     		str	r3, [r4, #96]
 5810              	.L418:
3221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5811              		.loc 1 3221 0
 5812 0032 2268     		ldr	r2, [r4]
 5813 0034 5368     		ldr	r3, [r2, #4]
 5814 0036 0321     		movs	r1, #3
 5815 0038 8B43     		bics	r3, r1
 5816 003a 5360     		str	r3, [r2, #4]
3223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 5817              		.loc 1 3223 0
 5818 003c 0023     		movs	r3, #0
 5819 003e E387     		strh	r3, [r4, #62]
3224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5820              		.loc 1 3224 0
 5821 0040 4622     		movs	r2, #70
 5822 0042 A352     		strh	r3, [r4, r2]
3225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5823              		.loc 1 3225 0
 5824 0044 453A     		subs	r2, r2, #69
 5825 0046 5D33     		adds	r3, r3, #93
 5826 0048 E254     		strb	r2, [r4, r3]
3236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5827              		.loc 1 3236 0
 5828 004a 236E     		ldr	r3, [r4, #96]
 5829 004c 002B     		cmp	r3, #0
 5830 004e 03D1     		bne	.L420
 5831              	.L417:
3251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccXTKjLx.s 			page 193


 5832              		.loc 1 3251 0
 5833 0050 2000     		movs	r0, r4
 5834 0052 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 5835              	.LVL437:
 5836              	.L416:
3253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5837              		.loc 1 3253 0
 5838              		@ sp needed
 5839              	.LVL438:
 5840              	.LVL439:
 5841 0056 70BD     		pop	{r4, r5, r6, pc}
 5842              	.LVL440:
 5843              	.L420:
3242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5844              		.loc 1 3242 0
 5845 0058 2000     		movs	r0, r4
 5846 005a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5847              	.LVL441:
3244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5848              		.loc 1 3244 0
 5849 005e FAE7     		b	.L416
 5850              		.cfi_endproc
 5851              	.LFE71:
 5853              		.section	.text.HAL_SPI_IRQHandler,"ax",%progbits
 5854              		.align	1
 5855              		.global	HAL_SPI_IRQHandler
 5856              		.syntax unified
 5857              		.code	16
 5858              		.thumb_func
 5859              		.fpu softvfp
 5861              	HAL_SPI_IRQHandler:
 5862              	.LFB58:
2728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
 5863              		.loc 1 2728 0
 5864              		.cfi_startproc
 5865              		@ args = 0, pretend = 0, frame = 16
 5866              		@ frame_needed = 0, uses_anonymous_args = 0
 5867              	.LVL442:
 5868 0000 30B5     		push	{r4, r5, lr}
 5869              	.LCFI49:
 5870              		.cfi_def_cfa_offset 12
 5871              		.cfi_offset 4, -12
 5872              		.cfi_offset 5, -8
 5873              		.cfi_offset 14, -4
 5874 0002 85B0     		sub	sp, sp, #20
 5875              	.LCFI50:
 5876              		.cfi_def_cfa_offset 32
 5877 0004 0400     		movs	r4, r0
2729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
 5878              		.loc 1 2729 0
 5879 0006 0168     		ldr	r1, [r0]
 5880 0008 4868     		ldr	r0, [r1, #4]
 5881              	.LVL443:
2730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5882              		.loc 1 2730 0
 5883 000a 8B68     		ldr	r3, [r1, #8]
 5884              	.LVL444:
ARM GAS  /tmp/ccXTKjLx.s 			page 194


2733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
 5885              		.loc 1 2733 0
 5886 000c 4122     		movs	r2, #65
 5887 000e 1A40     		ands	r2, r3
 5888 0010 012A     		cmp	r2, #1
 5889 0012 64D0     		beq	.L431
 5890              	.L422:
2741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5891              		.loc 1 2741 0
 5892 0014 9A07     		lsls	r2, r3, #30
 5893 0016 01D5     		bpl	.L424
2741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5894              		.loc 1 2741 0 is_stmt 0 discriminator 1
 5895 0018 0206     		lsls	r2, r0, #24
 5896 001a 66D4     		bmi	.L432
 5897              	.L424:
2749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5898              		.loc 1 2749 0 is_stmt 1
 5899 001c B022     		movs	r2, #176
 5900 001e 5200     		lsls	r2, r2, #1
2748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT
 5901              		.loc 1 2748 0
 5902 0020 1342     		tst	r3, r2
 5903 0022 65D0     		beq	.L421
2749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5904              		.loc 1 2749 0
 5905 0024 8206     		lsls	r2, r0, #26
 5906 0026 63D5     		bpl	.L421
2752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5907              		.loc 1 2752 0
 5908 0028 5A06     		lsls	r2, r3, #25
 5909 002a 0ED5     		bpl	.L425
2754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 5910              		.loc 1 2754 0
 5911 002c 5D22     		movs	r2, #93
 5912 002e A25C     		ldrb	r2, [r4, r2]
 5913 0030 032A     		cmp	r2, #3
 5914 0032 5FD0     		beq	.L426
2756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
 5915              		.loc 1 2756 0
 5916 0034 226E     		ldr	r2, [r4, #96]
 5917 0036 0425     		movs	r5, #4
 5918 0038 2A43     		orrs	r2, r5
 5919 003a 2266     		str	r2, [r4, #96]
 5920              	.LBB7:
2757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 5921              		.loc 1 2757 0
 5922 003c 0022     		movs	r2, #0
 5923 003e 0092     		str	r2, [sp]
 5924 0040 CA68     		ldr	r2, [r1, #12]
 5925 0042 0092     		str	r2, [sp]
 5926 0044 8A68     		ldr	r2, [r1, #8]
 5927 0046 0092     		str	r2, [sp]
 5928 0048 009A     		ldr	r2, [sp]
 5929              	.L425:
 5930              	.LBE7:
2767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
ARM GAS  /tmp/ccXTKjLx.s 			page 195


 5931              		.loc 1 2767 0
 5932 004a 9A06     		lsls	r2, r3, #26
 5933 004c 0CD5     		bpl	.L427
2769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
 5934              		.loc 1 2769 0
 5935 004e 226E     		ldr	r2, [r4, #96]
 5936 0050 0125     		movs	r5, #1
 5937 0052 2A43     		orrs	r2, r5
 5938 0054 2266     		str	r2, [r4, #96]
 5939              	.LBB8:
2770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5940              		.loc 1 2770 0
 5941 0056 0022     		movs	r2, #0
 5942 0058 0292     		str	r2, [sp, #8]
 5943 005a 8A68     		ldr	r2, [r1, #8]
 5944 005c 0292     		str	r2, [sp, #8]
 5945 005e 0A68     		ldr	r2, [r1]
 5946 0060 3F35     		adds	r5, r5, #63
 5947 0062 AA43     		bics	r2, r5
 5948 0064 0A60     		str	r2, [r1]
 5949 0066 029A     		ldr	r2, [sp, #8]
 5950              	.L427:
 5951              	.LBE8:
2774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5952              		.loc 1 2774 0
 5953 0068 DB05     		lsls	r3, r3, #23
 5954 006a 09D5     		bpl	.L428
 5955              	.LVL445:
2776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
 5956              		.loc 1 2776 0
 5957 006c 236E     		ldr	r3, [r4, #96]
 5958 006e 0822     		movs	r2, #8
 5959 0070 1343     		orrs	r3, r2
 5960 0072 2366     		str	r3, [r4, #96]
 5961              	.LBB9:
2777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5962              		.loc 1 2777 0
 5963 0074 0023     		movs	r3, #0
 5964 0076 0393     		str	r3, [sp, #12]
 5965 0078 2368     		ldr	r3, [r4]
 5966 007a 9B68     		ldr	r3, [r3, #8]
 5967 007c 0393     		str	r3, [sp, #12]
 5968 007e 039B     		ldr	r3, [sp, #12]
 5969              	.L428:
 5970              	.LBE9:
2780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5971              		.loc 1 2780 0
 5972 0080 236E     		ldr	r3, [r4, #96]
 5973 0082 002B     		cmp	r3, #0
 5974 0084 34D0     		beq	.L421
2783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5975              		.loc 1 2783 0
 5976 0086 2268     		ldr	r2, [r4]
 5977 0088 5368     		ldr	r3, [r2, #4]
 5978 008a E021     		movs	r1, #224
 5979 008c 8B43     		bics	r3, r1
 5980 008e 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/ccXTKjLx.s 			page 196


2785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
 5981              		.loc 1 2785 0
 5982 0090 0122     		movs	r2, #1
 5983 0092 5D23     		movs	r3, #93
 5984 0094 E254     		strb	r2, [r4, r3]
2787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 5985              		.loc 1 2787 0
 5986 0096 8307     		lsls	r3, r0, #30
 5987 0098 34D0     		beq	.L429
2789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5988              		.loc 1 2789 0
 5989 009a 2268     		ldr	r2, [r4]
 5990 009c 5368     		ldr	r3, [r2, #4]
 5991 009e DD39     		subs	r1, r1, #221
 5992 00a0 8B43     		bics	r3, r1
 5993 00a2 5360     		str	r3, [r2, #4]
2792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 5994              		.loc 1 2792 0
 5995 00a4 A36D     		ldr	r3, [r4, #88]
 5996 00a6 002B     		cmp	r3, #0
 5997 00a8 0AD0     		beq	.L430
2796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 5998              		.loc 1 2796 0
 5999 00aa 184A     		ldr	r2, .L433
 6000 00ac 5A63     		str	r2, [r3, #52]
2797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           {
 6001              		.loc 1 2797 0
 6002 00ae A06D     		ldr	r0, [r4, #88]
 6003              	.LVL446:
 6004 00b0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6005              	.LVL447:
 6006 00b4 0028     		cmp	r0, #0
 6007 00b6 03D0     		beq	.L430
2799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           }
 6008              		.loc 1 2799 0
 6009 00b8 236E     		ldr	r3, [r4, #96]
 6010 00ba 4022     		movs	r2, #64
 6011 00bc 1343     		orrs	r3, r2
 6012 00be 2366     		str	r3, [r4, #96]
 6013              	.L430:
2803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 6014              		.loc 1 2803 0
 6015 00c0 636D     		ldr	r3, [r4, #84]
 6016 00c2 002B     		cmp	r3, #0
 6017 00c4 14D0     		beq	.L421
2807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 6018              		.loc 1 2807 0
 6019 00c6 114A     		ldr	r2, .L433
 6020 00c8 5A63     		str	r2, [r3, #52]
2808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           {
 6021              		.loc 1 2808 0
 6022 00ca 606D     		ldr	r0, [r4, #84]
 6023 00cc FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6024              	.LVL448:
 6025 00d0 0028     		cmp	r0, #0
 6026 00d2 0DD0     		beq	.L421
2810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           }
ARM GAS  /tmp/ccXTKjLx.s 			page 197


 6027              		.loc 1 2810 0
 6028 00d4 236E     		ldr	r3, [r4, #96]
 6029 00d6 4022     		movs	r2, #64
 6030 00d8 1343     		orrs	r3, r2
 6031 00da 2366     		str	r3, [r4, #96]
 6032 00dc 08E0     		b	.L421
 6033              	.LVL449:
 6034              	.L431:
2734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6035              		.loc 1 2734 0
 6036 00de 4206     		lsls	r2, r0, #25
 6037 00e0 98D5     		bpl	.L422
2736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return;
 6038              		.loc 1 2736 0
 6039 00e2 E36C     		ldr	r3, [r4, #76]
 6040              	.LVL450:
 6041 00e4 2000     		movs	r0, r4
 6042              	.LVL451:
 6043 00e6 9847     		blx	r3
 6044              	.LVL452:
2737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 6045              		.loc 1 2737 0
 6046 00e8 02E0     		b	.L421
 6047              	.LVL453:
 6048              	.L432:
2743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return;
 6049              		.loc 1 2743 0
 6050 00ea 236D     		ldr	r3, [r4, #80]
 6051              	.LVL454:
 6052 00ec 2000     		movs	r0, r4
 6053              	.LVL455:
 6054 00ee 9847     		blx	r3
 6055              	.LVL456:
 6056              	.L421:
2826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6057              		.loc 1 2826 0
 6058 00f0 05B0     		add	sp, sp, #20
 6059              		@ sp needed
 6060              	.LVL457:
 6061 00f2 30BD     		pop	{r4, r5, pc}
 6062              	.LVL458:
 6063              	.L426:
 6064              	.LBB10:
2761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         return;
 6065              		.loc 1 2761 0
 6066 00f4 0023     		movs	r3, #0
 6067              	.LVL459:
 6068 00f6 0193     		str	r3, [sp, #4]
 6069 00f8 CB68     		ldr	r3, [r1, #12]
 6070 00fa 0193     		str	r3, [sp, #4]
 6071 00fc 8B68     		ldr	r3, [r1, #8]
 6072 00fe 0193     		str	r3, [sp, #4]
 6073 0100 019B     		ldr	r3, [sp, #4]
 6074              	.LBE10:
2762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 6075              		.loc 1 2762 0
 6076 0102 F5E7     		b	.L421
ARM GAS  /tmp/ccXTKjLx.s 			page 198


 6077              	.L429:
2820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 6078              		.loc 1 2820 0
 6079 0104 2000     		movs	r0, r4
 6080              	.LVL460:
 6081 0106 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 6082              	.LVL461:
 6083 010a F1E7     		b	.L421
 6084              	.L434:
 6085              		.align	2
 6086              	.L433:
 6087 010c 00000000 		.word	SPI_DMAAbortOnError
 6088              		.cfi_endproc
 6089              	.LFE58:
 6091              		.section	.text.SPI_DMAAbortOnError,"ax",%progbits
 6092              		.align	1
 6093              		.syntax unified
 6094              		.code	16
 6095              		.thumb_func
 6096              		.fpu softvfp
 6098              	SPI_DMAAbortOnError:
 6099              	.LFB76:
3339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 6100              		.loc 1 3339 0
 6101              		.cfi_startproc
 6102              		@ args = 0, pretend = 0, frame = 0
 6103              		@ frame_needed = 0, uses_anonymous_args = 0
 6104              	.LVL462:
 6105 0000 10B5     		push	{r4, lr}
 6106              	.LCFI51:
 6107              		.cfi_def_cfa_offset 8
 6108              		.cfi_offset 4, -8
 6109              		.cfi_offset 14, -4
3340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 6110              		.loc 1 3340 0
 6111 0002 406A     		ldr	r0, [r0, #36]
 6112              	.LVL463:
3341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 6113              		.loc 1 3341 0
 6114 0004 0023     		movs	r3, #0
 6115 0006 4622     		movs	r2, #70
 6116 0008 8352     		strh	r3, [r0, r2]
3342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6117              		.loc 1 3342 0
 6118 000a C387     		strh	r3, [r0, #62]
3348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 6119              		.loc 1 3348 0
 6120 000c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 6121              	.LVL464:
3350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6122              		.loc 1 3350 0
 6123              		@ sp needed
 6124 0010 10BD     		pop	{r4, pc}
 6125              		.cfi_endproc
 6126              	.LFE76:
 6128              		.section	.text.HAL_SPI_AbortCpltCallback,"ax",%progbits
 6129              		.align	1
ARM GAS  /tmp/ccXTKjLx.s 			page 199


 6130              		.weak	HAL_SPI_AbortCpltCallback
 6131              		.syntax unified
 6132              		.code	16
 6133              		.thumb_func
 6134              		.fpu softvfp
 6136              	HAL_SPI_AbortCpltCallback:
 6137              	.LFB66:
2949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 6138              		.loc 1 2949 0
 6139              		.cfi_startproc
 6140              		@ args = 0, pretend = 0, frame = 0
 6141              		@ frame_needed = 0, uses_anonymous_args = 0
 6142              		@ link register save eliminated.
 6143              	.LVL465:
2956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6144              		.loc 1 2956 0
 6145              		@ sp needed
 6146 0000 7047     		bx	lr
 6147              		.cfi_endproc
 6148              	.LFE66:
 6150              		.section	.text.HAL_SPI_Abort_IT,"ax",%progbits
 6151              		.align	1
 6152              		.global	HAL_SPI_Abort_IT
 6153              		.syntax unified
 6154              		.code	16
 6155              		.thumb_func
 6156              		.fpu softvfp
 6158              	HAL_SPI_Abort_IT:
 6159              	.LFB54:
2487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 6160              		.loc 1 2487 0
 6161              		.cfi_startproc
 6162              		@ args = 0, pretend = 0, frame = 16
 6163              		@ frame_needed = 0, uses_anonymous_args = 0
 6164              	.LVL466:
 6165 0000 30B5     		push	{r4, r5, lr}
 6166              	.LCFI52:
 6167              		.cfi_def_cfa_offset 12
 6168              		.cfi_offset 4, -12
 6169              		.cfi_offset 5, -8
 6170              		.cfi_offset 14, -4
 6171 0002 85B0     		sub	sp, sp, #20
 6172              	.LCFI53:
 6173              		.cfi_def_cfa_offset 32
 6174 0004 0400     		movs	r4, r0
 6175              	.LVL467:
2496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   count = resetcount;
 6176              		.loc 1 2496 0
 6177 0006 504B     		ldr	r3, .L463
 6178 0008 1868     		ldr	r0, [r3]
 6179              	.LVL468:
 6180 000a 5049     		ldr	r1, .L463+4
 6181 000c FFF7FEFF 		bl	__aeabi_uidiv
 6182              	.LVL469:
 6183 0010 6423     		movs	r3, #100
 6184 0012 5843     		muls	r0, r3
 6185 0014 0290     		str	r0, [sp, #8]
ARM GAS  /tmp/ccXTKjLx.s 			page 200


2497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6186              		.loc 1 2497 0
 6187 0016 029B     		ldr	r3, [sp, #8]
 6188 0018 0393     		str	r3, [sp, #12]
2500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6189              		.loc 1 2500 0
 6190 001a 2268     		ldr	r2, [r4]
 6191 001c 5368     		ldr	r3, [r2, #4]
 6192 001e 2021     		movs	r1, #32
 6193 0020 8B43     		bics	r3, r1
 6194 0022 5360     		str	r3, [r2, #4]
2503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6195              		.loc 1 2503 0
 6196 0024 2268     		ldr	r2, [r4]
 6197 0026 5368     		ldr	r3, [r2, #4]
 6198 0028 1B06     		lsls	r3, r3, #24
 6199 002a 12D5     		bpl	.L438
2505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 6200              		.loc 1 2505 0
 6201 002c 484B     		ldr	r3, .L463+8
 6202 002e 2365     		str	r3, [r4, #80]
 6203              	.L441:
2509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 6204              		.loc 1 2509 0
 6205 0030 039B     		ldr	r3, [sp, #12]
 6206 0032 002B     		cmp	r3, #0
 6207 0034 07D0     		beq	.L460
2514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 6208              		.loc 1 2514 0
 6209 0036 039B     		ldr	r3, [sp, #12]
 6210 0038 013B     		subs	r3, r3, #1
 6211 003a 0393     		str	r3, [sp, #12]
2515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Reset Timeout Counter */
 6212              		.loc 1 2515 0
 6213 003c 5D23     		movs	r3, #93
 6214 003e E35C     		ldrb	r3, [r4, r3]
 6215 0040 072B     		cmp	r3, #7
 6216 0042 F5D1     		bne	.L441
 6217 0044 03E0     		b	.L440
 6218              	.L460:
2511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 6219              		.loc 1 2511 0
 6220 0046 236E     		ldr	r3, [r4, #96]
 6221 0048 4021     		movs	r1, #64
 6222 004a 0B43     		orrs	r3, r1
 6223 004c 2366     		str	r3, [r4, #96]
 6224              	.L440:
2517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 6225              		.loc 1 2517 0
 6226 004e 029B     		ldr	r3, [sp, #8]
 6227 0050 0393     		str	r3, [sp, #12]
 6228              	.L438:
2520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6229              		.loc 1 2520 0
 6230 0052 5368     		ldr	r3, [r2, #4]
 6231 0054 5B06     		lsls	r3, r3, #25
 6232 0056 12D5     		bpl	.L442
ARM GAS  /tmp/ccXTKjLx.s 			page 201


2522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 6233              		.loc 1 2522 0
 6234 0058 3E4B     		ldr	r3, .L463+12
 6235 005a E364     		str	r3, [r4, #76]
 6236              	.L445:
2526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 6237              		.loc 1 2526 0
 6238 005c 039B     		ldr	r3, [sp, #12]
 6239 005e 002B     		cmp	r3, #0
 6240 0060 07D0     		beq	.L461
2531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 6241              		.loc 1 2531 0
 6242 0062 039B     		ldr	r3, [sp, #12]
 6243 0064 013B     		subs	r3, r3, #1
 6244 0066 0393     		str	r3, [sp, #12]
2532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Reset Timeout Counter */
 6245              		.loc 1 2532 0
 6246 0068 5D23     		movs	r3, #93
 6247 006a E35C     		ldrb	r3, [r4, r3]
 6248 006c 072B     		cmp	r3, #7
 6249 006e F5D1     		bne	.L445
 6250 0070 03E0     		b	.L444
 6251              	.L461:
2528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 6252              		.loc 1 2528 0
 6253 0072 236E     		ldr	r3, [r4, #96]
 6254 0074 4021     		movs	r1, #64
 6255 0076 0B43     		orrs	r3, r1
 6256 0078 2366     		str	r3, [r4, #96]
 6257              	.L444:
2534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 6258              		.loc 1 2534 0
 6259 007a 029B     		ldr	r3, [sp, #8]
 6260 007c 0393     		str	r3, [sp, #12]
 6261              	.L442:
2540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6262              		.loc 1 2540 0
 6263 007e 636D     		ldr	r3, [r4, #84]
 6264 0080 002B     		cmp	r3, #0
 6265 0082 04D0     		beq	.L446
2544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 6266              		.loc 1 2544 0
 6267 0084 5268     		ldr	r2, [r2, #4]
 6268 0086 9207     		lsls	r2, r2, #30
 6269 0088 1CD5     		bpl	.L447
2546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 6270              		.loc 1 2546 0
 6271 008a 334A     		ldr	r2, .L463+16
 6272 008c 5A63     		str	r2, [r3, #52]
 6273              	.L446:
2554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6274              		.loc 1 2554 0
 6275 008e A36D     		ldr	r3, [r4, #88]
 6276 0090 002B     		cmp	r3, #0
 6277 0092 05D0     		beq	.L448
2558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 6278              		.loc 1 2558 0
ARM GAS  /tmp/ccXTKjLx.s 			page 202


 6279 0094 2268     		ldr	r2, [r4]
 6280 0096 5268     		ldr	r2, [r2, #4]
 6281 0098 D207     		lsls	r2, r2, #31
 6282 009a 16D5     		bpl	.L449
2560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 6283              		.loc 1 2560 0
 6284 009c 2F4A     		ldr	r2, .L463+20
 6285 009e 5A63     		str	r2, [r3, #52]
 6286              	.L448:
2569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6287              		.loc 1 2569 0
 6288 00a0 2368     		ldr	r3, [r4]
 6289 00a2 5B68     		ldr	r3, [r3, #4]
 6290 00a4 9B07     		lsls	r3, r3, #30
 6291 00a6 13D5     		bpl	.L454
2572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 6292              		.loc 1 2572 0
 6293 00a8 606D     		ldr	r0, [r4, #84]
 6294 00aa 0028     		cmp	r0, #0
 6295 00ac 27D0     		beq	.L455
2575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 6296              		.loc 1 2575 0
 6297 00ae FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6298              	.LVL470:
 6299 00b2 0028     		cmp	r0, #0
 6300 00b4 25D0     		beq	.L456
2577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 6301              		.loc 1 2577 0
 6302 00b6 636D     		ldr	r3, [r4, #84]
 6303 00b8 0022     		movs	r2, #0
 6304 00ba 5A63     		str	r2, [r3, #52]
2578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 6305              		.loc 1 2578 0
 6306 00bc 4023     		movs	r3, #64
 6307 00be 2366     		str	r3, [r4, #96]
2495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 6308              		.loc 1 2495 0
 6309 00c0 0125     		movs	r5, #1
 6310 00c2 06E0     		b	.L450
 6311              	.L447:
2550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 6312              		.loc 1 2550 0
 6313 00c4 0022     		movs	r2, #0
 6314 00c6 5A63     		str	r2, [r3, #52]
 6315 00c8 E1E7     		b	.L446
 6316              	.L449:
2564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 6317              		.loc 1 2564 0
 6318 00ca 0022     		movs	r2, #0
 6319 00cc 5A63     		str	r2, [r3, #52]
 6320 00ce E7E7     		b	.L448
 6321              	.L454:
2495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 6322              		.loc 1 2495 0
 6323 00d0 0125     		movs	r5, #1
 6324              	.L450:
 6325              	.LVL471:
ARM GAS  /tmp/ccXTKjLx.s 			page 203


2587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6326              		.loc 1 2587 0
 6327 00d2 2368     		ldr	r3, [r4]
 6328 00d4 5B68     		ldr	r3, [r3, #4]
 6329 00d6 DB07     		lsls	r3, r3, #31
 6330 00d8 0BD5     		bpl	.L451
2590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 6331              		.loc 1 2590 0
 6332 00da A06D     		ldr	r0, [r4, #88]
 6333 00dc 0028     		cmp	r0, #0
 6334 00de 08D0     		beq	.L451
2593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 6335              		.loc 1 2593 0
 6336 00e0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6337              	.LVL472:
 6338 00e4 0028     		cmp	r0, #0
 6339 00e6 0ED0     		beq	.L457
2595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 6340              		.loc 1 2595 0
 6341 00e8 A36D     		ldr	r3, [r4, #88]
 6342 00ea 0022     		movs	r2, #0
 6343 00ec 5A63     		str	r2, [r3, #52]
2596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 6344              		.loc 1 2596 0
 6345 00ee 4023     		movs	r3, #64
 6346 00f0 2366     		str	r3, [r4, #96]
 6347              	.LVL473:
 6348              	.L451:
2605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6349              		.loc 1 2605 0
 6350 00f2 012D     		cmp	r5, #1
 6351 00f4 09D0     		beq	.L462
2494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   abortcplt = 1U;
 6352              		.loc 1 2494 0
 6353 00f6 0025     		movs	r5, #0
 6354              	.LVL474:
 6355              	.L452:
2639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6356              		.loc 1 2639 0
 6357 00f8 2800     		movs	r0, r5
 6358 00fa 05B0     		add	sp, sp, #20
 6359              		@ sp needed
 6360              	.LVL475:
 6361              	.LVL476:
 6362 00fc 30BD     		pop	{r4, r5, pc}
 6363              	.LVL477:
 6364              	.L455:
2495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 6365              		.loc 1 2495 0
 6366 00fe 0125     		movs	r5, #1
 6367 0100 E7E7     		b	.L450
 6368              	.L456:
2582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 6369              		.loc 1 2582 0
 6370 0102 0025     		movs	r5, #0
 6371 0104 E5E7     		b	.L450
 6372              	.LVL478:
ARM GAS  /tmp/ccXTKjLx.s 			page 204


 6373              	.L457:
2600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 6374              		.loc 1 2600 0
 6375 0106 0025     		movs	r5, #0
 6376              	.LVL479:
 6377 0108 F3E7     		b	.L451
 6378              	.LVL480:
 6379              	.L462:
2608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 6380              		.loc 1 2608 0
 6381 010a 0023     		movs	r3, #0
 6382 010c 4622     		movs	r2, #70
 6383 010e A352     		strh	r3, [r4, r2]
2609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6384              		.loc 1 2609 0
 6385 0110 E387     		strh	r3, [r4, #62]
2612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 6386              		.loc 1 2612 0
 6387 0112 236E     		ldr	r3, [r4, #96]
 6388 0114 402B     		cmp	r3, #64
 6389 0116 15D0     		beq	.L459
2620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 6390              		.loc 1 2620 0
 6391 0118 0023     		movs	r3, #0
 6392 011a 2366     		str	r3, [r4, #96]
2494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   abortcplt = 1U;
 6393              		.loc 1 2494 0
 6394 011c 0025     		movs	r5, #0
 6395              	.LVL481:
 6396              	.L453:
 6397              	.LBB11:
2624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_CLEAR_FREFLAG(hspi);
 6398              		.loc 1 2624 0
 6399 011e 0022     		movs	r2, #0
 6400 0120 0092     		str	r2, [sp]
 6401 0122 2368     		ldr	r3, [r4]
 6402 0124 D968     		ldr	r1, [r3, #12]
 6403 0126 0091     		str	r1, [sp]
 6404 0128 9968     		ldr	r1, [r3, #8]
 6405 012a 0091     		str	r1, [sp]
 6406 012c 0099     		ldr	r1, [sp]
 6407              	.LBE11:
 6408              	.LBB12:
2625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6409              		.loc 1 2625 0
 6410 012e 0192     		str	r2, [sp, #4]
 6411 0130 9B68     		ldr	r3, [r3, #8]
 6412 0132 0193     		str	r3, [sp, #4]
 6413 0134 019B     		ldr	r3, [sp, #4]
 6414              	.LBE12:
2628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6415              		.loc 1 2628 0
 6416 0136 0132     		adds	r2, r2, #1
 6417 0138 5D23     		movs	r3, #93
 6418 013a E254     		strb	r2, [r4, r3]
2634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 6419              		.loc 1 2634 0
ARM GAS  /tmp/ccXTKjLx.s 			page 205


 6420 013c 2000     		movs	r0, r4
 6421 013e FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 6422              	.LVL482:
 6423 0142 D9E7     		b	.L452
 6424              	.LVL483:
 6425              	.L459:
2615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 6426              		.loc 1 2615 0
 6427 0144 0125     		movs	r5, #1
 6428              	.LVL484:
 6429 0146 EAE7     		b	.L453
 6430              	.L464:
 6431              		.align	2
 6432              	.L463:
 6433 0148 00000000 		.word	SystemCoreClock
 6434 014c C05D0000 		.word	24000
 6435 0150 00000000 		.word	SPI_AbortTx_ISR
 6436 0154 00000000 		.word	SPI_AbortRx_ISR
 6437 0158 00000000 		.word	SPI_DMATxAbortCallback
 6438 015c 00000000 		.word	SPI_DMARxAbortCallback
 6439              		.cfi_endproc
 6440              	.LFE54:
 6442              		.section	.text.SPI_DMARxAbortCallback,"ax",%progbits
 6443              		.align	1
 6444              		.syntax unified
 6445              		.code	16
 6446              		.thumb_func
 6447              		.fpu softvfp
 6449              	SPI_DMARxAbortCallback:
 6450              	.LFB78:
3427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 6451              		.loc 1 3427 0
 6452              		.cfi_startproc
 6453              		@ args = 0, pretend = 0, frame = 8
 6454              		@ frame_needed = 0, uses_anonymous_args = 0
 6455              	.LVL485:
 6456 0000 10B5     		push	{r4, lr}
 6457              	.LCFI54:
 6458              		.cfi_def_cfa_offset 8
 6459              		.cfi_offset 4, -8
 6460              		.cfi_offset 14, -4
 6461 0002 84B0     		sub	sp, sp, #16
 6462              	.LCFI55:
 6463              		.cfi_def_cfa_offset 24
3428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6464              		.loc 1 3428 0
 6465 0004 446A     		ldr	r4, [r0, #36]
 6466              	.LVL486:
3431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6467              		.loc 1 3431 0
 6468 0006 2268     		ldr	r2, [r4]
 6469 0008 1368     		ldr	r3, [r2]
 6470 000a 4021     		movs	r1, #64
 6471 000c 8B43     		bics	r3, r1
 6472 000e 1360     		str	r3, [r2]
3433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6473              		.loc 1 3433 0
ARM GAS  /tmp/ccXTKjLx.s 			page 206


 6474 0010 A36D     		ldr	r3, [r4, #88]
 6475 0012 0022     		movs	r2, #0
 6476 0014 5A63     		str	r2, [r3, #52]
3436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6477              		.loc 1 3436 0
 6478 0016 2268     		ldr	r2, [r4]
 6479 0018 5368     		ldr	r3, [r2, #4]
 6480 001a 3F39     		subs	r1, r1, #63
 6481 001c 8B43     		bics	r3, r1
 6482 001e 5360     		str	r3, [r2, #4]
3439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6483              		.loc 1 3439 0
 6484 0020 FFF7FEFF 		bl	HAL_GetTick
 6485              	.LVL487:
 6486 0024 0090     		str	r0, [sp]
 6487 0026 6423     		movs	r3, #100
 6488 0028 0022     		movs	r2, #0
 6489 002a 8021     		movs	r1, #128
 6490 002c 2000     		movs	r0, r4
 6491 002e FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 6492              	.LVL488:
 6493 0032 0028     		cmp	r0, #0
 6494 0034 01D0     		beq	.L466
3441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 6495              		.loc 1 3441 0
 6496 0036 4023     		movs	r3, #64
 6497 0038 2366     		str	r3, [r4, #96]
 6498              	.L466:
3445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6499              		.loc 1 3445 0
 6500 003a FFF7FEFF 		bl	HAL_GetTick
 6501              	.LVL489:
 6502 003e 0090     		str	r0, [sp]
 6503 0040 6423     		movs	r3, #100
 6504 0042 0022     		movs	r2, #0
 6505 0044 C021     		movs	r1, #192
 6506 0046 C900     		lsls	r1, r1, #3
 6507 0048 2000     		movs	r0, r4
 6508 004a FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 6509              	.LVL490:
 6510 004e 0028     		cmp	r0, #0
 6511 0050 01D0     		beq	.L467
3447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 6512              		.loc 1 3447 0
 6513 0052 4023     		movs	r3, #64
 6514 0054 2366     		str	r3, [r4, #96]
 6515              	.L467:
3451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6516              		.loc 1 3451 0
 6517 0056 636D     		ldr	r3, [r4, #84]
 6518 0058 002B     		cmp	r3, #0
 6519 005a 04D0     		beq	.L468
3453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 6520              		.loc 1 3453 0
 6521 005c 5B6B     		ldr	r3, [r3, #52]
 6522 005e 002B     		cmp	r3, #0
 6523 0060 01D0     		beq	.L468
ARM GAS  /tmp/ccXTKjLx.s 			page 207


 6524              	.L465:
3483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6525              		.loc 1 3483 0
 6526 0062 04B0     		add	sp, sp, #16
 6527              		@ sp needed
 6528              	.LVL491:
 6529 0064 10BD     		pop	{r4, pc}
 6530              	.LVL492:
 6531              	.L468:
3460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 6532              		.loc 1 3460 0
 6533 0066 0023     		movs	r3, #0
 6534 0068 4622     		movs	r2, #70
 6535 006a A352     		strh	r3, [r4, r2]
3461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6536              		.loc 1 3461 0
 6537 006c E387     		strh	r3, [r4, #62]
3464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6538              		.loc 1 3464 0
 6539 006e 236E     		ldr	r3, [r4, #96]
 6540 0070 402B     		cmp	r3, #64
 6541 0072 01D0     		beq	.L470
3467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 6542              		.loc 1 3467 0
 6543 0074 0023     		movs	r3, #0
 6544 0076 2366     		str	r3, [r4, #96]
 6545              	.L470:
 6546              	.LBB13:
3471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 6547              		.loc 1 3471 0
 6548 0078 0022     		movs	r2, #0
 6549 007a 0292     		str	r2, [sp, #8]
 6550 007c 2368     		ldr	r3, [r4]
 6551 007e D968     		ldr	r1, [r3, #12]
 6552 0080 0291     		str	r1, [sp, #8]
 6553 0082 9968     		ldr	r1, [r3, #8]
 6554 0084 0291     		str	r1, [sp, #8]
 6555 0086 0299     		ldr	r1, [sp, #8]
 6556              	.LBE13:
 6557              	.LBB14:
3472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6558              		.loc 1 3472 0
 6559 0088 0392     		str	r2, [sp, #12]
 6560 008a 9B68     		ldr	r3, [r3, #8]
 6561 008c 0393     		str	r3, [sp, #12]
 6562 008e 039B     		ldr	r3, [sp, #12]
 6563              	.LBE14:
3475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6564              		.loc 1 3475 0
 6565 0090 0132     		adds	r2, r2, #1
 6566 0092 5D23     		movs	r3, #93
 6567 0094 E254     		strb	r2, [r4, r3]
3481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 6568              		.loc 1 3481 0
 6569 0096 2000     		movs	r0, r4
 6570 0098 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 6571              	.LVL493:
ARM GAS  /tmp/ccXTKjLx.s 			page 208


 6572 009c E1E7     		b	.L465
 6573              		.cfi_endproc
 6574              	.LFE78:
 6576              		.section	.text.SPI_DMATxAbortCallback,"ax",%progbits
 6577              		.align	1
 6578              		.syntax unified
 6579              		.code	16
 6580              		.thumb_func
 6581              		.fpu softvfp
 6583              	SPI_DMATxAbortCallback:
 6584              	.LFB77:
3361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 6585              		.loc 1 3361 0
 6586              		.cfi_startproc
 6587              		@ args = 0, pretend = 0, frame = 8
 6588              		@ frame_needed = 0, uses_anonymous_args = 0
 6589              	.LVL494:
 6590 0000 10B5     		push	{r4, lr}
 6591              	.LCFI56:
 6592              		.cfi_def_cfa_offset 8
 6593              		.cfi_offset 4, -8
 6594              		.cfi_offset 14, -4
 6595 0002 84B0     		sub	sp, sp, #16
 6596              	.LCFI57:
 6597              		.cfi_def_cfa_offset 24
3362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6598              		.loc 1 3362 0
 6599 0004 446A     		ldr	r4, [r0, #36]
 6600              	.LVL495:
3364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6601              		.loc 1 3364 0
 6602 0006 636D     		ldr	r3, [r4, #84]
 6603 0008 0022     		movs	r2, #0
 6604 000a 5A63     		str	r2, [r3, #52]
3367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6605              		.loc 1 3367 0
 6606 000c 2268     		ldr	r2, [r4]
 6607 000e 5368     		ldr	r3, [r2, #4]
 6608 0010 0221     		movs	r1, #2
 6609 0012 8B43     		bics	r3, r1
 6610 0014 5360     		str	r3, [r2, #4]
3369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6611              		.loc 1 3369 0
 6612 0016 FFF7FEFF 		bl	HAL_GetTick
 6613              	.LVL496:
 6614 001a 0200     		movs	r2, r0
 6615 001c 6421     		movs	r1, #100
 6616 001e 2000     		movs	r0, r4
 6617 0020 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 6618              	.LVL497:
 6619 0024 0028     		cmp	r0, #0
 6620 0026 01D0     		beq	.L472
3371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 6621              		.loc 1 3371 0
 6622 0028 4023     		movs	r3, #64
 6623 002a 2366     		str	r3, [r4, #96]
 6624              	.L472:
ARM GAS  /tmp/ccXTKjLx.s 			page 209


3375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6625              		.loc 1 3375 0
 6626 002c 2268     		ldr	r2, [r4]
 6627 002e 1368     		ldr	r3, [r2]
 6628 0030 4021     		movs	r1, #64
 6629 0032 8B43     		bics	r3, r1
 6630 0034 1360     		str	r3, [r2]
3378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6631              		.loc 1 3378 0
 6632 0036 FFF7FEFF 		bl	HAL_GetTick
 6633              	.LVL498:
 6634 003a 0090     		str	r0, [sp]
 6635 003c 6423     		movs	r3, #100
 6636 003e 0022     		movs	r2, #0
 6637 0040 C021     		movs	r1, #192
 6638 0042 C900     		lsls	r1, r1, #3
 6639 0044 2000     		movs	r0, r4
 6640 0046 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 6641              	.LVL499:
 6642 004a 0028     		cmp	r0, #0
 6643 004c 01D0     		beq	.L473
3380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 6644              		.loc 1 3380 0
 6645 004e 4023     		movs	r3, #64
 6646 0050 2366     		str	r3, [r4, #96]
 6647              	.L473:
3384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6648              		.loc 1 3384 0
 6649 0052 A36D     		ldr	r3, [r4, #88]
 6650 0054 002B     		cmp	r3, #0
 6651 0056 04D0     		beq	.L474
3386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 6652              		.loc 1 3386 0
 6653 0058 5B6B     		ldr	r3, [r3, #52]
 6654 005a 002B     		cmp	r3, #0
 6655 005c 01D0     		beq	.L474
 6656              	.L471:
3416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6657              		.loc 1 3416 0
 6658 005e 04B0     		add	sp, sp, #16
 6659              		@ sp needed
 6660              	.LVL500:
 6661 0060 10BD     		pop	{r4, pc}
 6662              	.LVL501:
 6663              	.L474:
3393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 6664              		.loc 1 3393 0
 6665 0062 0023     		movs	r3, #0
 6666 0064 4622     		movs	r2, #70
 6667 0066 A352     		strh	r3, [r4, r2]
3394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6668              		.loc 1 3394 0
 6669 0068 E387     		strh	r3, [r4, #62]
3397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6670              		.loc 1 3397 0
 6671 006a 236E     		ldr	r3, [r4, #96]
 6672 006c 402B     		cmp	r3, #64
ARM GAS  /tmp/ccXTKjLx.s 			page 210


 6673 006e 01D0     		beq	.L476
3400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 6674              		.loc 1 3400 0
 6675 0070 0023     		movs	r3, #0
 6676 0072 2366     		str	r3, [r4, #96]
 6677              	.L476:
 6678              	.LBB15:
3404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 6679              		.loc 1 3404 0
 6680 0074 0022     		movs	r2, #0
 6681 0076 0292     		str	r2, [sp, #8]
 6682 0078 2368     		ldr	r3, [r4]
 6683 007a D968     		ldr	r1, [r3, #12]
 6684 007c 0291     		str	r1, [sp, #8]
 6685 007e 9968     		ldr	r1, [r3, #8]
 6686 0080 0291     		str	r1, [sp, #8]
 6687 0082 0299     		ldr	r1, [sp, #8]
 6688              	.LBE15:
 6689              	.LBB16:
3405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6690              		.loc 1 3405 0
 6691 0084 0392     		str	r2, [sp, #12]
 6692 0086 9B68     		ldr	r3, [r3, #8]
 6693 0088 0393     		str	r3, [sp, #12]
 6694 008a 039B     		ldr	r3, [sp, #12]
 6695              	.LBE16:
3408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6696              		.loc 1 3408 0
 6697 008c 0132     		adds	r2, r2, #1
 6698 008e 5D23     		movs	r3, #93
 6699 0090 E254     		strb	r2, [r4, r3]
3414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 6700              		.loc 1 3414 0
 6701 0092 2000     		movs	r0, r4
 6702 0094 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 6703              	.LVL502:
 6704 0098 E1E7     		b	.L471
 6705              		.cfi_endproc
 6706              	.LFE77:
 6708              		.section	.text.HAL_SPI_GetState,"ax",%progbits
 6709              		.align	1
 6710              		.global	HAL_SPI_GetState
 6711              		.syntax unified
 6712              		.code	16
 6713              		.thumb_func
 6714              		.fpu softvfp
 6716              	HAL_SPI_GetState:
 6717              	.LFB67:
2984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Return SPI handle state */
 6718              		.loc 1 2984 0
 6719              		.cfi_startproc
 6720              		@ args = 0, pretend = 0, frame = 0
 6721              		@ frame_needed = 0, uses_anonymous_args = 0
 6722              		@ link register save eliminated.
 6723              	.LVL503:
2986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 6724              		.loc 1 2986 0
ARM GAS  /tmp/ccXTKjLx.s 			page 211


 6725 0000 5D23     		movs	r3, #93
 6726 0002 C05C     		ldrb	r0, [r0, r3]
 6727              	.LVL504:
 6728 0004 C0B2     		uxtb	r0, r0
2987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6729              		.loc 1 2987 0
 6730              		@ sp needed
 6731 0006 7047     		bx	lr
 6732              		.cfi_endproc
 6733              	.LFE67:
 6735              		.section	.text.HAL_SPI_GetError,"ax",%progbits
 6736              		.align	1
 6737              		.global	HAL_SPI_GetError
 6738              		.syntax unified
 6739              		.code	16
 6740              		.thumb_func
 6741              		.fpu softvfp
 6743              	HAL_SPI_GetError:
 6744              	.LFB68:
2996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Return SPI ErrorCode */
 6745              		.loc 1 2996 0
 6746              		.cfi_startproc
 6747              		@ args = 0, pretend = 0, frame = 0
 6748              		@ frame_needed = 0, uses_anonymous_args = 0
 6749              		@ link register save eliminated.
 6750              	.LVL505:
2998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 6751              		.loc 1 2998 0
 6752 0000 006E     		ldr	r0, [r0, #96]
 6753              	.LVL506:
2999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6754              		.loc 1 2999 0
 6755              		@ sp needed
 6756 0002 7047     		bx	lr
 6757              		.cfi_endproc
 6758              	.LFE68:
 6760              		.text
 6761              	.Letext0:
 6762              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 6763              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 6764              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 6765              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f091xc.h"
 6766              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 6767              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 6768              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 6769              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_spi.h"
 6770              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /tmp/ccXTKjLx.s 			page 212


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_spi.c
     /tmp/ccXTKjLx.s:16     .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 $t
     /tmp/ccXTKjLx.s:22     .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 SPI_WaitFlagStateUntilTimeout
     /tmp/ccXTKjLx.s:147    .text.SPI_WaitFlagStateUntilTimeout:0000000000000098 $d
     /tmp/ccXTKjLx.s:152    .text.SPI_WaitFifoStateUntilTimeout:0000000000000000 $t
     /tmp/ccXTKjLx.s:158    .text.SPI_WaitFifoStateUntilTimeout:0000000000000000 SPI_WaitFifoStateUntilTimeout
     /tmp/ccXTKjLx.s:294    .text.SPI_WaitFifoStateUntilTimeout:00000000000000a4 $d
     /tmp/ccXTKjLx.s:299    .text.SPI_EndRxTxTransaction:0000000000000000 $t
     /tmp/ccXTKjLx.s:305    .text.SPI_EndRxTxTransaction:0000000000000000 SPI_EndRxTxTransaction
     /tmp/ccXTKjLx.s:396    .text.SPI_EndRxTransaction:0000000000000000 $t
     /tmp/ccXTKjLx.s:402    .text.SPI_EndRxTransaction:0000000000000000 SPI_EndRxTransaction
     /tmp/ccXTKjLx.s:523    .text.SPI_AbortRx_ISR:0000000000000000 $t
     /tmp/ccXTKjLx.s:529    .text.SPI_AbortRx_ISR:0000000000000000 SPI_AbortRx_ISR
     /tmp/ccXTKjLx.s:634    .text.SPI_AbortRx_ISR:0000000000000088 $d
     /tmp/ccXTKjLx.s:640    .text.SPI_AbortTx_ISR:0000000000000000 $t
     /tmp/ccXTKjLx.s:646    .text.SPI_AbortTx_ISR:0000000000000000 SPI_AbortTx_ISR
     /tmp/ccXTKjLx.s:814    .text.SPI_AbortTx_ISR:00000000000000e8 $d
     /tmp/ccXTKjLx.s:820    .text.HAL_SPI_MspInit:0000000000000000 $t
     /tmp/ccXTKjLx.s:827    .text.HAL_SPI_MspInit:0000000000000000 HAL_SPI_MspInit
     /tmp/ccXTKjLx.s:842    .text.HAL_SPI_Init:0000000000000000 $t
     /tmp/ccXTKjLx.s:849    .text.HAL_SPI_Init:0000000000000000 HAL_SPI_Init
     /tmp/ccXTKjLx.s:1008   .text.HAL_SPI_Init:00000000000000c8 $d
     /tmp/ccXTKjLx.s:1013   .text.HAL_SPI_MspDeInit:0000000000000000 $t
     /tmp/ccXTKjLx.s:1020   .text.HAL_SPI_MspDeInit:0000000000000000 HAL_SPI_MspDeInit
     /tmp/ccXTKjLx.s:1035   .text.HAL_SPI_DeInit:0000000000000000 $t
     /tmp/ccXTKjLx.s:1042   .text.HAL_SPI_DeInit:0000000000000000 HAL_SPI_DeInit
     /tmp/ccXTKjLx.s:1097   .text.HAL_SPI_Transmit:0000000000000000 $t
     /tmp/ccXTKjLx.s:1104   .text.HAL_SPI_Transmit:0000000000000000 HAL_SPI_Transmit
     /tmp/ccXTKjLx.s:1485   .text.HAL_SPI_TransmitReceive:0000000000000000 $t
     /tmp/ccXTKjLx.s:1492   .text.HAL_SPI_TransmitReceive:0000000000000000 HAL_SPI_TransmitReceive
     /tmp/ccXTKjLx.s:2068   .text.HAL_SPI_TransmitReceive:00000000000002c8 $d
     /tmp/ccXTKjLx.s:2073   .text.HAL_SPI_Receive:0000000000000000 $t
     /tmp/ccXTKjLx.s:2080   .text.HAL_SPI_Receive:0000000000000000 HAL_SPI_Receive
     /tmp/ccXTKjLx.s:2401   .text.HAL_SPI_Receive:0000000000000190 $d
     /tmp/ccXTKjLx.s:2407   .text.HAL_SPI_Transmit_IT:0000000000000000 $t
     /tmp/ccXTKjLx.s:2414   .text.HAL_SPI_Transmit_IT:0000000000000000 HAL_SPI_Transmit_IT
     /tmp/ccXTKjLx.s:2564   .text.HAL_SPI_Transmit_IT:00000000000000a4 $d
     /tmp/ccXTKjLx.s:4872   .text.SPI_TxISR_16BIT:0000000000000000 SPI_TxISR_16BIT
     /tmp/ccXTKjLx.s:4819   .text.SPI_TxISR_8BIT:0000000000000000 SPI_TxISR_8BIT
     /tmp/ccXTKjLx.s:2570   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 $t
     /tmp/ccXTKjLx.s:2577   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 HAL_SPI_TransmitReceive_IT
     /tmp/ccXTKjLx.s:2797   .text.HAL_SPI_TransmitReceive_IT:00000000000000e4 $d
     /tmp/ccXTKjLx.s:5450   .text.SPI_2linesRxISR_16BIT:0000000000000000 SPI_2linesRxISR_16BIT
     /tmp/ccXTKjLx.s:5385   .text.SPI_2linesTxISR_16BIT:0000000000000000 SPI_2linesTxISR_16BIT
     /tmp/ccXTKjLx.s:5281   .text.SPI_2linesRxISR_8BIT:0000000000000000 SPI_2linesRxISR_8BIT
     /tmp/ccXTKjLx.s:5194   .text.SPI_2linesTxISR_8BIT:0000000000000000 SPI_2linesTxISR_8BIT
     /tmp/ccXTKjLx.s:2806   .text.HAL_SPI_Receive_IT:0000000000000000 $t
     /tmp/ccXTKjLx.s:2813   .text.HAL_SPI_Receive_IT:0000000000000000 HAL_SPI_Receive_IT
     /tmp/ccXTKjLx.s:3001   .text.HAL_SPI_Receive_IT:00000000000000d8 $d
     /tmp/ccXTKjLx.s:5048   .text.SPI_RxISR_16BIT:0000000000000000 SPI_RxISR_16BIT
     /tmp/ccXTKjLx.s:4994   .text.SPI_RxISR_8BIT:0000000000000000 SPI_RxISR_8BIT
     /tmp/ccXTKjLx.s:3009   .text.HAL_SPI_Transmit_DMA:0000000000000000 $t
     /tmp/ccXTKjLx.s:3016   .text.HAL_SPI_Transmit_DMA:0000000000000000 HAL_SPI_Transmit_DMA
     /tmp/ccXTKjLx.s:3249   .text.HAL_SPI_Transmit_DMA:0000000000000120 $d
     /tmp/ccXTKjLx.s:4569   .text.SPI_DMAHalfTransmitCplt:0000000000000000 SPI_DMAHalfTransmitCplt
     /tmp/ccXTKjLx.s:5561   .text.SPI_DMATransmitCplt:0000000000000000 SPI_DMATransmitCplt
ARM GAS  /tmp/ccXTKjLx.s 			page 213


     /tmp/ccXTKjLx.s:5515   .text.SPI_DMAError:0000000000000000 SPI_DMAError
     /tmp/ccXTKjLx.s:3257   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 $t
     /tmp/ccXTKjLx.s:3264   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 HAL_SPI_TransmitReceive_DMA
     /tmp/ccXTKjLx.s:3666   .text.HAL_SPI_TransmitReceive_DMA:00000000000001fc $d
     /tmp/ccXTKjLx.s:4675   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 SPI_DMAHalfTransmitReceiveCplt
     /tmp/ccXTKjLx.s:5764   .text.SPI_DMATransmitReceiveCplt:0000000000000000 SPI_DMATransmitReceiveCplt
     /tmp/ccXTKjLx.s:4622   .text.SPI_DMAHalfReceiveCplt:0000000000000000 SPI_DMAHalfReceiveCplt
     /tmp/ccXTKjLx.s:5672   .text.SPI_DMAReceiveCplt:0000000000000000 SPI_DMAReceiveCplt
     /tmp/ccXTKjLx.s:3679   .text.HAL_SPI_Receive_DMA:0000000000000000 $t
     /tmp/ccXTKjLx.s:3686   .text.HAL_SPI_Receive_DMA:0000000000000000 HAL_SPI_Receive_DMA
     /tmp/ccXTKjLx.s:3968   .text.HAL_SPI_Receive_DMA:000000000000016c $d
     /tmp/ccXTKjLx.s:3978   .text.HAL_SPI_Abort:0000000000000000 $t
     /tmp/ccXTKjLx.s:3985   .text.HAL_SPI_Abort:0000000000000000 HAL_SPI_Abort
     /tmp/ccXTKjLx.s:4272   .text.HAL_SPI_Abort:0000000000000188 $d
     /tmp/ccXTKjLx.s:4280   .text.HAL_SPI_DMAPause:0000000000000000 $t
     /tmp/ccXTKjLx.s:4287   .text.HAL_SPI_DMAPause:0000000000000000 HAL_SPI_DMAPause
     /tmp/ccXTKjLx.s:4334   .text.HAL_SPI_DMAResume:0000000000000000 $t
     /tmp/ccXTKjLx.s:4341   .text.HAL_SPI_DMAResume:0000000000000000 HAL_SPI_DMAResume
     /tmp/ccXTKjLx.s:4388   .text.HAL_SPI_DMAStop:0000000000000000 $t
     /tmp/ccXTKjLx.s:4395   .text.HAL_SPI_DMAStop:0000000000000000 HAL_SPI_DMAStop
     /tmp/ccXTKjLx.s:4475   .text.HAL_SPI_TxCpltCallback:0000000000000000 $t
     /tmp/ccXTKjLx.s:4482   .text.HAL_SPI_TxCpltCallback:0000000000000000 HAL_SPI_TxCpltCallback
     /tmp/ccXTKjLx.s:4497   .text.HAL_SPI_RxCpltCallback:0000000000000000 $t
     /tmp/ccXTKjLx.s:4504   .text.HAL_SPI_RxCpltCallback:0000000000000000 HAL_SPI_RxCpltCallback
     /tmp/ccXTKjLx.s:4519   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 $t
     /tmp/ccXTKjLx.s:4526   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 HAL_SPI_TxRxCpltCallback
     /tmp/ccXTKjLx.s:4541   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccXTKjLx.s:4548   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 HAL_SPI_TxHalfCpltCallback
     /tmp/ccXTKjLx.s:4563   .text.SPI_DMAHalfTransmitCplt:0000000000000000 $t
     /tmp/ccXTKjLx.s:4594   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccXTKjLx.s:4601   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 HAL_SPI_RxHalfCpltCallback
     /tmp/ccXTKjLx.s:4616   .text.SPI_DMAHalfReceiveCplt:0000000000000000 $t
     /tmp/ccXTKjLx.s:4647   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 $t
     /tmp/ccXTKjLx.s:4654   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 HAL_SPI_TxRxHalfCpltCallback
     /tmp/ccXTKjLx.s:4669   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 $t
     /tmp/ccXTKjLx.s:4700   .text.HAL_SPI_ErrorCallback:0000000000000000 $t
     /tmp/ccXTKjLx.s:4707   .text.HAL_SPI_ErrorCallback:0000000000000000 HAL_SPI_ErrorCallback
     /tmp/ccXTKjLx.s:4722   .text.SPI_CloseTx_ISR:0000000000000000 $t
     /tmp/ccXTKjLx.s:4728   .text.SPI_CloseTx_ISR:0000000000000000 SPI_CloseTx_ISR
     /tmp/ccXTKjLx.s:4813   .text.SPI_TxISR_8BIT:0000000000000000 $t
     /tmp/ccXTKjLx.s:4866   .text.SPI_TxISR_16BIT:0000000000000000 $t
     /tmp/ccXTKjLx.s:4919   .text.SPI_CloseRx_ISR:0000000000000000 $t
     /tmp/ccXTKjLx.s:4925   .text.SPI_CloseRx_ISR:0000000000000000 SPI_CloseRx_ISR
     /tmp/ccXTKjLx.s:4988   .text.SPI_RxISR_8BIT:0000000000000000 $t
     /tmp/ccXTKjLx.s:5042   .text.SPI_RxISR_16BIT:0000000000000000 $t
     /tmp/ccXTKjLx.s:5096   .text.SPI_CloseRxTx_ISR:0000000000000000 $t
     /tmp/ccXTKjLx.s:5102   .text.SPI_CloseRxTx_ISR:0000000000000000 SPI_CloseRxTx_ISR
     /tmp/ccXTKjLx.s:5188   .text.SPI_2linesTxISR_8BIT:0000000000000000 $t
     /tmp/ccXTKjLx.s:5275   .text.SPI_2linesRxISR_8BIT:0000000000000000 $t
     /tmp/ccXTKjLx.s:5379   .text.SPI_2linesTxISR_16BIT:0000000000000000 $t
     /tmp/ccXTKjLx.s:5444   .text.SPI_2linesRxISR_16BIT:0000000000000000 $t
     /tmp/ccXTKjLx.s:5509   .text.SPI_DMAError:0000000000000000 $t
     /tmp/ccXTKjLx.s:5555   .text.SPI_DMATransmitCplt:0000000000000000 $t
     /tmp/ccXTKjLx.s:5666   .text.SPI_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccXTKjLx.s:5758   .text.SPI_DMATransmitReceiveCplt:0000000000000000 $t
     /tmp/ccXTKjLx.s:5854   .text.HAL_SPI_IRQHandler:0000000000000000 $t
     /tmp/ccXTKjLx.s:5861   .text.HAL_SPI_IRQHandler:0000000000000000 HAL_SPI_IRQHandler
ARM GAS  /tmp/ccXTKjLx.s 			page 214


     /tmp/ccXTKjLx.s:6087   .text.HAL_SPI_IRQHandler:000000000000010c $d
     /tmp/ccXTKjLx.s:6098   .text.SPI_DMAAbortOnError:0000000000000000 SPI_DMAAbortOnError
     /tmp/ccXTKjLx.s:6092   .text.SPI_DMAAbortOnError:0000000000000000 $t
     /tmp/ccXTKjLx.s:6129   .text.HAL_SPI_AbortCpltCallback:0000000000000000 $t
     /tmp/ccXTKjLx.s:6136   .text.HAL_SPI_AbortCpltCallback:0000000000000000 HAL_SPI_AbortCpltCallback
     /tmp/ccXTKjLx.s:6151   .text.HAL_SPI_Abort_IT:0000000000000000 $t
     /tmp/ccXTKjLx.s:6158   .text.HAL_SPI_Abort_IT:0000000000000000 HAL_SPI_Abort_IT
     /tmp/ccXTKjLx.s:6433   .text.HAL_SPI_Abort_IT:0000000000000148 $d
     /tmp/ccXTKjLx.s:6583   .text.SPI_DMATxAbortCallback:0000000000000000 SPI_DMATxAbortCallback
     /tmp/ccXTKjLx.s:6449   .text.SPI_DMARxAbortCallback:0000000000000000 SPI_DMARxAbortCallback
     /tmp/ccXTKjLx.s:6443   .text.SPI_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccXTKjLx.s:6577   .text.SPI_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccXTKjLx.s:6709   .text.HAL_SPI_GetState:0000000000000000 $t
     /tmp/ccXTKjLx.s:6716   .text.HAL_SPI_GetState:0000000000000000 HAL_SPI_GetState
     /tmp/ccXTKjLx.s:6736   .text.HAL_SPI_GetError:0000000000000000 $t
     /tmp/ccXTKjLx.s:6743   .text.HAL_SPI_GetError:0000000000000000 HAL_SPI_GetError
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
__aeabi_uidiv
SystemCoreClock
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
