ARM GAS  /tmp/ccsKZFTZ.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_uart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.code	16
  19              		.thumb_func
  20              		.fpu softvfp
  22              	UART_EndTxTransfer:
  23              	.LFB86:
  24              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @file    stm32f0xx_hal_uart.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   [..]
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) UART interrupts handling:
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 inside the transmit and receive processes.
ARM GAS  /tmp/ccsKZFTZ.s 			page 2


  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         the HAL_UART_Init() API.
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ##### Callback registration #####
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ==================================
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
ARM GAS  /tmp/ccsKZFTZ.s 			page 3


  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and a pointer to the user callback function.
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     weak (surcharged) function.
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and the Callback ID.
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This function allows to reset following callbacks:
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     not defined, the callback registration feature is not available
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   @endverbatim
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @attention
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * All rights reserved.</center></h2>
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
ARM GAS  /tmp/ccsKZFTZ.s 			page 4


 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #include "stm32f0xx_hal.h"
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @addtogroup STM32F0xx_HAL_Driver
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART UART
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief HAL UART module driver
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8 )) /*!< UART or
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT))  /*!< UA
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/ccsKZFTZ.s 			page 5


 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** ===============================================================================
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     in asynchronous mode.
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Baud Rate
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Word Length
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Stop Bit
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Hardware flow control
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Receiver/transmitter modes
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Over Sampling Method
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) One-Bit Sampling Method
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) data logical level inversion
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) RX and TX pins swap
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) RX overrun detection disabling
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) DMA disabling on RX error
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) MSB first on communication line
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) auto Baud rate detection
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     are available in reference manual).
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   following table.
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   Table 1. UART frame format.
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     +-----------------------------------------------------------------------+
ARM GAS  /tmp/ccsKZFTZ.s 			page 6


 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart == NULL)
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check the parameters */
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check the parameters */
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware */
ARM GAS  /tmp/ccsKZFTZ.s 			page 7


 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported)  bits in the USART_CR3 
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR2_LINEN */
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN */
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN*/
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_SCEN */
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
ARM GAS  /tmp/ccsKZFTZ.s 			page 8


 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart == NULL)
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check UART instance */
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware */
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported) and IREN (if IrDA is supported) bits in the USART_CR3 register
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR2_LINEN */
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
ARM GAS  /tmp/ccsKZFTZ.s 			page 9


 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_SCEN);
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN */
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_IREN);
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN */
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_SCEN */
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if   defined(USART_CR2_LINEN)
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart             UART handle.
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        This parameter can be one of the following values:
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart == NULL)
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the LIN UART instance */
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the Break detection length parameter */
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
ARM GAS  /tmp/ccsKZFTZ.s 			page 10


 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware */
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN(if Smartcard is supported) and IREN(if IrDA is supported) bits in the USART_CR3 register.*
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN */
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN*/
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_SCEN */
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccsKZFTZ.s 			page 11


 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR2_LINEN */
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart        UART handle.
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        This parameter can be one of the following values:
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart == NULL)
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the wake up method parameter */
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware */
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccsKZFTZ.s 			page 12


 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported) bits in the USART_CR3 r
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR2_LINEN */
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN */
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN */
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_SCEN */
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
ARM GAS  /tmp/ccsKZFTZ.s 			page 13


 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart == NULL)
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DeInit the low level hardware */
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DeInit the low level hardware */
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccsKZFTZ.s 			page 14


 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Register a User UART Callback
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart uart handle
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This parameter can be one of the following values:
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (pCallback == NULL)
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (CallbackID)
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
ARM GAS  /tmp/ccsKZFTZ.s 			page 15


 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default :
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         status =  HAL_ERROR;
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (CallbackID)
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
ARM GAS  /tmp/ccsKZFTZ.s 			page 16


 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default :
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         status =  HAL_ERROR;
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     status =  HAL_ERROR;
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return status;
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart uart handle
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This parameter can be one of the following values:
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (CallbackID)
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
ARM GAS  /tmp/ccsKZFTZ.s 			page 17


 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined(USART_CR1_UESM)
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR1_UESM */
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default :
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         status =  HAL_ERROR;
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (CallbackID)
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
ARM GAS  /tmp/ccsKZFTZ.s 			page 18


 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default :
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         status =  HAL_ERROR;
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     status =  HAL_ERROR;
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return status;
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                       ##### IO operation functions #####
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and Half duplex data transfers.
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) There are two mode of transfer:
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            after finishing transfer.
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The end of the data processing will be indicated through the
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            using DMA mode.
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Blocking mode API's are :
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Transmit()
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Receive()
ARM GAS  /tmp/ccsKZFTZ.s 			page 19


1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Abort()
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         Errors are handled as follows :
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         of u16 provided through pData.
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
ARM GAS  /tmp/ccsKZFTZ.s 			page 20


1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart   UART handle.
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be sent.
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout Timeout duration.
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint8_t  *pdata8bits;
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t *pdata16bits;
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart;
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return  HAL_ERROR;
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tickstart = HAL_GetTick();
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize  = Size;
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata8bits  = NULL;
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata8bits  = pData;
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata16bits = NULL;
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccsKZFTZ.s 			page 21


1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (pdata8bits == NULL)
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pdata16bits++;
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pdata8bits++;
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_TIMEOUT;
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         of u16 available through pData.
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart   UART handle.
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be received.
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout Timeout duration.
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint8_t  *pdata8bits;
1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t *pdata16bits;
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t uhMask;
ARM GAS  /tmp/ccsKZFTZ.s 			page 22


1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart;
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return  HAL_ERROR;
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tickstart = HAL_GetTick();
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize  = Size;
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata8bits  = NULL;
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata8bits  = pData;
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata16bits = NULL;
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* as long as data have to be received */
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (pdata8bits == NULL)
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
ARM GAS  /tmp/ccsKZFTZ.s 			page 23


1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pdata16bits++;
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pdata8bits++;
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxXferCount--;
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         of u16 provided through pData.
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
ARM GAS  /tmp/ccsKZFTZ.s 			page 24


1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize  = Size;
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxISR       = NULL;
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the Tx ISR function pointer according to the data word length */
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxISR = UART_TxISR_16BIT;
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxISR = UART_TxISR_8BIT;
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the Transmit Data Register Empty interrupt */
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
1315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         of u16 available through pData.
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
ARM GAS  /tmp/ccsKZFTZ.s 			page 25


1346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be
1350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
1351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
1360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr  = pData;
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize  = Size;
1363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxISR       = NULL;
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
1383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
1388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
1389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
1391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
1395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         of u16 provided through pData.
ARM GAS  /tmp/ccsKZFTZ.s 			page 26


1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled by DMA from halfword frontier). Depending on compilation 
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
1420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy into TDR will be
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
1425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize  = Size;
1437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the DMA error callback */
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the DMA abort callback */
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Set error code to DMA */
ARM GAS  /tmp/ccsKZFTZ.s 			page 27


1460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Restore huart->gState to ready */
1465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_ERROR;
1468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     in the UART CR3 register */
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
1484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the parity bit (MSB position).
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         of u16 available through pData.
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled by DMA from halfword frontier). Depending on compilat
1497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
1511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy from RDR will be
1515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
1516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
ARM GAS  /tmp/ccsKZFTZ.s 			page 28


1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
1519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
1521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
1525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
1528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the DMA error callback */
1541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferErrorCallback = UART_DMAError;
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the DMA abort callback */
1544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Enable the DMA channel */
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuff
1548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Set error code to DMA */
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
1551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Restore huart->gState to ready */
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_ERROR;
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     in the UART CR3 register */
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccsKZFTZ.s 			page 29


1574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
1577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
1629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
ARM GAS  /tmp/ccsKZFTZ.s 			page 30


1631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Set error code to DMA */
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
1680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
ARM GAS  /tmp/ccsKZFTZ.s 			page 31


1688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Set error code to DMA */
1701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
1704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
ARM GAS  /tmp/ccsKZFTZ.s 			page 32


1745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Set error code to DMA */
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
1752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Set error code to DMA */
1774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
1777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Discard the received data */
1791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccsKZFTZ.s 			page 33


1802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Set error code to DMA */
1836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
1839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Tx transfer counter */
1845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
1846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
ARM GAS  /tmp/ccsKZFTZ.s 			page 34


1859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Set error code to DMA */
1889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
1892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Rx transfer counter */
1898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
1899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Discard the received data */
1904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
ARM GAS  /tmp/ccsKZFTZ.s 			page 35


1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable interrupts */
1931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      before any call to DMA Abort functions */
1936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->hdmatx != NULL)
1938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Otherwise, set it to NULL */
1941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->hdmarx != NULL)
1952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Otherwise, set it to NULL */
1955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
ARM GAS  /tmp/ccsKZFTZ.s 			page 36


1973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA TX */
1978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
1983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 0U;
1985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA RX */
2001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
2004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 1U;
2005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
2007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 0U;
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (abortcplt == 1U)
2015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
2017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U;
2018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear ISR function pointers */
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxISR = NULL;
2022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxISR = NULL;
2023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset errorCode */
2025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
2026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
2029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccsKZFTZ.s 			page 37


2030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Discard the received data */
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
2035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
2036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call registered Abort complete callback */
2041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
2045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
2056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
2060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable interrupts */
2068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
2069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
2077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
2081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA TX */
2083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
ARM GAS  /tmp/ccsKZFTZ.s 			page 38


2087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Reset Tx transfer counter */
2092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount = 0U;
2093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear TxISR function pointers */
2095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxISR = NULL;
2096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
2107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Tx transfer counter */
2113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U;
2114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear TxISR function pointers */
2116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxISR = NULL;
2117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
2129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
2140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
ARM GAS  /tmp/ccsKZFTZ.s 			page 39


2144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
2166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA RX */
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
2172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Reset Rx transfer counter */
2177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxXferCount = 0U;
2178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear RxISR function pointer */
2180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
2181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
2184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Discard the received data */
2186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
2198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccsKZFTZ.s 			page 40


2201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Rx transfer counter */
2204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
2205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear RxISR function pointer */
2207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
2208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
2211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
2222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
2236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
2237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
2238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t errorflags;
2240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t errorcode;
2241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If no error occurs */
2243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | 
2244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (errorflags == 0U)
2245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE) != 0U)
2248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
2249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (huart->RxISR != NULL)
2251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxISR(huart);
2253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
2255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccsKZFTZ.s 			page 41


2258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If some errors occur */
2259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((errorflags != 0U)
2260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
2261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != 0U)))
2262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
2265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
2267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
2269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
2275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
2277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
2283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
2285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
2290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
2291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
2293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
2295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART Receiver Timeout interrupt occurred ---------------------------------*/
2298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
2299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
2301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_RTO;
2303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call UART Error Call back function if need be ----------------------------*/
2306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
2307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART in mode Receiver --------------------------------------------------*/
2309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE) != 0U)
2310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
2311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (huart->RxISR != NULL)
2313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
2314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->RxISR(huart);
ARM GAS  /tmp/ccsKZFTZ.s 			page 42


2315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
2316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* If Error is to be considered as blocking :
2319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           - Receiver Timeout error in Reception
2320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           - Overrun error in Reception
2321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           - any error occurs in DMA mode reception
2322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       */
2323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       errorcode = huart->ErrorCode;
2324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
2325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
2326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         UART_EndRxTransfer(huart);
2331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
2335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           if (huart->hdmarx != NULL)
2339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
2340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
2343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Abort DMA RX */
2345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             {
2347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
2349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             }
2350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           }
2351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           else
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
2353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Call user error callback */
2354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /*Call registered error callback*/
2356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             huart->ErrorCallback(huart);
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /*Call legacy weak error callback*/
2359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
2360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           }
2363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
2364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         else
2365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
2366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Call user error callback */
2367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /*Call registered error callback*/
2369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCallback(huart);
2370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /*Call legacy weak error callback*/
ARM GAS  /tmp/ccsKZFTZ.s 			page 43


2372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
2373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
2375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
2377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Error is notified to user through user error callback */
2380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call registered error callback*/
2382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCallback(huart);
2383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call legacy weak error callback*/
2385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
2386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
2388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
2391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   } /* End if some error occurs */
2393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined(USART_CR1_UESM)
2394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
2397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
2399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->WakeupCallback(huart);
2406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
2409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
2411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR1_UESM */
2413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE) != 0U)
2416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
2417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->TxISR != NULL)
2419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxISR(huart);
2421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
2423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
2427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
ARM GAS  /tmp/ccsKZFTZ.s 			page 44


2429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
2430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
ARM GAS  /tmp/ccsKZFTZ.s 			page 45


2486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART error callback.
2496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/ccsKZFTZ.s 			page 46


2543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief   UART control functions
2560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
2561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
2562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
2563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
2565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
2566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_UART_ReceiverTimeout_Config() API allows to configure the receiver timeout value on th
2568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_UART_EnableReceiverTimeout() API enables the receiver timeout feature
2569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_UART_DisableReceiverTimeout() API disables the receiver timeout feature
2570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
2580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
2581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Update on the fly the receiver timeout value in RTOR register.
2585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  TimeoutValue receiver timeout value in number of baud blocks. The timeout
2588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *                     value must be less or equal to 0x0FFFFFFFF.
2589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_UART_ReceiverTimeout_Config(UART_HandleTypeDef *huart, uint32_t TimeoutValue)
2592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
2594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
2595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART receiver timeout feature.
2599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
ARM GAS  /tmp/ccsKZFTZ.s 			page 47


2600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_EnableReceiverTimeout(UART_HandleTypeDef *huart)
2604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
2606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
2608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
2609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY;
2611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the USART RTOEN bit */
2613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
2618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
2619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
2621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
2625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Disable the UART receiver timeout feature.
2630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DisableReceiverTimeout(UART_HandleTypeDef *huart)
2635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
2637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
2639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
2640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY;
2642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the USART RTOEN bit */
2644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
2649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
2650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
2652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
2656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccsKZFTZ.s 			page 48


2657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
2668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
2673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
2688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
2693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
2708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccsKZFTZ.s 			page 49


2714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
2718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear TE and RE bits */
2721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
2725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status.
2737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
2741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear TE and RE bits */
2744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
2748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if   defined(USART_CR2_LINEN)
2758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Transmit break characters.
2760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
2766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
2769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  /tmp/ccsKZFTZ.s 			page 50


2771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Send break characters */
2773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
2774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR2_LINEN */
2782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
2789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
2790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
2791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ==============================================================================
2792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ==============================================================================
2794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
2795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides functions allowing to :
2796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) Return the UART handle state.
2797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) Return the UART handle error code
2798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
2800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
2801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Return the UART handle state.
2805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL state
2808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t temp1;
2812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t temp2;
2813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp1 = huart->gState;
2814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp2 = huart->RxState;
2815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval UART Error Code
2824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return huart->ErrorCode;
ARM GAS  /tmp/ccsKZFTZ.s 			page 51


2828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
2839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval none
2845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Init the UART Callback settings */
2850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined(USART_CR1_UESM)
2859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
2860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR1_UESM */
2861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tmpreg;
2873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t brrtemp;
2874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource;
2875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t usartdiv                   = 0x00000000U;
2876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t pclk;
2878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
2880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccsKZFTZ.s 			page 52


2885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
2893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
2894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
2895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
2896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
2897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
2899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * to huart->Init.StopBits value */
2903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Configure
2907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
2908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
2909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
2910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
2911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
2912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg |= huart->Init.OneBitSampling;
2914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
2915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (clocksource)
2923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
2926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
2927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
2930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
2933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
2934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
2937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default:
2939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
2940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
ARM GAS  /tmp/ccsKZFTZ.s 			page 53


2942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
2944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
2945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
2947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
2948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
2949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ret = HAL_ERROR;
2953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (clocksource)
2958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
2961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
2962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
2965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
2968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
2969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
2972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default:
2974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
2975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
2979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
2980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->Instance->BRR = usartdiv;
2982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ret = HAL_ERROR;
2986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear ISR function pointers */
2991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxISR = NULL;
2992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxISR = NULL;
2993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return ret;
2995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
ARM GAS  /tmp/ccsKZFTZ.s 			page 54


2999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
3000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
3003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
3005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
3006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
3008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
3009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
3011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
3012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
3015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
3016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
3018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
3019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure data inversion */
3022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
3023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
3025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
3026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
3029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
3030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
3032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
3033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
3037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
3040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
3044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
3047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
3051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
3055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
ARM GAS  /tmp/ccsKZFTZ.s 			page 55


3056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
3057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
3060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
3065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
3068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Check the UART Idle State.
3073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
3074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
3075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart;
3079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
3081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
3084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tickstart = HAL_GetTick();
3085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
3088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Timeout occurred */
3093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_TIMEOUT;
3094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
3099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Wait until REACK flag is set */
3101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Timeout occurred */
3104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_TIMEOUT;
3105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize the UART State */
3109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
ARM GAS  /tmp/ccsKZFTZ.s 			page 56


3113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
3115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
3119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart     UART handle.
3120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Status    Flag status (SET or RESET)
3122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Tickstart Tick start value
3123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout   Timeout duration
3124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
3125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
3128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Wait until flag is set */
3130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
3131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check for the Timeout */
3133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
3134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
3136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
3137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
3138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
3139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
3142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
3143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         __HAL_UNLOCK(huart);
3145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
3147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
3148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
3150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
3151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
3152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
3153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Clear Receiver Timeout flag*/
3154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
3155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           
3156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for
3157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
3158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->gState = HAL_UART_STATE_READY;
3161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
3162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
3163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           
3164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Process Unlocked */
3165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UNLOCK(huart);
3166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           
3167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
3168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
3169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
ARM GAS  /tmp/ccsKZFTZ.s 			page 57


3170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
3173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
3179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
  25              		.loc 1 3182 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
3183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  31              		.loc 1 3184 0
  32 0000 0268     		ldr	r2, [r0]
  33 0002 1368     		ldr	r3, [r2]
  34 0004 C021     		movs	r1, #192
  35 0006 8B43     		bics	r3, r1
  36 0008 1360     		str	r3, [r2]
3185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  37              		.loc 1 3187 0
  38 000a 2023     		movs	r3, #32
  39 000c 4367     		str	r3, [r0, #116]
3188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
  40              		.loc 1 3188 0
  41              		@ sp needed
  42 000e 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE86:
  46              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  47              		.align	1
  48              		.syntax unified
  49              		.code	16
  50              		.thumb_func
  51              		.fpu softvfp
  53              	UART_EndRxTransfer:
  54              	.LFB87:
3189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
3194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
  55              		.loc 1 3197 0
ARM GAS  /tmp/ccsKZFTZ.s 			page 58


  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL1:
3198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  61              		.loc 1 3199 0
  62 0000 0268     		ldr	r2, [r0]
  63 0002 1368     		ldr	r3, [r2]
  64 0004 0649     		ldr	r1, .L3
  65 0006 0B40     		ands	r3, r1
  66 0008 1360     		str	r3, [r2]
3200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  67              		.loc 1 3200 0
  68 000a 0268     		ldr	r2, [r0]
  69 000c 9368     		ldr	r3, [r2, #8]
  70 000e 2331     		adds	r1, r1, #35
  71 0010 FF31     		adds	r1, r1, #255
  72 0012 8B43     		bics	r3, r1
  73 0014 9360     		str	r3, [r2, #8]
3201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  74              		.loc 1 3203 0
  75 0016 2023     		movs	r3, #32
  76 0018 8367     		str	r3, [r0, #120]
3204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxISR = NULL;
  77              		.loc 1 3206 0
  78 001a 0023     		movs	r3, #0
  79 001c 0366     		str	r3, [r0, #96]
3207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
  80              		.loc 1 3207 0
  81              		@ sp needed
  82 001e 7047     		bx	lr
  83              	.L4:
  84              		.align	2
  85              	.L3:
  86 0020 DFFEFFFF 		.word	-289
  87              		.cfi_endproc
  88              	.LFE87:
  90              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
  91              		.align	1
  92              		.syntax unified
  93              		.code	16
  94              		.thumb_func
  95              		.fpu softvfp
  97              	UART_TxISR_8BIT:
  98              	.LFB98:
3208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
3213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/ccsKZFTZ.s 			page 59


3214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Normal mode */
3220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
3221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U;
3223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
3226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
3227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Circular mode */
3232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
3233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
3247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
3259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
3265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccsKZFTZ.s 			page 60


3271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Normal mode */
3272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
3273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
3275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
3282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
3286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call registered Rx complete callback*/
3290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxCpltCallback(huart);
3291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
3293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
3294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
3300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
3308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
3309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
3311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
3312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
3318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
3325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
3326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
ARM GAS  /tmp/ccsKZFTZ.s 			page 61


3328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
3329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U;
3332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
3333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
3337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
3340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
3341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
3344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call registered error callback*/
3347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCallback(huart);
3348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call legacy weak error callback*/
3350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
3358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
3364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
3365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call registered error callback*/
3368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCallback(huart);
3369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call legacy weak error callback*/
3371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
3381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
ARM GAS  /tmp/ccsKZFTZ.s 			page 62


3385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
3388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->hdmarx != NULL)
3391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
3393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
3395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
3400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
3401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset errorCode */
3403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
3414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call registered Abort complete callback */
3416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
3430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
3437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->hdmatx != NULL)
3440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
ARM GAS  /tmp/ccsKZFTZ.s 			page 63


3442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
3444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
3449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
3450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset errorCode */
3452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Discard the received data */
3458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
3465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call registered Abort complete callback */
3467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
3481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
3488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
3494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
ARM GAS  /tmp/ccsKZFTZ.s 			page 64


3499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
3500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
3509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
3516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Discard the received data */
3521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
3527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
3533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length .
3538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
3541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
3544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
  99              		.loc 1 3544 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.LVL2:
3545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 105              		.loc 1 3546 0
 106 0000 436F     		ldr	r3, [r0, #116]
 107 0002 212B     		cmp	r3, #33
ARM GAS  /tmp/ccsKZFTZ.s 			page 65


 108 0004 00D0     		beq	.L8
 109              	.L5:
3547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
3549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
3552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
3557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
3559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr++;
3560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
3561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 110              		.loc 1 3563 0
 111              		@ sp needed
 112 0006 7047     		bx	lr
 113              	.L8:
3548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 114              		.loc 1 3548 0
 115 0008 3133     		adds	r3, r3, #49
 116 000a C35A     		ldrh	r3, [r0, r3]
 117 000c 9BB2     		uxth	r3, r3
 118 000e 002B     		cmp	r3, #0
 119 0010 0CD0     		beq	.L9
3558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr++;
 120              		.loc 1 3558 0
 121 0012 C36C     		ldr	r3, [r0, #76]
 122 0014 1B78     		ldrb	r3, [r3]
 123 0016 0268     		ldr	r2, [r0]
 124 0018 1385     		strh	r3, [r2, #40]
3559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
 125              		.loc 1 3559 0
 126 001a C36C     		ldr	r3, [r0, #76]
 127 001c 0133     		adds	r3, r3, #1
 128 001e C364     		str	r3, [r0, #76]
3560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 129              		.loc 1 3560 0
 130 0020 5222     		movs	r2, #82
 131 0022 835A     		ldrh	r3, [r0, r2]
 132 0024 013B     		subs	r3, r3, #1
 133 0026 9BB2     		uxth	r3, r3
 134 0028 8352     		strh	r3, [r0, r2]
 135              		.loc 1 3563 0
 136 002a ECE7     		b	.L5
 137              	.L9:
3551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 138              		.loc 1 3551 0
 139 002c 0268     		ldr	r2, [r0]
 140 002e 1368     		ldr	r3, [r2]
 141 0030 8021     		movs	r1, #128
 142 0032 8B43     		bics	r3, r1
ARM GAS  /tmp/ccsKZFTZ.s 			page 66


 143 0034 1360     		str	r3, [r2]
3554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 144              		.loc 1 3554 0
 145 0036 0268     		ldr	r2, [r0]
 146 0038 1368     		ldr	r3, [r2]
 147 003a 4039     		subs	r1, r1, #64
 148 003c 0B43     		orrs	r3, r1
 149 003e 1360     		str	r3, [r2]
 150 0040 E1E7     		b	.L5
 151              		.cfi_endproc
 152              	.LFE98:
 154              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 155              		.align	1
 156              		.syntax unified
 157              		.code	16
 158              		.thumb_func
 159              		.fpu softvfp
 161              	UART_TxISR_16BIT:
 162              	.LFB99:
3564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length.
3567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
3570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
3573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 163              		.loc 1 3573 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 168              	.LVL3:
3574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t *tmp;
3575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 169              		.loc 1 3577 0
 170 0000 436F     		ldr	r3, [r0, #116]
 171 0002 212B     		cmp	r3, #33
 172 0004 00D0     		beq	.L13
 173              	.L10:
3578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
3580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
3583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
3588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
3590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
ARM GAS  /tmp/ccsKZFTZ.s 			page 67


3591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
3592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
3593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 174              		.loc 1 3595 0
 175              		@ sp needed
 176 0006 7047     		bx	lr
 177              	.L13:
3579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 178              		.loc 1 3579 0
 179 0008 3133     		adds	r3, r3, #49
 180 000a C35A     		ldrh	r3, [r0, r3]
 181 000c 9BB2     		uxth	r3, r3
 182 000e 002B     		cmp	r3, #0
 183 0010 0ED0     		beq	.L14
 184              	.LVL4:
3590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 185              		.loc 1 3590 0
 186 0012 C36C     		ldr	r3, [r0, #76]
 187 0014 1B88     		ldrh	r3, [r3]
 188 0016 DB05     		lsls	r3, r3, #23
 189 0018 DB0D     		lsrs	r3, r3, #23
 190 001a 0268     		ldr	r2, [r0]
 191 001c 1385     		strh	r3, [r2, #40]
 192              	.LVL5:
3591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
 193              		.loc 1 3591 0
 194 001e C36C     		ldr	r3, [r0, #76]
 195 0020 0233     		adds	r3, r3, #2
 196 0022 C364     		str	r3, [r0, #76]
3592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 197              		.loc 1 3592 0
 198 0024 5222     		movs	r2, #82
 199 0026 835A     		ldrh	r3, [r0, r2]
 200 0028 013B     		subs	r3, r3, #1
 201 002a 9BB2     		uxth	r3, r3
 202 002c 8352     		strh	r3, [r0, r2]
 203              		.loc 1 3595 0
 204 002e EAE7     		b	.L10
 205              	.L14:
3582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 206              		.loc 1 3582 0
 207 0030 0268     		ldr	r2, [r0]
 208 0032 1368     		ldr	r3, [r2]
 209 0034 8021     		movs	r1, #128
 210 0036 8B43     		bics	r3, r1
 211 0038 1360     		str	r3, [r2]
3585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 212              		.loc 1 3585 0
 213 003a 0268     		ldr	r2, [r0]
 214 003c 1368     		ldr	r3, [r2]
 215 003e 4039     		subs	r1, r1, #64
 216 0040 0B43     		orrs	r3, r1
 217 0042 1360     		str	r3, [r2]
 218 0044 DFE7     		b	.L10
 219              		.cfi_endproc
ARM GAS  /tmp/ccsKZFTZ.s 			page 68


 220              	.LFE99:
 222              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 223              		.align	1
 224              		.weak	HAL_UART_MspInit
 225              		.syntax unified
 226              		.code	16
 227              		.thumb_func
 228              		.fpu softvfp
 230              	HAL_UART_MspInit:
 231              	.LFB45:
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 232              		.loc 1 710 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              		@ link register save eliminated.
 237              	.LVL6:
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 238              		.loc 1 717 0
 239              		@ sp needed
 240 0000 7047     		bx	lr
 241              		.cfi_endproc
 242              	.LFE45:
 244              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 245              		.align	1
 246              		.weak	HAL_UART_MspDeInit
 247              		.syntax unified
 248              		.code	16
 249              		.thumb_func
 250              		.fpu softvfp
 252              	HAL_UART_MspDeInit:
 253              	.LFB46:
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 254              		.loc 1 725 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              	.LVL7:
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 260              		.loc 1 732 0
 261              		@ sp needed
 262 0000 7047     		bx	lr
 263              		.cfi_endproc
 264              	.LFE46:
 266              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 267              		.align	1
 268              		.global	HAL_UART_DeInit
 269              		.syntax unified
 270              		.code	16
 271              		.thumb_func
 272              		.fpu softvfp
 274              	HAL_UART_DeInit:
 275              	.LFB44:
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 276              		.loc 1 665 0
 277              		.cfi_startproc
ARM GAS  /tmp/ccsKZFTZ.s 			page 69


 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280              	.LVL8:
 281 0000 70B5     		push	{r4, r5, r6, lr}
 282              	.LCFI0:
 283              		.cfi_def_cfa_offset 16
 284              		.cfi_offset 4, -16
 285              		.cfi_offset 5, -12
 286              		.cfi_offset 6, -8
 287              		.cfi_offset 14, -4
 288 0002 041E     		subs	r4, r0, #0
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 289              		.loc 1 667 0
 290 0004 16D0     		beq	.L19
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 291              		.loc 1 675 0
 292 0006 2423     		movs	r3, #36
 293 0008 4367     		str	r3, [r0, #116]
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 294              		.loc 1 677 0
 295 000a 0268     		ldr	r2, [r0]
 296 000c 1368     		ldr	r3, [r2]
 297 000e 0121     		movs	r1, #1
 298 0010 8B43     		bics	r3, r1
 299 0012 1360     		str	r3, [r2]
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 300              		.loc 1 679 0
 301 0014 0368     		ldr	r3, [r0]
 302 0016 0025     		movs	r5, #0
 303 0018 1D60     		str	r5, [r3]
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 304              		.loc 1 680 0
 305 001a 0368     		ldr	r3, [r0]
 306 001c 5D60     		str	r5, [r3, #4]
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 307              		.loc 1 681 0
 308 001e 0368     		ldr	r3, [r0]
 309 0020 9D60     		str	r5, [r3, #8]
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 310              		.loc 1 692 0
 311 0022 FFF7FEFF 		bl	HAL_UART_MspDeInit
 312              	.LVL9:
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 313              		.loc 1 695 0
 314 0026 E567     		str	r5, [r4, #124]
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 315              		.loc 1 696 0
 316 0028 6567     		str	r5, [r4, #116]
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 317              		.loc 1 697 0
 318 002a A567     		str	r5, [r4, #120]
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 319              		.loc 1 699 0
 320 002c 7023     		movs	r3, #112
 321 002e E554     		strb	r5, [r4, r3]
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 322              		.loc 1 701 0
ARM GAS  /tmp/ccsKZFTZ.s 			page 70


 323 0030 0020     		movs	r0, #0
 324              	.L18:
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 325              		.loc 1 702 0
 326              		@ sp needed
 327              	.LVL10:
 328 0032 70BD     		pop	{r4, r5, r6, pc}
 329              	.LVL11:
 330              	.L19:
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 331              		.loc 1 669 0
 332 0034 0120     		movs	r0, #1
 333              	.LVL12:
 334 0036 FCE7     		b	.L18
 335              		.cfi_endproc
 336              	.LFE44:
 338              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 339              		.align	1
 340              		.global	HAL_UART_Transmit_IT
 341              		.syntax unified
 342              		.code	16
 343              		.thumb_func
 344              		.fpu softvfp
 346              	HAL_UART_Transmit_IT:
 347              	.LFB49:
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 348              		.loc 1 1271 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352              	.LVL13:
 353 0000 30B5     		push	{r4, r5, lr}
 354              	.LCFI1:
 355              		.cfi_def_cfa_offset 12
 356              		.cfi_offset 4, -12
 357              		.cfi_offset 5, -8
 358              		.cfi_offset 14, -4
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 359              		.loc 1 1273 0
 360 0002 436F     		ldr	r3, [r0, #116]
 361 0004 202B     		cmp	r3, #32
 362 0006 01D0     		beq	.L30
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 363              		.loc 1 1320 0
 364 0008 0220     		movs	r0, #2
 365              	.LVL14:
 366              	.L21:
1322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 367              		.loc 1 1322 0
 368              		@ sp needed
 369 000a 30BD     		pop	{r4, r5, pc}
 370              	.LVL15:
 371              	.L30:
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 372              		.loc 1 1275 0
 373 000c 0029     		cmp	r1, #0
 374 000e 34D0     		beq	.L26
ARM GAS  /tmp/ccsKZFTZ.s 			page 71


1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 375              		.loc 1 1275 0 is_stmt 0 discriminator 1
 376 0010 002A     		cmp	r2, #0
 377 0012 34D0     		beq	.L27
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 378              		.loc 1 1283 0 is_stmt 1
 379 0014 8368     		ldr	r3, [r0, #8]
 380 0016 8024     		movs	r4, #128
 381 0018 6401     		lsls	r4, r4, #5
 382 001a A342     		cmp	r3, r4
 383 001c 20D0     		beq	.L31
 384              	.L22:
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 385              		.loc 1 1291 0
 386 001e 7024     		movs	r4, #112
 387 0020 045D     		ldrb	r4, [r0, r4]
 388 0022 012C     		cmp	r4, #1
 389 0024 2DD0     		beq	.L29
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 390              		.loc 1 1291 0 is_stmt 0 discriminator 2
 391 0026 0125     		movs	r5, #1
 392 0028 7024     		movs	r4, #112
 393 002a 0555     		strb	r5, [r0, r4]
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize  = Size;
 394              		.loc 1 1293 0 is_stmt 1 discriminator 2
 395 002c C164     		str	r1, [r0, #76]
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 396              		.loc 1 1294 0 discriminator 2
 397 002e 5021     		movs	r1, #80
 398              	.LVL16:
 399 0030 4252     		strh	r2, [r0, r1]
 400              	.LVL17:
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxISR       = NULL;
 401              		.loc 1 1295 0 discriminator 2
 402 0032 0231     		adds	r1, r1, #2
 403 0034 4252     		strh	r2, [r0, r1]
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 404              		.loc 1 1296 0 discriminator 2
 405 0036 0022     		movs	r2, #0
 406              	.LVL18:
 407 0038 4266     		str	r2, [r0, #100]
 408              	.LVL19:
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 409              		.loc 1 1298 0 discriminator 2
 410 003a C267     		str	r2, [r0, #124]
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 411              		.loc 1 1299 0 discriminator 2
 412 003c 2132     		adds	r2, r2, #33
 413 003e 4267     		str	r2, [r0, #116]
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 414              		.loc 1 1302 0 discriminator 2
 415 0040 8022     		movs	r2, #128
 416 0042 5201     		lsls	r2, r2, #5
 417 0044 9342     		cmp	r3, r2
 418 0046 12D0     		beq	.L32
 419              	.L23:
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
ARM GAS  /tmp/ccsKZFTZ.s 			page 72


 420              		.loc 1 1308 0
 421 0048 0F4B     		ldr	r3, .L33
 422 004a 4366     		str	r3, [r0, #100]
 423              	.L24:
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 424              		.loc 1 1311 0
 425 004c 0022     		movs	r2, #0
 426 004e 7023     		movs	r3, #112
 427 0050 C254     		strb	r2, [r0, r3]
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 428              		.loc 1 1314 0
 429 0052 0268     		ldr	r2, [r0]
 430 0054 1368     		ldr	r3, [r2]
 431 0056 8021     		movs	r1, #128
 432 0058 0B43     		orrs	r3, r1
 433 005a 1360     		str	r3, [r2]
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 434              		.loc 1 1316 0
 435 005c 0020     		movs	r0, #0
 436              	.LVL20:
 437 005e D4E7     		b	.L21
 438              	.LVL21:
 439              	.L31:
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 440              		.loc 1 1283 0 discriminator 1
 441 0060 0469     		ldr	r4, [r0, #16]
 442 0062 002C     		cmp	r4, #0
 443 0064 DBD1     		bne	.L22
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 444              		.loc 1 1285 0
 445 0066 CC07     		lsls	r4, r1, #31
 446 0068 D9D5     		bpl	.L22
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 447              		.loc 1 1287 0
 448 006a 0120     		movs	r0, #1
 449              	.LVL22:
 450 006c CDE7     		b	.L21
 451              	.LVL23:
 452              	.L32:
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 453              		.loc 1 1302 0 discriminator 1
 454 006e 0369     		ldr	r3, [r0, #16]
 455 0070 002B     		cmp	r3, #0
 456 0072 E9D1     		bne	.L23
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 457              		.loc 1 1304 0
 458 0074 054B     		ldr	r3, .L33+4
 459 0076 4366     		str	r3, [r0, #100]
 460 0078 E8E7     		b	.L24
 461              	.LVL24:
 462              	.L26:
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 463              		.loc 1 1277 0
 464 007a 0120     		movs	r0, #1
 465              	.LVL25:
 466 007c C5E7     		b	.L21
 467              	.LVL26:
ARM GAS  /tmp/ccsKZFTZ.s 			page 73


 468              	.L27:
 469 007e 0120     		movs	r0, #1
 470              	.LVL27:
 471 0080 C3E7     		b	.L21
 472              	.LVL28:
 473              	.L29:
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 474              		.loc 1 1291 0
 475 0082 0220     		movs	r0, #2
 476              	.LVL29:
 477 0084 C1E7     		b	.L21
 478              	.L34:
 479 0086 C046     		.align	2
 480              	.L33:
 481 0088 00000000 		.word	UART_TxISR_8BIT
 482 008c 00000000 		.word	UART_TxISR_16BIT
 483              		.cfi_endproc
 484              	.LFE49:
 486              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 487              		.align	1
 488              		.global	HAL_UART_Receive_IT
 489              		.syntax unified
 490              		.code	16
 491              		.thumb_func
 492              		.fpu softvfp
 494              	HAL_UART_Receive_IT:
 495              	.LFB50:
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 496              		.loc 1 1339 0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500              	.LVL30:
 501 0000 30B5     		push	{r4, r5, lr}
 502              	.LCFI2:
 503              		.cfi_def_cfa_offset 12
 504              		.cfi_offset 4, -12
 505              		.cfi_offset 5, -8
 506              		.cfi_offset 14, -4
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 507              		.loc 1 1341 0
 508 0002 836F     		ldr	r3, [r0, #120]
 509 0004 202B     		cmp	r3, #32
 510 0006 01D0     		beq	.L52
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 511              		.loc 1 1394 0
 512 0008 0220     		movs	r0, #2
 513              	.LVL31:
 514              	.L36:
1396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 515              		.loc 1 1396 0
 516              		@ sp needed
 517 000a 30BD     		pop	{r4, r5, pc}
 518              	.LVL32:
 519              	.L52:
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 520              		.loc 1 1343 0
ARM GAS  /tmp/ccsKZFTZ.s 			page 74


 521 000c 0029     		cmp	r1, #0
 522 000e 69D0     		beq	.L48
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 523              		.loc 1 1343 0 is_stmt 0 discriminator 1
 524 0010 002A     		cmp	r2, #0
 525 0012 69D0     		beq	.L49
1351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 526              		.loc 1 1351 0 is_stmt 1
 527 0014 8368     		ldr	r3, [r0, #8]
 528 0016 8024     		movs	r4, #128
 529 0018 6401     		lsls	r4, r4, #5
 530 001a A342     		cmp	r3, r4
 531 001c 1AD0     		beq	.L53
 532              	.L37:
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 533              		.loc 1 1359 0
 534 001e 7024     		movs	r4, #112
 535 0020 045D     		ldrb	r4, [r0, r4]
 536 0022 012C     		cmp	r4, #1
 537 0024 62D0     		beq	.L51
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 538              		.loc 1 1359 0 is_stmt 0 discriminator 2
 539 0026 0125     		movs	r5, #1
 540 0028 7024     		movs	r4, #112
 541 002a 0555     		strb	r5, [r0, r4]
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize  = Size;
 542              		.loc 1 1361 0 is_stmt 1 discriminator 2
 543 002c 4165     		str	r1, [r0, #84]
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 544              		.loc 1 1362 0 discriminator 2
 545 002e 5821     		movs	r1, #88
 546              	.LVL33:
 547 0030 4252     		strh	r2, [r0, r1]
 548              	.LVL34:
1363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxISR       = NULL;
 549              		.loc 1 1363 0 discriminator 2
 550 0032 0231     		adds	r1, r1, #2
 551 0034 4252     		strh	r2, [r0, r1]
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 552              		.loc 1 1364 0 discriminator 2
 553 0036 0022     		movs	r2, #0
 554              	.LVL35:
 555 0038 0266     		str	r2, [r0, #96]
 556              	.LVL36:
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 557              		.loc 1 1367 0 discriminator 2
 558 003a 8022     		movs	r2, #128
 559 003c 5201     		lsls	r2, r2, #5
 560 003e 9342     		cmp	r3, r2
 561 0040 0FD0     		beq	.L54
 562 0042 002B     		cmp	r3, #0
 563 0044 1CD1     		bne	.L41
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 564              		.loc 1 1367 0 is_stmt 0 discriminator 5
 565 0046 0369     		ldr	r3, [r0, #16]
 566 0048 002B     		cmp	r3, #0
 567 004a 15D1     		bne	.L42
ARM GAS  /tmp/ccsKZFTZ.s 			page 75


1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 568              		.loc 1 1367 0 discriminator 7
 569 004c FF22     		movs	r2, #255
 570 004e 5C33     		adds	r3, r3, #92
 571 0050 C252     		strh	r2, [r0, r3]
 572 0052 1CE0     		b	.L40
 573              	.LVL37:
 574              	.L53:
1351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 575              		.loc 1 1351 0 is_stmt 1 discriminator 1
 576 0054 0469     		ldr	r4, [r0, #16]
 577 0056 002C     		cmp	r4, #0
 578 0058 E1D1     		bne	.L37
1353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 579              		.loc 1 1353 0
 580 005a CC07     		lsls	r4, r1, #31
 581 005c DFD5     		bpl	.L37
1355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 582              		.loc 1 1355 0
 583 005e 0120     		movs	r0, #1
 584              	.LVL38:
 585 0060 D3E7     		b	.L36
 586              	.LVL39:
 587              	.L54:
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 588              		.loc 1 1367 0 discriminator 1
 589 0062 0369     		ldr	r3, [r0, #16]
 590 0064 002B     		cmp	r3, #0
 591 0066 03D1     		bne	.L39
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 592              		.loc 1 1367 0 is_stmt 0 discriminator 3
 593 0068 214A     		ldr	r2, .L57
 594 006a 5C33     		adds	r3, r3, #92
 595 006c C252     		strh	r2, [r0, r3]
 596 006e 0EE0     		b	.L40
 597              	.L39:
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 598              		.loc 1 1367 0 discriminator 4
 599 0070 FF22     		movs	r2, #255
 600 0072 5C23     		movs	r3, #92
 601 0074 C252     		strh	r2, [r0, r3]
 602 0076 0AE0     		b	.L40
 603              	.L42:
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 604              		.loc 1 1367 0 discriminator 8
 605 0078 7F22     		movs	r2, #127
 606 007a 5C23     		movs	r3, #92
 607 007c C252     		strh	r2, [r0, r3]
 608 007e 06E0     		b	.L40
 609              	.L41:
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 610              		.loc 1 1367 0 discriminator 6
 611 0080 8022     		movs	r2, #128
 612 0082 5205     		lsls	r2, r2, #21
 613 0084 9342     		cmp	r3, r2
 614 0086 1CD0     		beq	.L55
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccsKZFTZ.s 			page 76


 615              		.loc 1 1367 0 discriminator 10
 616 0088 0022     		movs	r2, #0
 617 008a 5C23     		movs	r3, #92
 618 008c C252     		strh	r2, [r0, r3]
 619              	.L40:
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 620              		.loc 1 1369 0 is_stmt 1
 621 008e 0023     		movs	r3, #0
 622 0090 C367     		str	r3, [r0, #124]
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 623              		.loc 1 1370 0
 624 0092 2233     		adds	r3, r3, #34
 625 0094 8367     		str	r3, [r0, #120]
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 626              		.loc 1 1373 0
 627 0096 0268     		ldr	r2, [r0]
 628 0098 9368     		ldr	r3, [r2, #8]
 629 009a 0121     		movs	r1, #1
 630 009c 0B43     		orrs	r3, r1
 631 009e 9360     		str	r3, [r2, #8]
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 632              		.loc 1 1376 0
 633 00a0 8023     		movs	r3, #128
 634 00a2 5B01     		lsls	r3, r3, #5
 635 00a4 8268     		ldr	r2, [r0, #8]
 636 00a6 9A42     		cmp	r2, r3
 637 00a8 16D0     		beq	.L56
 638              	.L45:
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 639              		.loc 1 1382 0
 640 00aa 124B     		ldr	r3, .L57+4
 641 00ac 0366     		str	r3, [r0, #96]
 642              	.L46:
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 643              		.loc 1 1385 0
 644 00ae 0022     		movs	r2, #0
 645 00b0 7023     		movs	r3, #112
 646 00b2 C254     		strb	r2, [r0, r3]
1388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 647              		.loc 1 1388 0
 648 00b4 0268     		ldr	r2, [r0]
 649 00b6 1168     		ldr	r1, [r2]
 650 00b8 B033     		adds	r3, r3, #176
 651 00ba 0B43     		orrs	r3, r1
 652 00bc 1360     		str	r3, [r2]
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 653              		.loc 1 1390 0
 654 00be 0020     		movs	r0, #0
 655              	.LVL40:
 656 00c0 A3E7     		b	.L36
 657              	.LVL41:
 658              	.L55:
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 659              		.loc 1 1367 0 discriminator 9
 660 00c2 0369     		ldr	r3, [r0, #16]
 661 00c4 002B     		cmp	r3, #0
 662 00c6 03D1     		bne	.L44
ARM GAS  /tmp/ccsKZFTZ.s 			page 77


1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 663              		.loc 1 1367 0 is_stmt 0 discriminator 11
 664 00c8 7F22     		movs	r2, #127
 665 00ca 5C33     		adds	r3, r3, #92
 666 00cc C252     		strh	r2, [r0, r3]
 667 00ce DEE7     		b	.L40
 668              	.L44:
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 669              		.loc 1 1367 0 discriminator 12
 670 00d0 3F22     		movs	r2, #63
 671 00d2 5C23     		movs	r3, #92
 672 00d4 C252     		strh	r2, [r0, r3]
 673 00d6 DAE7     		b	.L40
 674              	.L56:
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 675              		.loc 1 1376 0 is_stmt 1 discriminator 1
 676 00d8 0369     		ldr	r3, [r0, #16]
 677 00da 002B     		cmp	r3, #0
 678 00dc E5D1     		bne	.L45
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 679              		.loc 1 1378 0
 680 00de 064B     		ldr	r3, .L57+8
 681 00e0 0366     		str	r3, [r0, #96]
 682 00e2 E4E7     		b	.L46
 683              	.LVL42:
 684              	.L48:
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 685              		.loc 1 1345 0
 686 00e4 0120     		movs	r0, #1
 687              	.LVL43:
 688 00e6 90E7     		b	.L36
 689              	.LVL44:
 690              	.L49:
 691 00e8 0120     		movs	r0, #1
 692              	.LVL45:
 693 00ea 8EE7     		b	.L36
 694              	.LVL46:
 695              	.L51:
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 696              		.loc 1 1359 0
 697 00ec 0220     		movs	r0, #2
 698              	.LVL47:
 699 00ee 8CE7     		b	.L36
 700              	.L58:
 701              		.align	2
 702              	.L57:
 703 00f0 FF010000 		.word	511
 704 00f4 00000000 		.word	UART_RxISR_8BIT
 705 00f8 00000000 		.word	UART_RxISR_16BIT
 706              		.cfi_endproc
 707              	.LFE50:
 709              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 710              		.align	1
 711              		.global	HAL_UART_Transmit_DMA
 712              		.syntax unified
 713              		.code	16
 714              		.thumb_func
ARM GAS  /tmp/ccsKZFTZ.s 			page 78


 715              		.fpu softvfp
 717              	HAL_UART_Transmit_DMA:
 718              	.LFB51:
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 719              		.loc 1 1413 0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723              	.LVL48:
 724 0000 10B5     		push	{r4, lr}
 725              	.LCFI3:
 726              		.cfi_def_cfa_offset 8
 727              		.cfi_offset 4, -8
 728              		.cfi_offset 14, -4
 729 0002 0400     		movs	r4, r0
1415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 730              		.loc 1 1415 0
 731 0004 406F     		ldr	r0, [r0, #116]
 732              	.LVL49:
 733 0006 2028     		cmp	r0, #32
 734 0008 01D0     		beq	.L68
1483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 735              		.loc 1 1483 0
 736 000a 0220     		movs	r0, #2
 737              	.LVL50:
 738              	.L60:
1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 739              		.loc 1 1485 0
 740              		@ sp needed
 741              	.LVL51:
 742 000c 10BD     		pop	{r4, pc}
 743              	.LVL52:
 744              	.L68:
1417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 745              		.loc 1 1417 0
 746 000e 0029     		cmp	r1, #0
 747 0010 4BD0     		beq	.L64
1417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 748              		.loc 1 1417 0 is_stmt 0 discriminator 1
 749 0012 002A     		cmp	r2, #0
 750 0014 4BD0     		beq	.L65
1425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 751              		.loc 1 1425 0 is_stmt 1
 752 0016 8023     		movs	r3, #128
 753 0018 5B01     		lsls	r3, r3, #5
 754 001a A068     		ldr	r0, [r4, #8]
 755 001c 9842     		cmp	r0, r3
 756 001e 34D0     		beq	.L69
 757              	.L61:
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 758              		.loc 1 1433 0
 759 0020 7023     		movs	r3, #112
 760 0022 E35C     		ldrb	r3, [r4, r3]
 761 0024 012B     		cmp	r3, #1
 762 0026 44D0     		beq	.L67
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 763              		.loc 1 1433 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/ccsKZFTZ.s 			page 79


 764 0028 0120     		movs	r0, #1
 765 002a 7023     		movs	r3, #112
 766 002c E054     		strb	r0, [r4, r3]
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize  = Size;
 767              		.loc 1 1435 0 is_stmt 1 discriminator 2
 768 002e E164     		str	r1, [r4, #76]
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 769              		.loc 1 1436 0 discriminator 2
 770 0030 203B     		subs	r3, r3, #32
 771 0032 E252     		strh	r2, [r4, r3]
1437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 772              		.loc 1 1437 0 discriminator 2
 773 0034 0233     		adds	r3, r3, #2
 774 0036 E252     		strh	r2, [r4, r3]
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 775              		.loc 1 1439 0 discriminator 2
 776 0038 0023     		movs	r3, #0
 777 003a E367     		str	r3, [r4, #124]
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 778              		.loc 1 1440 0 discriminator 2
 779 003c 2133     		adds	r3, r3, #33
 780 003e 6367     		str	r3, [r4, #116]
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 781              		.loc 1 1442 0 discriminator 2
 782 0040 A36E     		ldr	r3, [r4, #104]
 783 0042 002B     		cmp	r3, #0
 784 0044 14D0     		beq	.L62
1445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 785              		.loc 1 1445 0
 786 0046 1C49     		ldr	r1, .L71
 787              	.LVL53:
 788 0048 9962     		str	r1, [r3, #40]
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 789              		.loc 1 1448 0
 790 004a A36E     		ldr	r3, [r4, #104]
 791 004c 1B49     		ldr	r1, .L71+4
 792 004e D962     		str	r1, [r3, #44]
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 793              		.loc 1 1451 0
 794 0050 A36E     		ldr	r3, [r4, #104]
 795 0052 1B49     		ldr	r1, .L71+8
 796 0054 1963     		str	r1, [r3, #48]
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 797              		.loc 1 1454 0
 798 0056 A36E     		ldr	r3, [r4, #104]
 799 0058 0021     		movs	r1, #0
 800 005a 5963     		str	r1, [r3, #52]
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 801              		.loc 1 1457 0
 802 005c 2168     		ldr	r1, [r4]
 803 005e 2831     		adds	r1, r1, #40
 804 0060 1300     		movs	r3, r2
 805 0062 0A00     		movs	r2, r1
 806              	.LVL54:
 807 0064 E16C     		ldr	r1, [r4, #76]
 808 0066 A06E     		ldr	r0, [r4, #104]
 809 0068 FFF7FEFF 		bl	HAL_DMA_Start_IT
ARM GAS  /tmp/ccsKZFTZ.s 			page 80


 810              	.LVL55:
 811 006c 0028     		cmp	r0, #0
 812 006e 13D1     		bne	.L70
 813              	.L62:
1471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 814              		.loc 1 1471 0
 815 0070 2368     		ldr	r3, [r4]
 816 0072 4022     		movs	r2, #64
 817 0074 1A62     		str	r2, [r3, #32]
1473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 818              		.loc 1 1473 0
 819 0076 0022     		movs	r2, #0
 820 0078 7023     		movs	r3, #112
 821 007a E254     		strb	r2, [r4, r3]
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 822              		.loc 1 1477 0
 823 007c 2268     		ldr	r2, [r4]
 824 007e 9368     		ldr	r3, [r2, #8]
 825 0080 8021     		movs	r1, #128
 826 0082 0B43     		orrs	r3, r1
 827 0084 9360     		str	r3, [r2, #8]
1479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 828              		.loc 1 1479 0
 829 0086 0020     		movs	r0, #0
 830 0088 C0E7     		b	.L60
 831              	.LVL56:
 832              	.L69:
1425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 833              		.loc 1 1425 0 discriminator 1
 834 008a 2369     		ldr	r3, [r4, #16]
 835 008c 002B     		cmp	r3, #0
 836 008e C7D1     		bne	.L61
1427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 837              		.loc 1 1427 0
 838 0090 CB07     		lsls	r3, r1, #31
 839 0092 C5D5     		bpl	.L61
1429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 840              		.loc 1 1429 0
 841 0094 0120     		movs	r0, #1
 842 0096 B9E7     		b	.L60
 843              	.LVL57:
 844              	.L70:
1460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 845              		.loc 1 1460 0
 846 0098 1023     		movs	r3, #16
 847 009a E367     		str	r3, [r4, #124]
1462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 848              		.loc 1 1462 0
 849 009c 0022     		movs	r2, #0
 850 009e 6033     		adds	r3, r3, #96
 851 00a0 E254     		strb	r2, [r4, r3]
1465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 852              		.loc 1 1465 0
 853 00a2 503B     		subs	r3, r3, #80
 854 00a4 6367     		str	r3, [r4, #116]
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 855              		.loc 1 1467 0
ARM GAS  /tmp/ccsKZFTZ.s 			page 81


 856 00a6 0120     		movs	r0, #1
 857 00a8 B0E7     		b	.L60
 858              	.LVL58:
 859              	.L64:
1419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 860              		.loc 1 1419 0
 861 00aa 0120     		movs	r0, #1
 862 00ac AEE7     		b	.L60
 863              	.L65:
 864 00ae 0120     		movs	r0, #1
 865 00b0 ACE7     		b	.L60
 866              	.L67:
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 867              		.loc 1 1433 0
 868 00b2 0220     		movs	r0, #2
 869 00b4 AAE7     		b	.L60
 870              	.L72:
 871 00b6 C046     		.align	2
 872              	.L71:
 873 00b8 00000000 		.word	UART_DMATransmitCplt
 874 00bc 00000000 		.word	UART_DMATxHalfCplt
 875 00c0 00000000 		.word	UART_DMAError
 876              		.cfi_endproc
 877              	.LFE51:
 879              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 880              		.align	1
 881              		.global	HAL_UART_Receive_DMA
 882              		.syntax unified
 883              		.code	16
 884              		.thumb_func
 885              		.fpu softvfp
 887              	HAL_UART_Receive_DMA:
 888              	.LFB52:
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 889              		.loc 1 1504 0
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 0
 892              		@ frame_needed = 0, uses_anonymous_args = 0
 893              	.LVL59:
 894 0000 10B5     		push	{r4, lr}
 895              	.LCFI4:
 896              		.cfi_def_cfa_offset 8
 897              		.cfi_offset 4, -8
 898              		.cfi_offset 14, -4
 899 0002 0400     		movs	r4, r0
1506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 900              		.loc 1 1506 0
 901 0004 806F     		ldr	r0, [r0, #120]
 902              	.LVL60:
 903 0006 2028     		cmp	r0, #32
 904 0008 01D0     		beq	.L82
1576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 905              		.loc 1 1576 0
 906 000a 0220     		movs	r0, #2
 907              	.LVL61:
 908              	.L74:
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccsKZFTZ.s 			page 82


 909              		.loc 1 1578 0
 910              		@ sp needed
 911              	.LVL62:
 912 000c 10BD     		pop	{r4, pc}
 913              	.LVL63:
 914              	.L82:
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 915              		.loc 1 1508 0
 916 000e 0029     		cmp	r1, #0
 917 0010 4FD0     		beq	.L78
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 918              		.loc 1 1508 0 is_stmt 0 discriminator 1
 919 0012 002A     		cmp	r2, #0
 920 0014 4FD0     		beq	.L79
1516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 921              		.loc 1 1516 0 is_stmt 1
 922 0016 8023     		movs	r3, #128
 923 0018 5B01     		lsls	r3, r3, #5
 924 001a A068     		ldr	r0, [r4, #8]
 925 001c 9842     		cmp	r0, r3
 926 001e 38D0     		beq	.L83
 927              	.L75:
1524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 928              		.loc 1 1524 0
 929 0020 7023     		movs	r3, #112
 930 0022 E35C     		ldrb	r3, [r4, r3]
 931 0024 012B     		cmp	r3, #1
 932 0026 48D0     		beq	.L81
1524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 933              		.loc 1 1524 0 is_stmt 0 discriminator 2
 934 0028 0120     		movs	r0, #1
 935 002a 7023     		movs	r3, #112
 936 002c E054     		strb	r0, [r4, r3]
1526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 937              		.loc 1 1526 0 is_stmt 1 discriminator 2
 938 002e 6165     		str	r1, [r4, #84]
1527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 939              		.loc 1 1527 0 discriminator 2
 940 0030 183B     		subs	r3, r3, #24
 941 0032 E252     		strh	r2, [r4, r3]
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 942              		.loc 1 1529 0 discriminator 2
 943 0034 0023     		movs	r3, #0
 944 0036 E367     		str	r3, [r4, #124]
1530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 945              		.loc 1 1530 0 discriminator 2
 946 0038 2233     		adds	r3, r3, #34
 947 003a A367     		str	r3, [r4, #120]
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 948              		.loc 1 1532 0 discriminator 2
 949 003c E36E     		ldr	r3, [r4, #108]
 950 003e 002B     		cmp	r3, #0
 951 0040 13D0     		beq	.L76
1535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 952              		.loc 1 1535 0
 953 0042 1F49     		ldr	r1, .L85
 954              	.LVL64:
ARM GAS  /tmp/ccsKZFTZ.s 			page 83


 955 0044 9962     		str	r1, [r3, #40]
1538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 956              		.loc 1 1538 0
 957 0046 E36E     		ldr	r3, [r4, #108]
 958 0048 1E49     		ldr	r1, .L85+4
 959 004a D962     		str	r1, [r3, #44]
1541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 960              		.loc 1 1541 0
 961 004c E36E     		ldr	r3, [r4, #108]
 962 004e 1E49     		ldr	r1, .L85+8
 963 0050 1963     		str	r1, [r3, #48]
1544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 964              		.loc 1 1544 0
 965 0052 E36E     		ldr	r3, [r4, #108]
 966 0054 0021     		movs	r1, #0
 967 0056 5963     		str	r1, [r3, #52]
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 968              		.loc 1 1547 0
 969 0058 2168     		ldr	r1, [r4]
 970 005a 2431     		adds	r1, r1, #36
 971 005c 1300     		movs	r3, r2
 972 005e 626D     		ldr	r2, [r4, #84]
 973              	.LVL65:
 974 0060 E06E     		ldr	r0, [r4, #108]
 975 0062 FFF7FEFF 		bl	HAL_DMA_Start_IT
 976              	.LVL66:
 977 0066 0028     		cmp	r0, #0
 978 0068 1AD1     		bne	.L84
 979              	.L76:
1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 980              		.loc 1 1560 0
 981 006a 0022     		movs	r2, #0
 982 006c 7023     		movs	r3, #112
 983 006e E254     		strb	r2, [r4, r3]
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 984              		.loc 1 1563 0
 985 0070 2268     		ldr	r2, [r4]
 986 0072 1168     		ldr	r1, [r2]
 987 0074 9033     		adds	r3, r3, #144
 988 0076 0B43     		orrs	r3, r1
 989 0078 1360     		str	r3, [r2]
1566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 990              		.loc 1 1566 0
 991 007a 2268     		ldr	r2, [r4]
 992 007c 9368     		ldr	r3, [r2, #8]
 993 007e 0121     		movs	r1, #1
 994 0080 0B43     		orrs	r3, r1
 995 0082 9360     		str	r3, [r2, #8]
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 996              		.loc 1 1570 0
 997 0084 2268     		ldr	r2, [r4]
 998 0086 9368     		ldr	r3, [r2, #8]
 999 0088 3F31     		adds	r1, r1, #63
 1000 008a 0B43     		orrs	r3, r1
 1001 008c 9360     		str	r3, [r2, #8]
1572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1002              		.loc 1 1572 0
ARM GAS  /tmp/ccsKZFTZ.s 			page 84


 1003 008e 0020     		movs	r0, #0
 1004 0090 BCE7     		b	.L74
 1005              	.LVL67:
 1006              	.L83:
1516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1007              		.loc 1 1516 0 discriminator 1
 1008 0092 2369     		ldr	r3, [r4, #16]
 1009 0094 002B     		cmp	r3, #0
 1010 0096 C3D1     		bne	.L75
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 1011              		.loc 1 1518 0
 1012 0098 CB07     		lsls	r3, r1, #31
 1013 009a C1D5     		bpl	.L75
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 1014              		.loc 1 1520 0
 1015 009c 0120     		movs	r0, #1
 1016 009e B5E7     		b	.L74
 1017              	.LVL68:
 1018              	.L84:
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1019              		.loc 1 1550 0
 1020 00a0 1023     		movs	r3, #16
 1021 00a2 E367     		str	r3, [r4, #124]
1552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1022              		.loc 1 1552 0
 1023 00a4 0022     		movs	r2, #0
 1024 00a6 6033     		adds	r3, r3, #96
 1025 00a8 E254     		strb	r2, [r4, r3]
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1026              		.loc 1 1555 0
 1027 00aa 503B     		subs	r3, r3, #80
 1028 00ac 6367     		str	r3, [r4, #116]
1557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 1029              		.loc 1 1557 0
 1030 00ae 0120     		movs	r0, #1
 1031 00b0 ACE7     		b	.L74
 1032              	.LVL69:
 1033              	.L78:
1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1034              		.loc 1 1510 0
 1035 00b2 0120     		movs	r0, #1
 1036 00b4 AAE7     		b	.L74
 1037              	.L79:
 1038 00b6 0120     		movs	r0, #1
 1039 00b8 A8E7     		b	.L74
 1040              	.L81:
1524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1041              		.loc 1 1524 0
 1042 00ba 0220     		movs	r0, #2
 1043 00bc A6E7     		b	.L74
 1044              	.L86:
 1045 00be C046     		.align	2
 1046              	.L85:
 1047 00c0 00000000 		.word	UART_DMAReceiveCplt
 1048 00c4 00000000 		.word	UART_DMARxHalfCplt
 1049 00c8 00000000 		.word	UART_DMAError
 1050              		.cfi_endproc
ARM GAS  /tmp/ccsKZFTZ.s 			page 85


 1051              	.LFE52:
 1053              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1054              		.align	1
 1055              		.global	HAL_UART_DMAPause
 1056              		.syntax unified
 1057              		.code	16
 1058              		.thumb_func
 1059              		.fpu softvfp
 1061              	HAL_UART_DMAPause:
 1062              	.LFB53:
1586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 1063              		.loc 1 1586 0
 1064              		.cfi_startproc
 1065              		@ args = 0, pretend = 0, frame = 0
 1066              		@ frame_needed = 0, uses_anonymous_args = 0
 1067              	.LVL70:
 1068 0000 10B5     		push	{r4, lr}
 1069              	.LCFI5:
 1070              		.cfi_def_cfa_offset 8
 1071              		.cfi_offset 4, -8
 1072              		.cfi_offset 14, -4
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1073              		.loc 1 1587 0
 1074 0002 416F     		ldr	r1, [r0, #116]
 1075              	.LVL71:
1588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1076              		.loc 1 1588 0
 1077 0004 826F     		ldr	r2, [r0, #120]
 1078              	.LVL72:
1590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1079              		.loc 1 1590 0
 1080 0006 7023     		movs	r3, #112
 1081 0008 C35C     		ldrb	r3, [r0, r3]
 1082 000a 012B     		cmp	r3, #1
 1083 000c 28D0     		beq	.L91
1590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1084              		.loc 1 1590 0 is_stmt 0 discriminator 2
 1085 000e 0124     		movs	r4, #1
 1086 0010 7023     		movs	r3, #112
 1087 0012 C454     		strb	r4, [r0, r3]
1592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1088              		.loc 1 1592 0 is_stmt 1 discriminator 2
 1089 0014 0368     		ldr	r3, [r0]
 1090 0016 9C68     		ldr	r4, [r3, #8]
 1091 0018 2406     		lsls	r4, r4, #24
 1092 001a 01D5     		bpl	.L89
1592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1093              		.loc 1 1592 0 is_stmt 0 discriminator 1
 1094 001c 2129     		cmp	r1, #33
 1095 001e 0AD0     		beq	.L92
 1096              	.LVL73:
 1097              	.L89:
1598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1098              		.loc 1 1598 0 is_stmt 1
 1099 0020 0368     		ldr	r3, [r0]
 1100 0022 9968     		ldr	r1, [r3, #8]
 1101 0024 4906     		lsls	r1, r1, #25
ARM GAS  /tmp/ccsKZFTZ.s 			page 86


 1102 0026 01D5     		bpl	.L90
1598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1103              		.loc 1 1598 0 is_stmt 0 discriminator 1
 1104 0028 222A     		cmp	r2, #34
 1105 002a 09D0     		beq	.L93
 1106              	.LVL74:
 1107              	.L90:
1609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1108              		.loc 1 1609 0 is_stmt 1
 1109 002c 0022     		movs	r2, #0
 1110 002e 7023     		movs	r3, #112
 1111 0030 C254     		strb	r2, [r0, r3]
1611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1112              		.loc 1 1611 0
 1113 0032 0020     		movs	r0, #0
 1114              	.LVL75:
 1115              	.L88:
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1116              		.loc 1 1612 0
 1117              		@ sp needed
 1118 0034 10BD     		pop	{r4, pc}
 1119              	.LVL76:
 1120              	.L92:
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1121              		.loc 1 1596 0
 1122 0036 9968     		ldr	r1, [r3, #8]
 1123              	.LVL77:
 1124 0038 8024     		movs	r4, #128
 1125 003a A143     		bics	r1, r4
 1126 003c 9960     		str	r1, [r3, #8]
 1127 003e EFE7     		b	.L89
 1128              	.L93:
1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1129              		.loc 1 1602 0
 1130 0040 1A68     		ldr	r2, [r3]
 1131              	.LVL78:
 1132 0042 0849     		ldr	r1, .L94
 1133 0044 0A40     		ands	r2, r1
 1134 0046 1A60     		str	r2, [r3]
1603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1135              		.loc 1 1603 0
 1136 0048 0268     		ldr	r2, [r0]
 1137 004a 9368     		ldr	r3, [r2, #8]
 1138 004c 0331     		adds	r1, r1, #3
 1139 004e FF31     		adds	r1, r1, #255
 1140 0050 8B43     		bics	r3, r1
 1141 0052 9360     		str	r3, [r2, #8]
1606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1142              		.loc 1 1606 0
 1143 0054 0268     		ldr	r2, [r0]
 1144 0056 9368     		ldr	r3, [r2, #8]
 1145 0058 3F31     		adds	r1, r1, #63
 1146 005a 8B43     		bics	r3, r1
 1147 005c 9360     		str	r3, [r2, #8]
 1148 005e E5E7     		b	.L90
 1149              	.LVL79:
 1150              	.L91:
ARM GAS  /tmp/ccsKZFTZ.s 			page 87


1590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1151              		.loc 1 1590 0
 1152 0060 0220     		movs	r0, #2
 1153              	.LVL80:
 1154 0062 E7E7     		b	.L88
 1155              	.L95:
 1156              		.align	2
 1157              	.L94:
 1158 0064 FFFEFFFF 		.word	-257
 1159              		.cfi_endproc
 1160              	.LFE53:
 1162              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1163              		.align	1
 1164              		.global	HAL_UART_DMAResume
 1165              		.syntax unified
 1166              		.code	16
 1167              		.thumb_func
 1168              		.fpu softvfp
 1170              	HAL_UART_DMAResume:
 1171              	.LFB54:
1620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 1172              		.loc 1 1620 0
 1173              		.cfi_startproc
 1174              		@ args = 0, pretend = 0, frame = 0
 1175              		@ frame_needed = 0, uses_anonymous_args = 0
 1176              		@ link register save eliminated.
 1177              	.LVL81:
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1178              		.loc 1 1621 0
 1179 0000 7023     		movs	r3, #112
 1180 0002 C35C     		ldrb	r3, [r0, r3]
 1181 0004 012B     		cmp	r3, #1
 1182 0006 27D0     		beq	.L100
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1183              		.loc 1 1621 0 is_stmt 0 discriminator 2
 1184 0008 0122     		movs	r2, #1
 1185 000a 7023     		movs	r3, #112
 1186 000c C254     		strb	r2, [r0, r3]
1623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1187              		.loc 1 1623 0 is_stmt 1 discriminator 2
 1188 000e 436F     		ldr	r3, [r0, #116]
 1189 0010 212B     		cmp	r3, #33
 1190 0012 07D0     		beq	.L101
 1191              	.L98:
1628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1192              		.loc 1 1628 0
 1193 0014 836F     		ldr	r3, [r0, #120]
 1194 0016 222B     		cmp	r3, #34
 1195 0018 0AD0     		beq	.L102
 1196              	.L99:
1641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1197              		.loc 1 1641 0
 1198 001a 0022     		movs	r2, #0
 1199 001c 7023     		movs	r3, #112
 1200 001e C254     		strb	r2, [r0, r3]
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1201              		.loc 1 1643 0
ARM GAS  /tmp/ccsKZFTZ.s 			page 88


 1202 0020 0020     		movs	r0, #0
 1203              	.LVL82:
 1204              	.L97:
1644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1205              		.loc 1 1644 0
 1206              		@ sp needed
 1207 0022 7047     		bx	lr
 1208              	.LVL83:
 1209              	.L101:
1626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1210              		.loc 1 1626 0
 1211 0024 0268     		ldr	r2, [r0]
 1212 0026 9368     		ldr	r3, [r2, #8]
 1213 0028 8021     		movs	r1, #128
 1214 002a 0B43     		orrs	r3, r1
 1215 002c 9360     		str	r3, [r2, #8]
 1216 002e F1E7     		b	.L98
 1217              	.L102:
1631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1218              		.loc 1 1631 0
 1219 0030 0368     		ldr	r3, [r0]
 1220 0032 0822     		movs	r2, #8
 1221 0034 1A62     		str	r2, [r3, #32]
1634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1222              		.loc 1 1634 0
 1223 0036 0268     		ldr	r2, [r0]
 1224 0038 1168     		ldr	r1, [r2]
 1225 003a 8023     		movs	r3, #128
 1226 003c 5B00     		lsls	r3, r3, #1
 1227 003e 0B43     		orrs	r3, r1
 1228 0040 1360     		str	r3, [r2]
1635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1229              		.loc 1 1635 0
 1230 0042 0268     		ldr	r2, [r0]
 1231 0044 9368     		ldr	r3, [r2, #8]
 1232 0046 0121     		movs	r1, #1
 1233 0048 0B43     		orrs	r3, r1
 1234 004a 9360     		str	r3, [r2, #8]
1638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1235              		.loc 1 1638 0
 1236 004c 0268     		ldr	r2, [r0]
 1237 004e 9368     		ldr	r3, [r2, #8]
 1238 0050 3F31     		adds	r1, r1, #63
 1239 0052 0B43     		orrs	r3, r1
 1240 0054 9360     		str	r3, [r2, #8]
 1241 0056 E0E7     		b	.L99
 1242              	.L100:
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1243              		.loc 1 1621 0
 1244 0058 0220     		movs	r0, #2
 1245              	.LVL84:
 1246 005a E2E7     		b	.L97
 1247              		.cfi_endproc
 1248              	.LFE54:
 1250              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1251              		.align	1
 1252              		.global	HAL_UART_DMAStop
ARM GAS  /tmp/ccsKZFTZ.s 			page 89


 1253              		.syntax unified
 1254              		.code	16
 1255              		.thumb_func
 1256              		.fpu softvfp
 1258              	HAL_UART_DMAStop:
 1259              	.LFB55:
1652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1260              		.loc 1 1652 0
 1261              		.cfi_startproc
 1262              		@ args = 0, pretend = 0, frame = 0
 1263              		@ frame_needed = 0, uses_anonymous_args = 0
 1264              	.LVL85:
 1265 0000 70B5     		push	{r4, r5, r6, lr}
 1266              	.LCFI6:
 1267              		.cfi_def_cfa_offset 16
 1268              		.cfi_offset 4, -16
 1269              		.cfi_offset 5, -12
 1270              		.cfi_offset 6, -8
 1271              		.cfi_offset 14, -4
 1272 0002 0400     		movs	r4, r0
1660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1273              		.loc 1 1660 0
 1274 0004 416F     		ldr	r1, [r0, #116]
 1275              	.LVL86:
1661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1276              		.loc 1 1661 0
 1277 0006 856F     		ldr	r5, [r0, #120]
 1278              	.LVL87:
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1279              		.loc 1 1664 0
 1280 0008 0368     		ldr	r3, [r0]
 1281 000a 9A68     		ldr	r2, [r3, #8]
 1282 000c 1206     		lsls	r2, r2, #24
 1283 000e 01D5     		bpl	.L104
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1284              		.loc 1 1664 0 is_stmt 0 discriminator 1
 1285 0010 2129     		cmp	r1, #33
 1286 0012 07D0     		beq	.L110
 1287              	.LVL88:
 1288              	.L104:
1688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1289              		.loc 1 1688 0 is_stmt 1
 1290 0014 2368     		ldr	r3, [r4]
 1291 0016 9A68     		ldr	r2, [r3, #8]
 1292 0018 5206     		lsls	r2, r2, #25
 1293 001a 34D5     		bpl	.L108
1688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1294              		.loc 1 1688 0 is_stmt 0 discriminator 1
 1295 001c 222D     		cmp	r5, #34
 1296 001e 19D0     		beq	.L111
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1297              		.loc 1 1711 0 is_stmt 1
 1298 0020 0020     		movs	r0, #0
 1299 0022 31E0     		b	.L106
 1300              	.LVL89:
 1301              	.L110:
1667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccsKZFTZ.s 			page 90


 1302              		.loc 1 1667 0
 1303 0024 9A68     		ldr	r2, [r3, #8]
 1304 0026 5F31     		adds	r1, r1, #95
 1305              	.LVL90:
 1306 0028 8A43     		bics	r2, r1
 1307 002a 9A60     		str	r2, [r3, #8]
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1308              		.loc 1 1670 0
 1309 002c 806E     		ldr	r0, [r0, #104]
 1310              	.LVL91:
 1311 002e 0028     		cmp	r0, #0
 1312 0030 03D0     		beq	.L105
1672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 1313              		.loc 1 1672 0
 1314 0032 FFF7FEFF 		bl	HAL_DMA_Abort
 1315              	.LVL92:
 1316 0036 0028     		cmp	r0, #0
 1317 0038 03D1     		bne	.L112
 1318              	.L105:
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1319              		.loc 1 1684 0
 1320 003a 2000     		movs	r0, r4
 1321 003c FFF7FEFF 		bl	UART_EndTxTransfer
 1322              	.LVL93:
 1323 0040 E8E7     		b	.L104
 1324              	.L112:
1674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 1325              		.loc 1 1674 0
 1326 0042 A06E     		ldr	r0, [r4, #104]
 1327 0044 FFF7FEFF 		bl	HAL_DMA_GetError
 1328              	.LVL94:
 1329 0048 2028     		cmp	r0, #32
 1330 004a F6D1     		bne	.L105
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1331              		.loc 1 1677 0
 1332 004c 1023     		movs	r3, #16
 1333 004e E367     		str	r3, [r4, #124]
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
 1334              		.loc 1 1679 0
 1335 0050 1D38     		subs	r0, r0, #29
 1336 0052 19E0     		b	.L106
 1337              	.L111:
1691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1338              		.loc 1 1691 0
 1339 0054 9A68     		ldr	r2, [r3, #8]
 1340 0056 4021     		movs	r1, #64
 1341 0058 8A43     		bics	r2, r1
 1342 005a 9A60     		str	r2, [r3, #8]
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1343              		.loc 1 1694 0
 1344 005c E06E     		ldr	r0, [r4, #108]
 1345 005e 0028     		cmp	r0, #0
 1346 0060 03D0     		beq	.L107
1696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 1347              		.loc 1 1696 0
 1348 0062 FFF7FEFF 		bl	HAL_DMA_Abort
 1349              	.LVL95:
ARM GAS  /tmp/ccsKZFTZ.s 			page 91


 1350 0066 0028     		cmp	r0, #0
 1351 0068 04D1     		bne	.L113
 1352              	.L107:
1708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1353              		.loc 1 1708 0
 1354 006a 2000     		movs	r0, r4
 1355 006c FFF7FEFF 		bl	UART_EndRxTransfer
 1356              	.LVL96:
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1357              		.loc 1 1711 0
 1358 0070 0020     		movs	r0, #0
 1359 0072 09E0     		b	.L106
 1360              	.L113:
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 1361              		.loc 1 1698 0
 1362 0074 E06E     		ldr	r0, [r4, #108]
 1363 0076 FFF7FEFF 		bl	HAL_DMA_GetError
 1364              	.LVL97:
 1365 007a 2028     		cmp	r0, #32
 1366 007c F5D1     		bne	.L107
1701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1367              		.loc 1 1701 0
 1368 007e 1023     		movs	r3, #16
 1369 0080 E367     		str	r3, [r4, #124]
1703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
 1370              		.loc 1 1703 0
 1371 0082 1D38     		subs	r0, r0, #29
 1372 0084 00E0     		b	.L106
 1373              	.L108:
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1374              		.loc 1 1711 0
 1375 0086 0020     		movs	r0, #0
 1376              	.L106:
1712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1377              		.loc 1 1712 0
 1378              		@ sp needed
 1379              	.LVL98:
 1380              	.LVL99:
 1381 0088 70BD     		pop	{r4, r5, r6, pc}
 1382              		.cfi_endproc
 1383              	.LFE55:
 1385              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1386              		.align	1
 1387              		.global	HAL_UART_Abort
 1388              		.syntax unified
 1389              		.code	16
 1390              		.thumb_func
 1391              		.fpu softvfp
 1393              	HAL_UART_Abort:
 1394              	.LFB56:
1727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1395              		.loc 1 1727 0
 1396              		.cfi_startproc
 1397              		@ args = 0, pretend = 0, frame = 0
 1398              		@ frame_needed = 0, uses_anonymous_args = 0
 1399              	.LVL100:
 1400 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccsKZFTZ.s 			page 92


 1401              	.LCFI7:
 1402              		.cfi_def_cfa_offset 8
 1403              		.cfi_offset 4, -8
 1404              		.cfi_offset 14, -4
 1405 0002 0400     		movs	r4, r0
1729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1406              		.loc 1 1729 0
 1407 0004 0268     		ldr	r2, [r0]
 1408 0006 1368     		ldr	r3, [r2]
 1409 0008 2849     		ldr	r1, .L120
 1410 000a 0B40     		ands	r3, r1
 1411 000c 1360     		str	r3, [r2]
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1412              		.loc 1 1730 0
 1413 000e 0268     		ldr	r2, [r0]
 1414 0010 9368     		ldr	r3, [r2, #8]
 1415 0012 E331     		adds	r1, r1, #227
 1416 0014 FF31     		adds	r1, r1, #255
 1417 0016 8B43     		bics	r3, r1
 1418 0018 9360     		str	r3, [r2, #8]
1733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1419              		.loc 1 1733 0
 1420 001a 0368     		ldr	r3, [r0]
 1421 001c 9A68     		ldr	r2, [r3, #8]
 1422 001e 1206     		lsls	r2, r2, #24
 1423 0020 0DD5     		bpl	.L115
1735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1424              		.loc 1 1735 0
 1425 0022 9A68     		ldr	r2, [r3, #8]
 1426 0024 7F31     		adds	r1, r1, #127
 1427 0026 8A43     		bics	r2, r1
 1428 0028 9A60     		str	r2, [r3, #8]
1738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1429              		.loc 1 1738 0
 1430 002a 836E     		ldr	r3, [r0, #104]
 1431 002c 002B     		cmp	r3, #0
 1432 002e 06D0     		beq	.L115
1742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1433              		.loc 1 1742 0
 1434 0030 0022     		movs	r2, #0
 1435 0032 5A63     		str	r2, [r3, #52]
1744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 1436              		.loc 1 1744 0
 1437 0034 806E     		ldr	r0, [r0, #104]
 1438              	.LVL101:
 1439 0036 FFF7FEFF 		bl	HAL_DMA_Abort
 1440              	.LVL102:
 1441 003a 0028     		cmp	r0, #0
 1442 003c 24D1     		bne	.L118
 1443              	.L115:
1758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1444              		.loc 1 1758 0
 1445 003e 2368     		ldr	r3, [r4]
 1446 0040 9A68     		ldr	r2, [r3, #8]
 1447 0042 5206     		lsls	r2, r2, #25
 1448 0044 0DD5     		bpl	.L117
1760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccsKZFTZ.s 			page 93


 1449              		.loc 1 1760 0
 1450 0046 9A68     		ldr	r2, [r3, #8]
 1451 0048 4021     		movs	r1, #64
 1452 004a 8A43     		bics	r2, r1
 1453 004c 9A60     		str	r2, [r3, #8]
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1454              		.loc 1 1763 0
 1455 004e E36E     		ldr	r3, [r4, #108]
 1456 0050 002B     		cmp	r3, #0
 1457 0052 06D0     		beq	.L117
1767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1458              		.loc 1 1767 0
 1459 0054 0022     		movs	r2, #0
 1460 0056 5A63     		str	r2, [r3, #52]
1769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 1461              		.loc 1 1769 0
 1462 0058 E06E     		ldr	r0, [r4, #108]
 1463 005a FFF7FEFF 		bl	HAL_DMA_Abort
 1464              	.LVL103:
 1465 005e 0028     		cmp	r0, #0
 1466 0060 1BD1     		bne	.L119
 1467              	.L117:
1783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1468              		.loc 1 1783 0
 1469 0062 0023     		movs	r3, #0
 1470 0064 5222     		movs	r2, #82
 1471 0066 A352     		strh	r3, [r4, r2]
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1472              		.loc 1 1784 0
 1473 0068 0832     		adds	r2, r2, #8
 1474 006a A352     		strh	r3, [r4, r2]
1787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1475              		.loc 1 1787 0
 1476 006c 2268     		ldr	r2, [r4]
 1477 006e 0F21     		movs	r1, #15
 1478 0070 1162     		str	r1, [r2, #32]
1791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1479              		.loc 1 1791 0
 1480 0072 2168     		ldr	r1, [r4]
 1481 0074 8A69     		ldr	r2, [r1, #24]
 1482 0076 0820     		movs	r0, #8
 1483 0078 0243     		orrs	r2, r0
 1484 007a 8A61     		str	r2, [r1, #24]
1794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1485              		.loc 1 1794 0
 1486 007c 2022     		movs	r2, #32
 1487 007e 6267     		str	r2, [r4, #116]
1795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1488              		.loc 1 1795 0
 1489 0080 A267     		str	r2, [r4, #120]
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1490              		.loc 1 1797 0
 1491 0082 E367     		str	r3, [r4, #124]
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1492              		.loc 1 1799 0
 1493 0084 0020     		movs	r0, #0
 1494              	.L116:
ARM GAS  /tmp/ccsKZFTZ.s 			page 94


1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1495              		.loc 1 1800 0
 1496              		@ sp needed
 1497              	.LVL104:
 1498 0086 10BD     		pop	{r4, pc}
 1499              	.LVL105:
 1500              	.L118:
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 1501              		.loc 1 1746 0
 1502 0088 A06E     		ldr	r0, [r4, #104]
 1503 008a FFF7FEFF 		bl	HAL_DMA_GetError
 1504              	.LVL106:
 1505 008e 2028     		cmp	r0, #32
 1506 0090 D5D1     		bne	.L115
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1507              		.loc 1 1749 0
 1508 0092 1023     		movs	r3, #16
 1509 0094 E367     		str	r3, [r4, #124]
1751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
 1510              		.loc 1 1751 0
 1511 0096 1D38     		subs	r0, r0, #29
 1512 0098 F5E7     		b	.L116
 1513              	.L119:
1771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 1514              		.loc 1 1771 0
 1515 009a E06E     		ldr	r0, [r4, #108]
 1516 009c FFF7FEFF 		bl	HAL_DMA_GetError
 1517              	.LVL107:
 1518 00a0 2028     		cmp	r0, #32
 1519 00a2 DED1     		bne	.L117
1774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1520              		.loc 1 1774 0
 1521 00a4 1023     		movs	r3, #16
 1522 00a6 E367     		str	r3, [r4, #124]
1776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
 1523              		.loc 1 1776 0
 1524 00a8 1D38     		subs	r0, r0, #29
 1525 00aa ECE7     		b	.L116
 1526              	.L121:
 1527              		.align	2
 1528              	.L120:
 1529 00ac 1FFEFFFF 		.word	-481
 1530              		.cfi_endproc
 1531              	.LFE56:
 1533              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 1534              		.align	1
 1535              		.global	HAL_UART_AbortTransmit
 1536              		.syntax unified
 1537              		.code	16
 1538              		.thumb_func
 1539              		.fpu softvfp
 1541              	HAL_UART_AbortTransmit:
 1542              	.LFB57:
1815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1543              		.loc 1 1815 0
 1544              		.cfi_startproc
 1545              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccsKZFTZ.s 			page 95


 1546              		@ frame_needed = 0, uses_anonymous_args = 0
 1547              	.LVL108:
 1548 0000 10B5     		push	{r4, lr}
 1549              	.LCFI8:
 1550              		.cfi_def_cfa_offset 8
 1551              		.cfi_offset 4, -8
 1552              		.cfi_offset 14, -4
 1553 0002 0400     		movs	r4, r0
1817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1554              		.loc 1 1817 0
 1555 0004 0268     		ldr	r2, [r0]
 1556 0006 1368     		ldr	r3, [r2]
 1557 0008 C021     		movs	r1, #192
 1558 000a 8B43     		bics	r3, r1
 1559 000c 1360     		str	r3, [r2]
1820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1560              		.loc 1 1820 0
 1561 000e 0368     		ldr	r3, [r0]
 1562 0010 9A68     		ldr	r2, [r3, #8]
 1563 0012 1206     		lsls	r2, r2, #24
 1564 0014 0DD5     		bpl	.L123
1822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1565              		.loc 1 1822 0
 1566 0016 9A68     		ldr	r2, [r3, #8]
 1567 0018 4039     		subs	r1, r1, #64
 1568 001a 8A43     		bics	r2, r1
 1569 001c 9A60     		str	r2, [r3, #8]
1825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1570              		.loc 1 1825 0
 1571 001e 836E     		ldr	r3, [r0, #104]
 1572 0020 002B     		cmp	r3, #0
 1573 0022 06D0     		beq	.L123
1829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1574              		.loc 1 1829 0
 1575 0024 0022     		movs	r2, #0
 1576 0026 5A63     		str	r2, [r3, #52]
1831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 1577              		.loc 1 1831 0
 1578 0028 806E     		ldr	r0, [r0, #104]
 1579              	.LVL109:
 1580 002a FFF7FEFF 		bl	HAL_DMA_Abort
 1581              	.LVL110:
 1582 002e 0028     		cmp	r0, #0
 1583 0030 06D1     		bne	.L125
 1584              	.L123:
1845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1585              		.loc 1 1845 0
 1586 0032 0022     		movs	r2, #0
 1587 0034 5223     		movs	r3, #82
 1588 0036 E252     		strh	r2, [r4, r3]
1849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1589              		.loc 1 1849 0
 1590 0038 323B     		subs	r3, r3, #50
 1591 003a 6367     		str	r3, [r4, #116]
1851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1592              		.loc 1 1851 0
 1593 003c 0020     		movs	r0, #0
ARM GAS  /tmp/ccsKZFTZ.s 			page 96


 1594              	.L124:
1852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1595              		.loc 1 1852 0
 1596              		@ sp needed
 1597              	.LVL111:
 1598 003e 10BD     		pop	{r4, pc}
 1599              	.LVL112:
 1600              	.L125:
1833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 1601              		.loc 1 1833 0
 1602 0040 A06E     		ldr	r0, [r4, #104]
 1603 0042 FFF7FEFF 		bl	HAL_DMA_GetError
 1604              	.LVL113:
 1605 0046 2028     		cmp	r0, #32
 1606 0048 F3D1     		bne	.L123
1836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1607              		.loc 1 1836 0
 1608 004a 1023     		movs	r3, #16
 1609 004c E367     		str	r3, [r4, #124]
1838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
 1610              		.loc 1 1838 0
 1611 004e 1D38     		subs	r0, r0, #29
 1612 0050 F5E7     		b	.L124
 1613              		.cfi_endproc
 1614              	.LFE57:
 1616              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1617              		.align	1
 1618              		.global	HAL_UART_AbortReceive
 1619              		.syntax unified
 1620              		.code	16
 1621              		.thumb_func
 1622              		.fpu softvfp
 1624              	HAL_UART_AbortReceive:
 1625              	.LFB58:
1867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1626              		.loc 1 1867 0
 1627              		.cfi_startproc
 1628              		@ args = 0, pretend = 0, frame = 0
 1629              		@ frame_needed = 0, uses_anonymous_args = 0
 1630              	.LVL114:
 1631 0000 10B5     		push	{r4, lr}
 1632              	.LCFI9:
 1633              		.cfi_def_cfa_offset 8
 1634              		.cfi_offset 4, -8
 1635              		.cfi_offset 14, -4
 1636 0002 0400     		movs	r4, r0
1869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1637              		.loc 1 1869 0
 1638 0004 0268     		ldr	r2, [r0]
 1639 0006 1368     		ldr	r3, [r2]
 1640 0008 1949     		ldr	r1, .L130
 1641 000a 0B40     		ands	r3, r1
 1642 000c 1360     		str	r3, [r2]
1870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1643              		.loc 1 1870 0
 1644 000e 0268     		ldr	r2, [r0]
 1645 0010 9368     		ldr	r3, [r2, #8]
ARM GAS  /tmp/ccsKZFTZ.s 			page 97


 1646 0012 2331     		adds	r1, r1, #35
 1647 0014 FF31     		adds	r1, r1, #255
 1648 0016 8B43     		bics	r3, r1
 1649 0018 9360     		str	r3, [r2, #8]
1873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1650              		.loc 1 1873 0
 1651 001a 0368     		ldr	r3, [r0]
 1652 001c 9A68     		ldr	r2, [r3, #8]
 1653 001e 5206     		lsls	r2, r2, #25
 1654 0020 0DD5     		bpl	.L127
1875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1655              		.loc 1 1875 0
 1656 0022 9A68     		ldr	r2, [r3, #8]
 1657 0024 3F31     		adds	r1, r1, #63
 1658 0026 8A43     		bics	r2, r1
 1659 0028 9A60     		str	r2, [r3, #8]
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1660              		.loc 1 1878 0
 1661 002a C36E     		ldr	r3, [r0, #108]
 1662 002c 002B     		cmp	r3, #0
 1663 002e 06D0     		beq	.L127
1882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1664              		.loc 1 1882 0
 1665 0030 0022     		movs	r2, #0
 1666 0032 5A63     		str	r2, [r3, #52]
1884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 1667              		.loc 1 1884 0
 1668 0034 C06E     		ldr	r0, [r0, #108]
 1669              	.LVL115:
 1670 0036 FFF7FEFF 		bl	HAL_DMA_Abort
 1671              	.LVL116:
 1672 003a 0028     		cmp	r0, #0
 1673 003c 0ED1     		bne	.L129
 1674              	.L127:
1898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1675              		.loc 1 1898 0
 1676 003e 0022     		movs	r2, #0
 1677 0040 5A23     		movs	r3, #90
 1678 0042 E252     		strh	r2, [r4, r3]
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1679              		.loc 1 1901 0
 1680 0044 2368     		ldr	r3, [r4]
 1681 0046 0F32     		adds	r2, r2, #15
 1682 0048 1A62     		str	r2, [r3, #32]
1904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1683              		.loc 1 1904 0
 1684 004a 2268     		ldr	r2, [r4]
 1685 004c 9369     		ldr	r3, [r2, #24]
 1686 004e 0821     		movs	r1, #8
 1687 0050 0B43     		orrs	r3, r1
 1688 0052 9361     		str	r3, [r2, #24]
1907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1689              		.loc 1 1907 0
 1690 0054 2023     		movs	r3, #32
 1691 0056 A367     		str	r3, [r4, #120]
1909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1692              		.loc 1 1909 0
ARM GAS  /tmp/ccsKZFTZ.s 			page 98


 1693 0058 0020     		movs	r0, #0
 1694              	.L128:
1910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1695              		.loc 1 1910 0
 1696              		@ sp needed
 1697              	.LVL117:
 1698 005a 10BD     		pop	{r4, pc}
 1699              	.LVL118:
 1700              	.L129:
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 1701              		.loc 1 1886 0
 1702 005c E06E     		ldr	r0, [r4, #108]
 1703 005e FFF7FEFF 		bl	HAL_DMA_GetError
 1704              	.LVL119:
 1705 0062 2028     		cmp	r0, #32
 1706 0064 EBD1     		bne	.L127
1889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1707              		.loc 1 1889 0
 1708 0066 1023     		movs	r3, #16
 1709 0068 E367     		str	r3, [r4, #124]
1891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
 1710              		.loc 1 1891 0
 1711 006a 1D38     		subs	r0, r0, #29
 1712 006c F5E7     		b	.L128
 1713              	.L131:
 1714 006e C046     		.align	2
 1715              	.L130:
 1716 0070 DFFEFFFF 		.word	-289
 1717              		.cfi_endproc
 1718              	.LFE58:
 1720              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1721              		.align	1
 1722              		.weak	HAL_UART_TxCpltCallback
 1723              		.syntax unified
 1724              		.code	16
 1725              		.thumb_func
 1726              		.fpu softvfp
 1728              	HAL_UART_TxCpltCallback:
 1729              	.LFB63:
2440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1730              		.loc 1 2440 0
 1731              		.cfi_startproc
 1732              		@ args = 0, pretend = 0, frame = 0
 1733              		@ frame_needed = 0, uses_anonymous_args = 0
 1734              		@ link register save eliminated.
 1735              	.LVL120:
2447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1736              		.loc 1 2447 0
 1737              		@ sp needed
 1738 0000 7047     		bx	lr
 1739              		.cfi_endproc
 1740              	.LFE63:
 1742              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1743              		.align	1
 1744              		.syntax unified
 1745              		.code	16
 1746              		.thumb_func
ARM GAS  /tmp/ccsKZFTZ.s 			page 99


 1747              		.fpu softvfp
 1749              	UART_DMATransmitCplt:
 1750              	.LFB88:
3216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1751              		.loc 1 3216 0
 1752              		.cfi_startproc
 1753              		@ args = 0, pretend = 0, frame = 0
 1754              		@ frame_needed = 0, uses_anonymous_args = 0
 1755              	.LVL121:
 1756 0000 10B5     		push	{r4, lr}
 1757              	.LCFI10:
 1758              		.cfi_def_cfa_offset 8
 1759              		.cfi_offset 4, -8
 1760              		.cfi_offset 14, -4
3217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1761              		.loc 1 3217 0
 1762 0002 436A     		ldr	r3, [r0, #36]
 1763              	.LVL122:
3220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1764              		.loc 1 3220 0
 1765 0004 8269     		ldr	r2, [r0, #24]
 1766 0006 202A     		cmp	r2, #32
 1767 0008 0DD0     		beq	.L134
3222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1768              		.loc 1 3222 0
 1769 000a 0021     		movs	r1, #0
 1770 000c 5222     		movs	r2, #82
 1771 000e 9952     		strh	r1, [r3, r2]
3226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1772              		.loc 1 3226 0
 1773 0010 1968     		ldr	r1, [r3]
 1774 0012 8A68     		ldr	r2, [r1, #8]
 1775 0014 8020     		movs	r0, #128
 1776              	.LVL123:
 1777 0016 8243     		bics	r2, r0
 1778 0018 8A60     		str	r2, [r1, #8]
3229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1779              		.loc 1 3229 0
 1780 001a 1A68     		ldr	r2, [r3]
 1781 001c 1368     		ldr	r3, [r2]
 1782              	.LVL124:
 1783 001e 4021     		movs	r1, #64
 1784 0020 0B43     		orrs	r3, r1
 1785 0022 1360     		str	r3, [r2]
 1786              	.L133:
3242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1787              		.loc 1 3242 0
 1788              		@ sp needed
 1789 0024 10BD     		pop	{r4, pc}
 1790              	.LVL125:
 1791              	.L134:
3239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1792              		.loc 1 3239 0
 1793 0026 1800     		movs	r0, r3
 1794              	.LVL126:
 1795 0028 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1796              	.LVL127:
ARM GAS  /tmp/ccsKZFTZ.s 			page 100


3242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1797              		.loc 1 3242 0
 1798 002c FAE7     		b	.L133
 1799              		.cfi_endproc
 1800              	.LFE88:
 1802              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 1803              		.align	1
 1804              		.syntax unified
 1805              		.code	16
 1806              		.thumb_func
 1807              		.fpu softvfp
 1809              	UART_EndTransmit_IT:
 1810              	.LFB100:
3596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
3600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
3601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1811              		.loc 1 3605 0
 1812              		.cfi_startproc
 1813              		@ args = 0, pretend = 0, frame = 0
 1814              		@ frame_needed = 0, uses_anonymous_args = 0
 1815              	.LVL128:
 1816 0000 10B5     		push	{r4, lr}
 1817              	.LCFI11:
 1818              		.cfi_def_cfa_offset 8
 1819              		.cfi_offset 4, -8
 1820              		.cfi_offset 14, -4
3606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1821              		.loc 1 3607 0
 1822 0002 0268     		ldr	r2, [r0]
 1823 0004 1368     		ldr	r3, [r2]
 1824 0006 4021     		movs	r1, #64
 1825 0008 8B43     		bics	r3, r1
 1826 000a 1360     		str	r3, [r2]
3608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 1827              		.loc 1 3610 0
 1828 000c 2023     		movs	r3, #32
 1829 000e 4367     		str	r3, [r0, #116]
3611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Cleat TxISR function pointer */
3613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxISR = NULL;
 1830              		.loc 1 3613 0
 1831 0010 0023     		movs	r3, #0
 1832 0012 4366     		str	r3, [r0, #100]
3614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxCpltCallback(huart);
ARM GAS  /tmp/ccsKZFTZ.s 			page 101


3618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 1833              		.loc 1 3620 0
 1834 0014 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1835              	.LVL129:
3621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1836              		.loc 1 3622 0
 1837              		@ sp needed
 1838 0018 10BD     		pop	{r4, pc}
 1839              		.cfi_endproc
 1840              	.LFE100:
 1842              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1843              		.align	1
 1844              		.weak	HAL_UART_TxHalfCpltCallback
 1845              		.syntax unified
 1846              		.code	16
 1847              		.thumb_func
 1848              		.fpu softvfp
 1850              	HAL_UART_TxHalfCpltCallback:
 1851              	.LFB64:
2455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1852              		.loc 1 2455 0
 1853              		.cfi_startproc
 1854              		@ args = 0, pretend = 0, frame = 0
 1855              		@ frame_needed = 0, uses_anonymous_args = 0
 1856              		@ link register save eliminated.
 1857              	.LVL130:
2462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1858              		.loc 1 2462 0
 1859              		@ sp needed
 1860 0000 7047     		bx	lr
 1861              		.cfi_endproc
 1862              	.LFE64:
 1864              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1865              		.align	1
 1866              		.syntax unified
 1867              		.code	16
 1868              		.thumb_func
 1869              		.fpu softvfp
 1871              	UART_DMATxHalfCplt:
 1872              	.LFB89:
3250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1873              		.loc 1 3250 0
 1874              		.cfi_startproc
 1875              		@ args = 0, pretend = 0, frame = 0
 1876              		@ frame_needed = 0, uses_anonymous_args = 0
 1877              	.LVL131:
 1878 0000 10B5     		push	{r4, lr}
 1879              	.LCFI12:
 1880              		.cfi_def_cfa_offset 8
 1881              		.cfi_offset 4, -8
 1882              		.cfi_offset 14, -4
3251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1883              		.loc 1 3251 0
 1884 0002 406A     		ldr	r0, [r0, #36]
ARM GAS  /tmp/ccsKZFTZ.s 			page 102


 1885              	.LVL132:
3258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1886              		.loc 1 3258 0
 1887 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1888              	.LVL133:
3260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1889              		.loc 1 3260 0
 1890              		@ sp needed
 1891 0008 10BD     		pop	{r4, pc}
 1892              		.cfi_endproc
 1893              	.LFE89:
 1895              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1896              		.align	1
 1897              		.weak	HAL_UART_RxCpltCallback
 1898              		.syntax unified
 1899              		.code	16
 1900              		.thumb_func
 1901              		.fpu softvfp
 1903              	HAL_UART_RxCpltCallback:
 1904              	.LFB65:
2470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1905              		.loc 1 2470 0
 1906              		.cfi_startproc
 1907              		@ args = 0, pretend = 0, frame = 0
 1908              		@ frame_needed = 0, uses_anonymous_args = 0
 1909              		@ link register save eliminated.
 1910              	.LVL134:
2477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1911              		.loc 1 2477 0
 1912              		@ sp needed
 1913 0000 7047     		bx	lr
 1914              		.cfi_endproc
 1915              	.LFE65:
 1917              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 1918              		.align	1
 1919              		.syntax unified
 1920              		.code	16
 1921              		.thumb_func
 1922              		.fpu softvfp
 1924              	UART_RxISR_8BIT:
 1925              	.LFB101:
3623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief RX interrrupt handler for 7 or 8 bits data word length .
3626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
3627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
3630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1926              		.loc 1 3630 0
 1927              		.cfi_startproc
 1928              		@ args = 0, pretend = 0, frame = 0
 1929              		@ frame_needed = 0, uses_anonymous_args = 0
 1930              	.LVL135:
 1931 0000 10B5     		push	{r4, lr}
 1932              	.LCFI13:
 1933              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccsKZFTZ.s 			page 103


 1934              		.cfi_offset 4, -8
 1935              		.cfi_offset 14, -4
3631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 1936              		.loc 1 3631 0
 1937 0002 5C23     		movs	r3, #92
 1938 0004 C25A     		ldrh	r2, [r0, r3]
 1939              	.LVL136:
3632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t  uhdata;
3633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1940              		.loc 1 3635 0
 1941 0006 836F     		ldr	r3, [r0, #120]
 1942 0008 222B     		cmp	r3, #34
 1943 000a 05D0     		beq	.L143
3636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
3638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
3639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr++;
3640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount--;
3641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
3643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
3645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
3646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear RxISR function pointer */
3654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxISR = NULL;
3655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
3662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
3666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 1944              		.loc 1 3668 0
 1945 000c 0268     		ldr	r2, [r0]
 1946              	.LVL137:
 1947 000e 9369     		ldr	r3, [r2, #24]
 1948 0010 0821     		movs	r1, #8
 1949 0012 0B43     		orrs	r3, r1
 1950 0014 9361     		str	r3, [r2, #24]
 1951              	.LVL138:
 1952              	.L140:
ARM GAS  /tmp/ccsKZFTZ.s 			page 104


3669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1953              		.loc 1 3670 0
 1954              		@ sp needed
 1955 0016 10BD     		pop	{r4, pc}
 1956              	.LVL139:
 1957              	.L143:
3637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 1958              		.loc 1 3637 0
 1959 0018 0368     		ldr	r3, [r0]
 1960 001a 9B8C     		ldrh	r3, [r3, #36]
 1961              	.LVL140:
3638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr++;
 1962              		.loc 1 3638 0
 1963 001c D2B2     		uxtb	r2, r2
 1964              	.LVL141:
 1965 001e 1A40     		ands	r2, r3
 1966 0020 436D     		ldr	r3, [r0, #84]
 1967              	.LVL142:
 1968 0022 1A70     		strb	r2, [r3]
 1969              	.LVL143:
3639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount--;
 1970              		.loc 1 3639 0
 1971 0024 436D     		ldr	r3, [r0, #84]
 1972 0026 0133     		adds	r3, r3, #1
 1973 0028 4365     		str	r3, [r0, #84]
3640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1974              		.loc 1 3640 0
 1975 002a 5A22     		movs	r2, #90
 1976 002c 835A     		ldrh	r3, [r0, r2]
 1977 002e 013B     		subs	r3, r3, #1
 1978 0030 9BB2     		uxth	r3, r3
 1979 0032 8352     		strh	r3, [r0, r2]
3642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1980              		.loc 1 3642 0
 1981 0034 835A     		ldrh	r3, [r0, r2]
 1982 0036 9BB2     		uxth	r3, r3
 1983 0038 002B     		cmp	r3, #0
 1984 003a ECD1     		bne	.L140
3645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1985              		.loc 1 3645 0
 1986 003c 0268     		ldr	r2, [r0]
 1987 003e 1368     		ldr	r3, [r2]
 1988 0040 0749     		ldr	r1, .L144
 1989 0042 0B40     		ands	r3, r1
 1990 0044 1360     		str	r3, [r2]
3648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1991              		.loc 1 3648 0
 1992 0046 0268     		ldr	r2, [r0]
 1993 0048 9368     		ldr	r3, [r2, #8]
 1994 004a 2331     		adds	r1, r1, #35
 1995 004c FF31     		adds	r1, r1, #255
 1996 004e 8B43     		bics	r3, r1
 1997 0050 9360     		str	r3, [r2, #8]
3651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1998              		.loc 1 3651 0
 1999 0052 2023     		movs	r3, #32
ARM GAS  /tmp/ccsKZFTZ.s 			page 105


 2000 0054 8367     		str	r3, [r0, #120]
3654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2001              		.loc 1 3654 0
 2002 0056 0023     		movs	r3, #0
 2003 0058 0366     		str	r3, [r0, #96]
3661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2004              		.loc 1 3661 0
 2005 005a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2006              	.LVL144:
 2007 005e DAE7     		b	.L140
 2008              	.L145:
 2009              		.align	2
 2010              	.L144:
 2011 0060 DFFEFFFF 		.word	-289
 2012              		.cfi_endproc
 2013              	.LFE101:
 2015              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 2016              		.align	1
 2017              		.syntax unified
 2018              		.code	16
 2019              		.thumb_func
 2020              		.fpu softvfp
 2022              	UART_RxISR_16BIT:
 2023              	.LFB102:
3671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief RX interrrupt handler for 9 bits data word length .
3674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
3677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
3680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2024              		.loc 1 3680 0
 2025              		.cfi_startproc
 2026              		@ args = 0, pretend = 0, frame = 0
 2027              		@ frame_needed = 0, uses_anonymous_args = 0
 2028              	.LVL145:
 2029 0000 10B5     		push	{r4, lr}
 2030              	.LCFI14:
 2031              		.cfi_def_cfa_offset 8
 2032              		.cfi_offset 4, -8
 2033              		.cfi_offset 14, -4
3681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t *tmp;
3682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 2034              		.loc 1 3682 0
 2035 0002 5C23     		movs	r3, #92
 2036 0004 C25A     		ldrh	r2, [r0, r3]
 2037              	.LVL146:
3683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t  uhdata;
3684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2038              		.loc 1 3686 0
 2039 0006 836F     		ldr	r3, [r0, #120]
 2040 0008 222B     		cmp	r3, #34
ARM GAS  /tmp/ccsKZFTZ.s 			page 106


 2041 000a 05D0     		beq	.L149
3687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
3689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
3690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
3691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
3692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount--;
3693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
3695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
3697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
3698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear RxISR function pointer */
3706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxISR = NULL;
3707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
3714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
3718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2042              		.loc 1 3720 0
 2043 000c 0268     		ldr	r2, [r0]
 2044              	.LVL147:
 2045 000e 9369     		ldr	r3, [r2, #24]
 2046 0010 0821     		movs	r1, #8
 2047 0012 0B43     		orrs	r3, r1
 2048 0014 9361     		str	r3, [r2, #24]
 2049              	.LVL148:
 2050              	.L146:
3721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2051              		.loc 1 3722 0
 2052              		@ sp needed
 2053 0016 10BD     		pop	{r4, pc}
 2054              	.LVL149:
 2055              	.L149:
3688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 2056              		.loc 1 3688 0
 2057 0018 0368     		ldr	r3, [r0]
 2058 001a 9B8C     		ldrh	r3, [r3, #36]
 2059              	.LVL150:
3690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
ARM GAS  /tmp/ccsKZFTZ.s 			page 107


 2060              		.loc 1 3690 0
 2061 001c 1A40     		ands	r2, r3
 2062              	.LVL151:
 2063 001e 436D     		ldr	r3, [r0, #84]
 2064              	.LVL152:
 2065 0020 1A80     		strh	r2, [r3]
 2066              	.LVL153:
3691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount--;
 2067              		.loc 1 3691 0
 2068 0022 436D     		ldr	r3, [r0, #84]
 2069              	.LVL154:
 2070 0024 0233     		adds	r3, r3, #2
 2071 0026 4365     		str	r3, [r0, #84]
3692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2072              		.loc 1 3692 0
 2073 0028 5A22     		movs	r2, #90
 2074 002a 835A     		ldrh	r3, [r0, r2]
 2075 002c 013B     		subs	r3, r3, #1
 2076 002e 9BB2     		uxth	r3, r3
 2077 0030 8352     		strh	r3, [r0, r2]
3694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2078              		.loc 1 3694 0
 2079 0032 835A     		ldrh	r3, [r0, r2]
 2080 0034 9BB2     		uxth	r3, r3
 2081 0036 002B     		cmp	r3, #0
 2082 0038 EDD1     		bne	.L146
3697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2083              		.loc 1 3697 0
 2084 003a 0268     		ldr	r2, [r0]
 2085 003c 1368     		ldr	r3, [r2]
 2086 003e 0849     		ldr	r1, .L150
 2087 0040 0B40     		ands	r3, r1
 2088 0042 1360     		str	r3, [r2]
3700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2089              		.loc 1 3700 0
 2090 0044 0268     		ldr	r2, [r0]
 2091 0046 9368     		ldr	r3, [r2, #8]
 2092 0048 2331     		adds	r1, r1, #35
 2093 004a FF31     		adds	r1, r1, #255
 2094 004c 8B43     		bics	r3, r1
 2095 004e 9360     		str	r3, [r2, #8]
3703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2096              		.loc 1 3703 0
 2097 0050 2023     		movs	r3, #32
 2098 0052 8367     		str	r3, [r0, #120]
3706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2099              		.loc 1 3706 0
 2100 0054 0023     		movs	r3, #0
 2101 0056 0366     		str	r3, [r0, #96]
3713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2102              		.loc 1 3713 0
 2103 0058 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2104              	.LVL155:
 2105 005c DBE7     		b	.L146
 2106              	.L151:
 2107 005e C046     		.align	2
 2108              	.L150:
ARM GAS  /tmp/ccsKZFTZ.s 			page 108


 2109 0060 DFFEFFFF 		.word	-289
 2110              		.cfi_endproc
 2111              	.LFE102:
 2113              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 2114              		.align	1
 2115              		.syntax unified
 2116              		.code	16
 2117              		.thumb_func
 2118              		.fpu softvfp
 2120              	UART_DMAReceiveCplt:
 2121              	.LFB90:
3268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2122              		.loc 1 3268 0
 2123              		.cfi_startproc
 2124              		@ args = 0, pretend = 0, frame = 0
 2125              		@ frame_needed = 0, uses_anonymous_args = 0
 2126              	.LVL156:
 2127 0000 10B5     		push	{r4, lr}
 2128              	.LCFI15:
 2129              		.cfi_def_cfa_offset 8
 2130              		.cfi_offset 4, -8
 2131              		.cfi_offset 14, -4
3269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2132              		.loc 1 3269 0
 2133 0002 436A     		ldr	r3, [r0, #36]
 2134              	.LVL157:
3272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2135              		.loc 1 3272 0
 2136 0004 8269     		ldr	r2, [r0, #24]
 2137 0006 202A     		cmp	r2, #32
 2138 0008 14D0     		beq	.L153
3274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2139              		.loc 1 3274 0
 2140 000a 0021     		movs	r1, #0
 2141 000c 5A22     		movs	r2, #90
 2142 000e 9952     		strh	r1, [r3, r2]
3277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2143              		.loc 1 3277 0
 2144 0010 1968     		ldr	r1, [r3]
 2145 0012 0A68     		ldr	r2, [r1]
 2146 0014 0948     		ldr	r0, .L154
 2147              	.LVL158:
 2148 0016 0240     		ands	r2, r0
 2149 0018 0A60     		str	r2, [r1]
3278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2150              		.loc 1 3278 0
 2151 001a 1968     		ldr	r1, [r3]
 2152 001c 8A68     		ldr	r2, [r1, #8]
 2153 001e 0330     		adds	r0, r0, #3
 2154 0020 FF30     		adds	r0, r0, #255
 2155 0022 8243     		bics	r2, r0
 2156 0024 8A60     		str	r2, [r1, #8]
3282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2157              		.loc 1 3282 0
 2158 0026 1968     		ldr	r1, [r3]
 2159 0028 8A68     		ldr	r2, [r1, #8]
 2160 002a 3F30     		adds	r0, r0, #63
ARM GAS  /tmp/ccsKZFTZ.s 			page 109


 2161 002c 8243     		bics	r2, r0
 2162 002e 8A60     		str	r2, [r1, #8]
3285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2163              		.loc 1 3285 0
 2164 0030 2022     		movs	r2, #32
 2165 0032 9A67     		str	r2, [r3, #120]
 2166              	.L153:
3293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2167              		.loc 1 3293 0
 2168 0034 1800     		movs	r0, r3
 2169 0036 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2170              	.LVL159:
3295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2171              		.loc 1 3295 0
 2172              		@ sp needed
 2173 003a 10BD     		pop	{r4, pc}
 2174              	.L155:
 2175              		.align	2
 2176              	.L154:
 2177 003c FFFEFFFF 		.word	-257
 2178              		.cfi_endproc
 2179              	.LFE90:
 2181              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2182              		.align	1
 2183              		.weak	HAL_UART_RxHalfCpltCallback
 2184              		.syntax unified
 2185              		.code	16
 2186              		.thumb_func
 2187              		.fpu softvfp
 2189              	HAL_UART_RxHalfCpltCallback:
 2190              	.LFB66:
2485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2191              		.loc 1 2485 0
 2192              		.cfi_startproc
 2193              		@ args = 0, pretend = 0, frame = 0
 2194              		@ frame_needed = 0, uses_anonymous_args = 0
 2195              		@ link register save eliminated.
 2196              	.LVL160:
2492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2197              		.loc 1 2492 0
 2198              		@ sp needed
 2199 0000 7047     		bx	lr
 2200              		.cfi_endproc
 2201              	.LFE66:
 2203              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 2204              		.align	1
 2205              		.syntax unified
 2206              		.code	16
 2207              		.thumb_func
 2208              		.fpu softvfp
 2210              	UART_DMARxHalfCplt:
 2211              	.LFB91:
3303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2212              		.loc 1 3303 0
 2213              		.cfi_startproc
 2214              		@ args = 0, pretend = 0, frame = 0
 2215              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccsKZFTZ.s 			page 110


 2216              	.LVL161:
 2217 0000 10B5     		push	{r4, lr}
 2218              	.LCFI16:
 2219              		.cfi_def_cfa_offset 8
 2220              		.cfi_offset 4, -8
 2221              		.cfi_offset 14, -4
3304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2222              		.loc 1 3304 0
 2223 0002 406A     		ldr	r0, [r0, #36]
 2224              	.LVL162:
3311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2225              		.loc 1 3311 0
 2226 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 2227              	.LVL163:
3313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2228              		.loc 1 3313 0
 2229              		@ sp needed
 2230 0008 10BD     		pop	{r4, pc}
 2231              		.cfi_endproc
 2232              	.LFE91:
 2234              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2235              		.align	1
 2236              		.weak	HAL_UART_ErrorCallback
 2237              		.syntax unified
 2238              		.code	16
 2239              		.thumb_func
 2240              		.fpu softvfp
 2242              	HAL_UART_ErrorCallback:
 2243              	.LFB67:
2500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2244              		.loc 1 2500 0
 2245              		.cfi_startproc
 2246              		@ args = 0, pretend = 0, frame = 0
 2247              		@ frame_needed = 0, uses_anonymous_args = 0
 2248              		@ link register save eliminated.
 2249              	.LVL164:
2507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2250              		.loc 1 2507 0
 2251              		@ sp needed
 2252 0000 7047     		bx	lr
 2253              		.cfi_endproc
 2254              	.LFE67:
 2256              		.section	.text.UART_DMAError,"ax",%progbits
 2257              		.align	1
 2258              		.syntax unified
 2259              		.code	16
 2260              		.thumb_func
 2261              		.fpu softvfp
 2263              	UART_DMAError:
 2264              	.LFB92:
3321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2265              		.loc 1 3321 0
 2266              		.cfi_startproc
 2267              		@ args = 0, pretend = 0, frame = 0
 2268              		@ frame_needed = 0, uses_anonymous_args = 0
 2269              	.LVL165:
 2270 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  /tmp/ccsKZFTZ.s 			page 111


 2271              	.LCFI17:
 2272              		.cfi_def_cfa_offset 16
 2273              		.cfi_offset 4, -16
 2274              		.cfi_offset 5, -12
 2275              		.cfi_offset 6, -8
 2276              		.cfi_offset 14, -4
3322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2277              		.loc 1 3322 0
 2278 0002 446A     		ldr	r4, [r0, #36]
 2279              	.LVL166:
3324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2280              		.loc 1 3324 0
 2281 0004 626F     		ldr	r2, [r4, #116]
 2282              	.LVL167:
3325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2283              		.loc 1 3325 0
 2284 0006 A56F     		ldr	r5, [r4, #120]
 2285              	.LVL168:
3328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2286              		.loc 1 3328 0
 2287 0008 2368     		ldr	r3, [r4]
 2288 000a 9B68     		ldr	r3, [r3, #8]
 2289 000c 1B06     		lsls	r3, r3, #24
 2290 000e 01D5     		bpl	.L160
3328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2291              		.loc 1 3328 0 is_stmt 0 discriminator 1
 2292 0010 212A     		cmp	r2, #33
 2293 0012 0DD0     		beq	.L162
 2294              	.LVL169:
 2295              	.L160:
3336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 2296              		.loc 1 3336 0 is_stmt 1
 2297 0014 2368     		ldr	r3, [r4]
 2298 0016 9B68     		ldr	r3, [r3, #8]
 2299 0018 5B06     		lsls	r3, r3, #25
 2300 001a 01D5     		bpl	.L161
3336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 2301              		.loc 1 3336 0 is_stmt 0 discriminator 1
 2302 001c 222D     		cmp	r5, #34
 2303 001e 0ED0     		beq	.L163
 2304              	.L161:
3343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2305              		.loc 1 3343 0 is_stmt 1
 2306 0020 E36F     		ldr	r3, [r4, #124]
 2307 0022 1022     		movs	r2, #16
 2308 0024 1343     		orrs	r3, r2
 2309 0026 E367     		str	r3, [r4, #124]
3350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2310              		.loc 1 3350 0
 2311 0028 2000     		movs	r0, r4
 2312 002a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2313              	.LVL170:
3352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2314              		.loc 1 3352 0
 2315              		@ sp needed
 2316              	.LVL171:
 2317              	.LVL172:
ARM GAS  /tmp/ccsKZFTZ.s 			page 112


 2318 002e 70BD     		pop	{r4, r5, r6, pc}
 2319              	.LVL173:
 2320              	.L162:
3331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2321              		.loc 1 3331 0
 2322 0030 0022     		movs	r2, #0
 2323              	.LVL174:
 2324 0032 5223     		movs	r3, #82
 2325 0034 E252     		strh	r2, [r4, r3]
3332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2326              		.loc 1 3332 0
 2327 0036 2000     		movs	r0, r4
 2328              	.LVL175:
 2329 0038 FFF7FEFF 		bl	UART_EndTxTransfer
 2330              	.LVL176:
 2331 003c EAE7     		b	.L160
 2332              	.L163:
3339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2333              		.loc 1 3339 0
 2334 003e 0022     		movs	r2, #0
 2335 0040 5A23     		movs	r3, #90
 2336 0042 E252     		strh	r2, [r4, r3]
3340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2337              		.loc 1 3340 0
 2338 0044 2000     		movs	r0, r4
 2339 0046 FFF7FEFF 		bl	UART_EndRxTransfer
 2340              	.LVL177:
 2341 004a E9E7     		b	.L161
 2342              		.cfi_endproc
 2343              	.LFE92:
 2345              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2346              		.align	1
 2347              		.global	HAL_UART_IRQHandler
 2348              		.syntax unified
 2349              		.code	16
 2350              		.thumb_func
 2351              		.fpu softvfp
 2353              	HAL_UART_IRQHandler:
 2354              	.LFB62:
2234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 2355              		.loc 1 2234 0
 2356              		.cfi_startproc
 2357              		@ args = 0, pretend = 0, frame = 0
 2358              		@ frame_needed = 0, uses_anonymous_args = 0
 2359              	.LVL178:
 2360 0000 70B5     		push	{r4, r5, r6, lr}
 2361              	.LCFI18:
 2362              		.cfi_def_cfa_offset 16
 2363              		.cfi_offset 4, -16
 2364              		.cfi_offset 5, -12
 2365              		.cfi_offset 6, -8
 2366              		.cfi_offset 14, -4
 2367 0002 0400     		movs	r4, r0
2235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2368              		.loc 1 2235 0
 2369 0004 0168     		ldr	r1, [r0]
 2370 0006 CB69     		ldr	r3, [r1, #28]
ARM GAS  /tmp/ccsKZFTZ.s 			page 113


 2371              	.LVL179:
2236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2372              		.loc 1 2236 0
 2373 0008 0868     		ldr	r0, [r1]
 2374              	.LVL180:
2237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2375              		.loc 1 2237 0
 2376 000a 8D68     		ldr	r5, [r1, #8]
 2377              	.LVL181:
2243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (errorflags == 0U)
 2378              		.loc 1 2243 0
 2379 000c 534A     		ldr	r2, .L184
 2380 000e 1A40     		ands	r2, r3
 2381              	.LVL182:
2244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2382              		.loc 1 2244 0
 2383 0010 0AD1     		bne	.L165
2247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
 2384              		.loc 1 2247 0
 2385 0012 9E06     		lsls	r6, r3, #26
 2386 0014 08D5     		bpl	.L165
2248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2387              		.loc 1 2248 0
 2388 0016 8606     		lsls	r6, r0, #26
 2389 0018 06D5     		bpl	.L165
2250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2390              		.loc 1 2250 0
 2391 001a 236E     		ldr	r3, [r4, #96]
 2392              	.LVL183:
 2393 001c 002B     		cmp	r3, #0
 2394 001e 00D1     		bne	.LCB2084
 2395 0020 96E0     		b	.L164	@long jump
 2396              	.LCB2084:
2252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 2397              		.loc 1 2252 0
 2398 0022 2000     		movs	r0, r4
 2399              	.LVL184:
 2400 0024 9847     		blx	r3
 2401              	.LVL185:
 2402 0026 93E0     		b	.L164
 2403              	.LVL186:
 2404              	.L165:
2259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
 2405              		.loc 1 2259 0
 2406 0028 002A     		cmp	r2, #0
 2407 002a 78D0     		beq	.L167
2260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != 0U)))
 2408              		.loc 1 2260 0
 2409 002c 0122     		movs	r2, #1
 2410              	.LVL187:
 2411 002e 2A40     		ands	r2, r5
 2412 0030 03D1     		bne	.L168
2261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2413              		.loc 1 2261 0
 2414 0032 9026     		movs	r6, #144
 2415 0034 7600     		lsls	r6, r6, #1
 2416 0036 3042     		tst	r0, r6
ARM GAS  /tmp/ccsKZFTZ.s 			page 114


 2417 0038 71D0     		beq	.L167
 2418              	.L168:
2264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2419              		.loc 1 2264 0
 2420 003a DD07     		lsls	r5, r3, #31
 2421 003c 06D5     		bpl	.L169
 2422              	.LVL188:
2264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2423              		.loc 1 2264 0 is_stmt 0 discriminator 1
 2424 003e C505     		lsls	r5, r0, #23
 2425 0040 04D5     		bpl	.L169
2266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2426              		.loc 1 2266 0 is_stmt 1
 2427 0042 0125     		movs	r5, #1
 2428 0044 0D62     		str	r5, [r1, #32]
2268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 2429              		.loc 1 2268 0
 2430 0046 E16F     		ldr	r1, [r4, #124]
 2431 0048 2943     		orrs	r1, r5
 2432 004a E167     		str	r1, [r4, #124]
 2433              	.L169:
2272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2434              		.loc 1 2272 0
 2435 004c 9907     		lsls	r1, r3, #30
 2436 004e 08D5     		bpl	.L170
2272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2437              		.loc 1 2272 0 is_stmt 0 discriminator 1
 2438 0050 002A     		cmp	r2, #0
 2439 0052 06D0     		beq	.L170
2274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2440              		.loc 1 2274 0 is_stmt 1
 2441 0054 2168     		ldr	r1, [r4]
 2442 0056 0225     		movs	r5, #2
 2443 0058 0D62     		str	r5, [r1, #32]
2276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 2444              		.loc 1 2276 0
 2445 005a E16F     		ldr	r1, [r4, #124]
 2446 005c 0235     		adds	r5, r5, #2
 2447 005e 2943     		orrs	r1, r5
 2448 0060 E167     		str	r1, [r4, #124]
 2449              	.L170:
2280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2450              		.loc 1 2280 0
 2451 0062 5907     		lsls	r1, r3, #29
 2452 0064 08D5     		bpl	.L171
2280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2453              		.loc 1 2280 0 is_stmt 0 discriminator 1
 2454 0066 002A     		cmp	r2, #0
 2455 0068 06D0     		beq	.L171
2282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2456              		.loc 1 2282 0 is_stmt 1
 2457 006a 2168     		ldr	r1, [r4]
 2458 006c 0425     		movs	r5, #4
 2459 006e 0D62     		str	r5, [r1, #32]
2284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 2460              		.loc 1 2284 0
 2461 0070 E16F     		ldr	r1, [r4, #124]
ARM GAS  /tmp/ccsKZFTZ.s 			page 115


 2462 0072 023D     		subs	r5, r5, #2
 2463 0074 2943     		orrs	r1, r5
 2464 0076 E167     		str	r1, [r4, #124]
 2465              	.L171:
2288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 2466              		.loc 1 2288 0
 2467 0078 1907     		lsls	r1, r3, #28
 2468 007a 09D5     		bpl	.L172
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
 2469              		.loc 1 2289 0
 2470 007c 8106     		lsls	r1, r0, #26
 2471 007e 01D4     		bmi	.L173
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
 2472              		.loc 1 2289 0 is_stmt 0 discriminator 1
 2473 0080 002A     		cmp	r2, #0
 2474 0082 05D0     		beq	.L172
 2475              	.L173:
2292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2476              		.loc 1 2292 0 is_stmt 1
 2477 0084 2268     		ldr	r2, [r4]
 2478 0086 0821     		movs	r1, #8
 2479 0088 1162     		str	r1, [r2, #32]
2294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 2480              		.loc 1 2294 0
 2481 008a E26F     		ldr	r2, [r4, #124]
 2482 008c 0A43     		orrs	r2, r1
 2483 008e E267     		str	r2, [r4, #124]
 2484              	.L172:
2298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2485              		.loc 1 2298 0
 2486 0090 1A05     		lsls	r2, r3, #20
 2487 0092 09D5     		bpl	.L174
2298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2488              		.loc 1 2298 0 is_stmt 0 discriminator 1
 2489 0094 4201     		lsls	r2, r0, #5
 2490 0096 07D5     		bpl	.L174
2300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2491              		.loc 1 2300 0 is_stmt 1
 2492 0098 2268     		ldr	r2, [r4]
 2493 009a 8021     		movs	r1, #128
 2494 009c 0901     		lsls	r1, r1, #4
 2495 009e 1162     		str	r1, [r2, #32]
2302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 2496              		.loc 1 2302 0
 2497 00a0 E26F     		ldr	r2, [r4, #124]
 2498 00a2 2021     		movs	r1, #32
 2499 00a4 0A43     		orrs	r2, r1
 2500 00a6 E267     		str	r2, [r4, #124]
 2501              	.L174:
2306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2502              		.loc 1 2306 0
 2503 00a8 E26F     		ldr	r2, [r4, #124]
 2504 00aa 002A     		cmp	r2, #0
 2505 00ac 50D0     		beq	.L164
2309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
 2506              		.loc 1 2309 0
 2507 00ae 9B06     		lsls	r3, r3, #26
ARM GAS  /tmp/ccsKZFTZ.s 			page 116


 2508 00b0 06D5     		bpl	.L175
 2509              	.LVL189:
2310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2510              		.loc 1 2310 0
 2511 00b2 8306     		lsls	r3, r0, #26
 2512 00b4 04D5     		bpl	.L175
2312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 2513              		.loc 1 2312 0
 2514 00b6 236E     		ldr	r3, [r4, #96]
 2515 00b8 002B     		cmp	r3, #0
 2516 00ba 01D0     		beq	.L175
2314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
 2517              		.loc 1 2314 0
 2518 00bc 2000     		movs	r0, r4
 2519              	.LVL190:
 2520 00be 9847     		blx	r3
 2521              	.LVL191:
 2522              	.L175:
2323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 2523              		.loc 1 2323 0
 2524 00c0 E26F     		ldr	r2, [r4, #124]
 2525              	.LVL192:
2324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 2526              		.loc 1 2324 0
 2527 00c2 2368     		ldr	r3, [r4]
 2528 00c4 9B68     		ldr	r3, [r3, #8]
 2529 00c6 5B06     		lsls	r3, r3, #25
 2530 00c8 02D4     		bmi	.L176
2325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2531              		.loc 1 2325 0 discriminator 1
 2532 00ca 2823     		movs	r3, #40
2324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 2533              		.loc 1 2324 0 discriminator 1
 2534 00cc 1342     		tst	r3, r2
 2535 00ce 20D0     		beq	.L177
 2536              	.L176:
2330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2537              		.loc 1 2330 0
 2538 00d0 2000     		movs	r0, r4
 2539 00d2 FFF7FEFF 		bl	UART_EndRxTransfer
 2540              	.LVL193:
2333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 2541              		.loc 1 2333 0
 2542 00d6 2368     		ldr	r3, [r4]
 2543 00d8 9A68     		ldr	r2, [r3, #8]
 2544 00da 5206     		lsls	r2, r2, #25
 2545 00dc 15D5     		bpl	.L178
2335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2546              		.loc 1 2335 0
 2547 00de 9A68     		ldr	r2, [r3, #8]
 2548 00e0 4021     		movs	r1, #64
 2549 00e2 8A43     		bics	r2, r1
 2550 00e4 9A60     		str	r2, [r3, #8]
2338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
 2551              		.loc 1 2338 0
 2552 00e6 E36E     		ldr	r3, [r4, #108]
 2553 00e8 002B     		cmp	r3, #0
ARM GAS  /tmp/ccsKZFTZ.s 			page 117


 2554 00ea 0AD0     		beq	.L179
2342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2555              		.loc 1 2342 0
 2556 00ec 1C4A     		ldr	r2, .L184+4
 2557 00ee 5A63     		str	r2, [r3, #52]
2345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             {
 2558              		.loc 1 2345 0
 2559 00f0 E06E     		ldr	r0, [r4, #108]
 2560 00f2 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2561              	.LVL194:
 2562 00f6 0028     		cmp	r0, #0
 2563 00f8 2AD0     		beq	.L164
2348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             }
 2564              		.loc 1 2348 0
 2565 00fa E06E     		ldr	r0, [r4, #108]
 2566 00fc 436B     		ldr	r3, [r0, #52]
 2567 00fe 9847     		blx	r3
 2568              	.LVL195:
 2569 0100 26E0     		b	.L164
 2570              	.L179:
2359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2571              		.loc 1 2359 0
 2572 0102 2000     		movs	r0, r4
 2573 0104 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2574              	.LVL196:
 2575 0108 22E0     		b	.L164
 2576              	.L178:
2372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2577              		.loc 1 2372 0
 2578 010a 2000     		movs	r0, r4
 2579 010c FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2580              	.LVL197:
 2581 0110 1EE0     		b	.L164
 2582              	.LVL198:
 2583              	.L177:
2385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2584              		.loc 1 2385 0
 2585 0112 2000     		movs	r0, r4
 2586 0114 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2587              	.LVL199:
2387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 2588              		.loc 1 2387 0
 2589 0118 0023     		movs	r3, #0
 2590 011a E367     		str	r3, [r4, #124]
 2591 011c 18E0     		b	.L164
 2592              	.LVL200:
 2593              	.L167:
2396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2594              		.loc 1 2396 0
 2595 011e DA02     		lsls	r2, r3, #11
 2596 0120 01D5     		bpl	.L180
2396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2597              		.loc 1 2396 0 is_stmt 0 discriminator 1
 2598 0122 6A02     		lsls	r2, r5, #9
 2599 0124 09D4     		bmi	.L182
 2600              	.L180:
2415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
ARM GAS  /tmp/ccsKZFTZ.s 			page 118


 2601              		.loc 1 2415 0 is_stmt 1
 2602 0126 1A06     		lsls	r2, r3, #24
 2603 0128 0ED5     		bpl	.L181
2416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2604              		.loc 1 2416 0
 2605 012a 0206     		lsls	r2, r0, #24
 2606 012c 0CD5     		bpl	.L181
2418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2607              		.loc 1 2418 0
 2608 012e 636E     		ldr	r3, [r4, #100]
 2609              	.LVL201:
 2610 0130 002B     		cmp	r3, #0
 2611 0132 0DD0     		beq	.L164
2420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 2612              		.loc 1 2420 0
 2613 0134 2000     		movs	r0, r4
 2614              	.LVL202:
 2615 0136 9847     		blx	r3
 2616              	.LVL203:
 2617 0138 0AE0     		b	.L164
 2618              	.LVL204:
 2619              	.L182:
2398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2620              		.loc 1 2398 0
 2621 013a 8023     		movs	r3, #128
 2622              	.LVL205:
 2623 013c 5B03     		lsls	r3, r3, #13
 2624 013e 0B62     		str	r3, [r1, #32]
2408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2625              		.loc 1 2408 0
 2626 0140 2000     		movs	r0, r4
 2627              	.LVL206:
 2628 0142 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 2629              	.LVL207:
2410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2630              		.loc 1 2410 0
 2631 0146 03E0     		b	.L164
 2632              	.LVL208:
 2633              	.L181:
2426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2634              		.loc 1 2426 0
 2635 0148 5B06     		lsls	r3, r3, #25
 2636 014a 01D5     		bpl	.L164
 2637              	.LVL209:
2426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2638              		.loc 1 2426 0 is_stmt 0 discriminator 1
 2639 014c 4306     		lsls	r3, r0, #25
 2640 014e 00D4     		bmi	.L183
 2641              	.LVL210:
 2642              	.L164:
2432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2643              		.loc 1 2432 0 is_stmt 1
 2644              		@ sp needed
 2645              	.LVL211:
 2646 0150 70BD     		pop	{r4, r5, r6, pc}
 2647              	.LVL212:
 2648              	.L183:
ARM GAS  /tmp/ccsKZFTZ.s 			page 119


2428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 2649              		.loc 1 2428 0
 2650 0152 2000     		movs	r0, r4
 2651              	.LVL213:
 2652 0154 FFF7FEFF 		bl	UART_EndTransmit_IT
 2653              	.LVL214:
2429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2654              		.loc 1 2429 0
 2655 0158 FAE7     		b	.L164
 2656              	.L185:
 2657 015a C046     		.align	2
 2658              	.L184:
 2659 015c 0F080000 		.word	2063
 2660 0160 00000000 		.word	UART_DMAAbortOnError
 2661              		.cfi_endproc
 2662              	.LFE62:
 2664              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 2665              		.align	1
 2666              		.syntax unified
 2667              		.code	16
 2668              		.thumb_func
 2669              		.fpu softvfp
 2671              	UART_DMAAbortOnError:
 2672              	.LFB93:
3361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2673              		.loc 1 3361 0
 2674              		.cfi_startproc
 2675              		@ args = 0, pretend = 0, frame = 0
 2676              		@ frame_needed = 0, uses_anonymous_args = 0
 2677              	.LVL215:
 2678 0000 10B5     		push	{r4, lr}
 2679              	.LCFI19:
 2680              		.cfi_def_cfa_offset 8
 2681              		.cfi_offset 4, -8
 2682              		.cfi_offset 14, -4
3362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2683              		.loc 1 3362 0
 2684 0002 406A     		ldr	r0, [r0, #36]
 2685              	.LVL216:
3363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2686              		.loc 1 3363 0
 2687 0004 0023     		movs	r3, #0
 2688 0006 5A22     		movs	r2, #90
 2689 0008 8352     		strh	r3, [r0, r2]
3364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2690              		.loc 1 3364 0
 2691 000a 083A     		subs	r2, r2, #8
 2692 000c 8352     		strh	r3, [r0, r2]
3371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2693              		.loc 1 3371 0
 2694 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2695              	.LVL217:
3373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2696              		.loc 1 3373 0
 2697              		@ sp needed
 2698 0012 10BD     		pop	{r4, pc}
 2699              		.cfi_endproc
ARM GAS  /tmp/ccsKZFTZ.s 			page 120


 2700              	.LFE93:
 2702              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 2703              		.align	1
 2704              		.weak	HAL_UART_AbortCpltCallback
 2705              		.syntax unified
 2706              		.code	16
 2707              		.thumb_func
 2708              		.fpu softvfp
 2710              	HAL_UART_AbortCpltCallback:
 2711              	.LFB68:
2515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2712              		.loc 1 2515 0
 2713              		.cfi_startproc
 2714              		@ args = 0, pretend = 0, frame = 0
 2715              		@ frame_needed = 0, uses_anonymous_args = 0
 2716              		@ link register save eliminated.
 2717              	.LVL218:
2522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2718              		.loc 1 2522 0
 2719              		@ sp needed
 2720 0000 7047     		bx	lr
 2721              		.cfi_endproc
 2722              	.LFE68:
 2724              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2725              		.align	1
 2726              		.global	HAL_UART_Abort_IT
 2727              		.syntax unified
 2728              		.code	16
 2729              		.thumb_func
 2730              		.fpu softvfp
 2732              	HAL_UART_Abort_IT:
 2733              	.LFB59:
1927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2734              		.loc 1 1927 0
 2735              		.cfi_startproc
 2736              		@ args = 0, pretend = 0, frame = 0
 2737              		@ frame_needed = 0, uses_anonymous_args = 0
 2738              	.LVL219:
 2739 0000 10B5     		push	{r4, lr}
 2740              	.LCFI20:
 2741              		.cfi_def_cfa_offset 8
 2742              		.cfi_offset 4, -8
 2743              		.cfi_offset 14, -4
 2744 0002 0400     		movs	r4, r0
 2745              	.LVL220:
1931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2746              		.loc 1 1931 0
 2747 0004 0268     		ldr	r2, [r0]
 2748 0006 1368     		ldr	r3, [r2]
 2749 0008 3449     		ldr	r1, .L201
 2750 000a 0B40     		ands	r3, r1
 2751 000c 1360     		str	r3, [r2]
1932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2752              		.loc 1 1932 0
 2753 000e 0268     		ldr	r2, [r0]
 2754 0010 9368     		ldr	r3, [r2, #8]
 2755 0012 E331     		adds	r1, r1, #227
ARM GAS  /tmp/ccsKZFTZ.s 			page 121


 2756 0014 FF31     		adds	r1, r1, #255
 2757 0016 8B43     		bics	r3, r1
 2758 0018 9360     		str	r3, [r2, #8]
1937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2759              		.loc 1 1937 0
 2760 001a 836E     		ldr	r3, [r0, #104]
 2761 001c 002B     		cmp	r3, #0
 2762 001e 05D0     		beq	.L189
1941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2763              		.loc 1 1941 0
 2764 0020 0268     		ldr	r2, [r0]
 2765 0022 9268     		ldr	r2, [r2, #8]
 2766 0024 1206     		lsls	r2, r2, #24
 2767 0026 1ED5     		bpl	.L190
1943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 2768              		.loc 1 1943 0
 2769 0028 2D4A     		ldr	r2, .L201+4
 2770 002a 5A63     		str	r2, [r3, #52]
 2771              	.L189:
1951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2772              		.loc 1 1951 0
 2773 002c E36E     		ldr	r3, [r4, #108]
 2774 002e 002B     		cmp	r3, #0
 2775 0030 05D0     		beq	.L191
1955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2776              		.loc 1 1955 0
 2777 0032 2268     		ldr	r2, [r4]
 2778 0034 9268     		ldr	r2, [r2, #8]
 2779 0036 5206     		lsls	r2, r2, #25
 2780 0038 18D5     		bpl	.L192
1957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 2781              		.loc 1 1957 0
 2782 003a 2A4A     		ldr	r2, .L201+8
 2783 003c 5A63     		str	r2, [r3, #52]
 2784              	.L191:
1966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2785              		.loc 1 1966 0
 2786 003e 2368     		ldr	r3, [r4]
 2787 0040 9A68     		ldr	r2, [r3, #8]
 2788 0042 1206     		lsls	r2, r2, #24
 2789 0044 15D5     		bpl	.L196
1969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2790              		.loc 1 1969 0
 2791 0046 9A68     		ldr	r2, [r3, #8]
 2792 0048 8021     		movs	r1, #128
 2793 004a 8A43     		bics	r2, r1
 2794 004c 9A60     		str	r2, [r3, #8]
1972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2795              		.loc 1 1972 0
 2796 004e A06E     		ldr	r0, [r4, #104]
 2797              	.LVL221:
 2798 0050 0028     		cmp	r0, #0
 2799 0052 26D0     		beq	.L197
1978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2800              		.loc 1 1978 0
 2801 0054 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2802              	.LVL222:
ARM GAS  /tmp/ccsKZFTZ.s 			page 122


 2803 0058 0028     		cmp	r0, #0
 2804 005a 24D0     		beq	.L198
1980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 2805              		.loc 1 1980 0
 2806 005c A36E     		ldr	r3, [r4, #104]
 2807 005e 0022     		movs	r2, #0
 2808 0060 5A63     		str	r2, [r3, #52]
1928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2809              		.loc 1 1928 0
 2810 0062 0132     		adds	r2, r2, #1
 2811 0064 06E0     		b	.L193
 2812              	.LVL223:
 2813              	.L190:
1947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 2814              		.loc 1 1947 0
 2815 0066 0022     		movs	r2, #0
 2816 0068 5A63     		str	r2, [r3, #52]
 2817 006a DFE7     		b	.L189
 2818              	.L192:
1961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 2819              		.loc 1 1961 0
 2820 006c 0022     		movs	r2, #0
 2821 006e 5A63     		str	r2, [r3, #52]
 2822 0070 E5E7     		b	.L191
 2823              	.L196:
1928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2824              		.loc 1 1928 0
 2825 0072 0122     		movs	r2, #1
 2826              	.LVL224:
 2827              	.L193:
1990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2828              		.loc 1 1990 0
 2829 0074 2368     		ldr	r3, [r4]
 2830 0076 9968     		ldr	r1, [r3, #8]
 2831 0078 4906     		lsls	r1, r1, #25
 2832 007a 0ED5     		bpl	.L194
1992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2833              		.loc 1 1992 0
 2834 007c 9968     		ldr	r1, [r3, #8]
 2835 007e 4020     		movs	r0, #64
 2836 0080 8143     		bics	r1, r0
 2837 0082 9960     		str	r1, [r3, #8]
1995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2838              		.loc 1 1995 0
 2839 0084 E06E     		ldr	r0, [r4, #108]
 2840 0086 0028     		cmp	r0, #0
 2841 0088 07D0     		beq	.L194
2001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2842              		.loc 1 2001 0
 2843 008a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2844              	.LVL225:
 2845 008e 0028     		cmp	r0, #0
 2846 0090 0BD0     		beq	.L199
2003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 1U;
 2847              		.loc 1 2003 0
 2848 0092 E36E     		ldr	r3, [r4, #108]
 2849 0094 0022     		movs	r2, #0
ARM GAS  /tmp/ccsKZFTZ.s 			page 123


 2850 0096 5A63     		str	r2, [r3, #52]
 2851              	.LVL226:
2004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 2852              		.loc 1 2004 0
 2853 0098 0132     		adds	r2, r2, #1
 2854              	.LVL227:
 2855              	.L194:
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2856              		.loc 1 2014 0
 2857 009a 012A     		cmp	r2, #1
 2858 009c 07D0     		beq	.L200
 2859              	.LVL228:
 2860              	.L195:
2049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2861              		.loc 1 2049 0
 2862 009e 0020     		movs	r0, #0
 2863              		@ sp needed
 2864              	.LVL229:
 2865 00a0 10BD     		pop	{r4, pc}
 2866              	.LVL230:
 2867              	.L197:
1928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2868              		.loc 1 1928 0
 2869 00a2 0122     		movs	r2, #1
 2870 00a4 E6E7     		b	.L193
 2871              	.L198:
1984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 2872              		.loc 1 1984 0
 2873 00a6 0022     		movs	r2, #0
 2874 00a8 E4E7     		b	.L193
 2875              	.LVL231:
 2876              	.L199:
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 2877              		.loc 1 2008 0
 2878 00aa 0022     		movs	r2, #0
 2879 00ac F5E7     		b	.L194
 2880              	.LVL232:
 2881              	.L200:
2017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 2882              		.loc 1 2017 0
 2883 00ae 0023     		movs	r3, #0
 2884 00b0 5132     		adds	r2, r2, #81
 2885              	.LVL233:
 2886 00b2 A352     		strh	r3, [r4, r2]
2018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2887              		.loc 1 2018 0
 2888 00b4 0832     		adds	r2, r2, #8
 2889              	.LVL234:
 2890 00b6 A352     		strh	r3, [r4, r2]
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxISR = NULL;
 2891              		.loc 1 2021 0
 2892 00b8 2366     		str	r3, [r4, #96]
2022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2893              		.loc 1 2022 0
 2894 00ba 6366     		str	r3, [r4, #100]
2025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2895              		.loc 1 2025 0
ARM GAS  /tmp/ccsKZFTZ.s 			page 124


 2896 00bc E367     		str	r3, [r4, #124]
2028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2897              		.loc 1 2028 0
 2898 00be 2368     		ldr	r3, [r4]
 2899 00c0 4B3A     		subs	r2, r2, #75
 2900              	.LVL235:
 2901 00c2 1A62     		str	r2, [r3, #32]
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2902              		.loc 1 2032 0
 2903 00c4 2268     		ldr	r2, [r4]
 2904              	.LVL236:
 2905 00c6 9369     		ldr	r3, [r2, #24]
 2906              	.LVL237:
 2907 00c8 0821     		movs	r1, #8
 2908 00ca 0B43     		orrs	r3, r1
 2909 00cc 9361     		str	r3, [r2, #24]
2035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2910              		.loc 1 2035 0
 2911 00ce 2023     		movs	r3, #32
 2912 00d0 6367     		str	r3, [r4, #116]
2036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2913              		.loc 1 2036 0
 2914 00d2 A367     		str	r3, [r4, #120]
2044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2915              		.loc 1 2044 0
 2916 00d4 2000     		movs	r0, r4
 2917 00d6 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2918              	.LVL238:
 2919 00da E0E7     		b	.L195
 2920              	.L202:
 2921              		.align	2
 2922              	.L201:
 2923 00dc 1FFEFFFF 		.word	-481
 2924 00e0 00000000 		.word	UART_DMATxAbortCallback
 2925 00e4 00000000 		.word	UART_DMARxAbortCallback
 2926              		.cfi_endproc
 2927              	.LFE59:
 2929              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 2930              		.align	1
 2931              		.syntax unified
 2932              		.code	16
 2933              		.thumb_func
 2934              		.fpu softvfp
 2936              	UART_DMARxAbortCallback:
 2937              	.LFB95:
3433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2938              		.loc 1 3433 0
 2939              		.cfi_startproc
 2940              		@ args = 0, pretend = 0, frame = 0
 2941              		@ frame_needed = 0, uses_anonymous_args = 0
 2942              	.LVL239:
 2943 0000 10B5     		push	{r4, lr}
 2944              	.LCFI21:
 2945              		.cfi_def_cfa_offset 8
 2946              		.cfi_offset 4, -8
 2947              		.cfi_offset 14, -4
3434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccsKZFTZ.s 			page 125


 2948              		.loc 1 3434 0
 2949 0002 406A     		ldr	r0, [r0, #36]
 2950              	.LVL240:
3436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2951              		.loc 1 3436 0
 2952 0004 C36E     		ldr	r3, [r0, #108]
 2953 0006 0022     		movs	r2, #0
 2954 0008 5A63     		str	r2, [r3, #52]
3439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2955              		.loc 1 3439 0
 2956 000a 836E     		ldr	r3, [r0, #104]
 2957 000c 002B     		cmp	r3, #0
 2958 000e 03D0     		beq	.L204
3441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2959              		.loc 1 3441 0
 2960 0010 5B6B     		ldr	r3, [r3, #52]
 2961 0012 002B     		cmp	r3, #0
 2962 0014 00D0     		beq	.L204
 2963              	.LVL241:
 2964              	.L203:
3472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2965              		.loc 1 3472 0
 2966              		@ sp needed
 2967 0016 10BD     		pop	{r4, pc}
 2968              	.LVL242:
 2969              	.L204:
3448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2970              		.loc 1 3448 0
 2971 0018 0023     		movs	r3, #0
 2972 001a 5222     		movs	r2, #82
 2973 001c 8352     		strh	r3, [r0, r2]
3449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2974              		.loc 1 3449 0
 2975 001e 0832     		adds	r2, r2, #8
 2976 0020 8352     		strh	r3, [r0, r2]
3452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2977              		.loc 1 3452 0
 2978 0022 C367     		str	r3, [r0, #124]
3455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2979              		.loc 1 3455 0
 2980 0024 0368     		ldr	r3, [r0]
 2981 0026 4B3A     		subs	r2, r2, #75
 2982 0028 1A62     		str	r2, [r3, #32]
3458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2983              		.loc 1 3458 0
 2984 002a 0268     		ldr	r2, [r0]
 2985 002c 9369     		ldr	r3, [r2, #24]
 2986 002e 0821     		movs	r1, #8
 2987 0030 0B43     		orrs	r3, r1
 2988 0032 9361     		str	r3, [r2, #24]
3461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2989              		.loc 1 3461 0
 2990 0034 2023     		movs	r3, #32
 2991 0036 4367     		str	r3, [r0, #116]
3462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2992              		.loc 1 3462 0
 2993 0038 8367     		str	r3, [r0, #120]
ARM GAS  /tmp/ccsKZFTZ.s 			page 126


3470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2994              		.loc 1 3470 0
 2995 003a FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2996              	.LVL243:
 2997 003e EAE7     		b	.L203
 2998              		.cfi_endproc
 2999              	.LFE95:
 3001              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 3002              		.align	1
 3003              		.syntax unified
 3004              		.code	16
 3005              		.thumb_func
 3006              		.fpu softvfp
 3008              	UART_DMATxAbortCallback:
 3009              	.LFB94:
3384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3010              		.loc 1 3384 0
 3011              		.cfi_startproc
 3012              		@ args = 0, pretend = 0, frame = 0
 3013              		@ frame_needed = 0, uses_anonymous_args = 0
 3014              	.LVL244:
 3015 0000 10B5     		push	{r4, lr}
 3016              	.LCFI22:
 3017              		.cfi_def_cfa_offset 8
 3018              		.cfi_offset 4, -8
 3019              		.cfi_offset 14, -4
3385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3020              		.loc 1 3385 0
 3021 0002 406A     		ldr	r0, [r0, #36]
 3022              	.LVL245:
3387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3023              		.loc 1 3387 0
 3024 0004 836E     		ldr	r3, [r0, #104]
 3025 0006 0022     		movs	r2, #0
 3026 0008 5A63     		str	r2, [r3, #52]
3390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3027              		.loc 1 3390 0
 3028 000a C36E     		ldr	r3, [r0, #108]
 3029 000c 002B     		cmp	r3, #0
 3030 000e 03D0     		beq	.L207
3392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3031              		.loc 1 3392 0
 3032 0010 5B6B     		ldr	r3, [r3, #52]
 3033 0012 002B     		cmp	r3, #0
 3034 0014 00D0     		beq	.L207
 3035              	.LVL246:
 3036              	.L206:
3421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3037              		.loc 1 3421 0
 3038              		@ sp needed
 3039 0016 10BD     		pop	{r4, pc}
 3040              	.LVL247:
 3041              	.L207:
3399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3042              		.loc 1 3399 0
 3043 0018 0023     		movs	r3, #0
 3044 001a 5222     		movs	r2, #82
ARM GAS  /tmp/ccsKZFTZ.s 			page 127


 3045 001c 8352     		strh	r3, [r0, r2]
3400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3046              		.loc 1 3400 0
 3047 001e 0832     		adds	r2, r2, #8
 3048 0020 8352     		strh	r3, [r0, r2]
3403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3049              		.loc 1 3403 0
 3050 0022 C367     		str	r3, [r0, #124]
3406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3051              		.loc 1 3406 0
 3052 0024 0368     		ldr	r3, [r0]
 3053 0026 4B3A     		subs	r2, r2, #75
 3054 0028 1A62     		str	r2, [r3, #32]
3410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3055              		.loc 1 3410 0
 3056 002a 2023     		movs	r3, #32
 3057 002c 4367     		str	r3, [r0, #116]
3411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3058              		.loc 1 3411 0
 3059 002e 8367     		str	r3, [r0, #120]
3419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3060              		.loc 1 3419 0
 3061 0030 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3062              	.LVL248:
 3063 0034 EFE7     		b	.L206
 3064              		.cfi_endproc
 3065              	.LFE94:
 3067              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3068              		.align	1
 3069              		.weak	HAL_UART_AbortTransmitCpltCallback
 3070              		.syntax unified
 3071              		.code	16
 3072              		.thumb_func
 3073              		.fpu softvfp
 3075              	HAL_UART_AbortTransmitCpltCallback:
 3076              	.LFB69:
2530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3077              		.loc 1 2530 0
 3078              		.cfi_startproc
 3079              		@ args = 0, pretend = 0, frame = 0
 3080              		@ frame_needed = 0, uses_anonymous_args = 0
 3081              		@ link register save eliminated.
 3082              	.LVL249:
2537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3083              		.loc 1 2537 0
 3084              		@ sp needed
 3085 0000 7047     		bx	lr
 3086              		.cfi_endproc
 3087              	.LFE69:
 3089              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3090              		.align	1
 3091              		.global	HAL_UART_AbortTransmit_IT
 3092              		.syntax unified
 3093              		.code	16
 3094              		.thumb_func
 3095              		.fpu softvfp
 3097              	HAL_UART_AbortTransmit_IT:
ARM GAS  /tmp/ccsKZFTZ.s 			page 128


 3098              	.LFB60:
2066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable interrupts */
 3099              		.loc 1 2066 0
 3100              		.cfi_startproc
 3101              		@ args = 0, pretend = 0, frame = 0
 3102              		@ frame_needed = 0, uses_anonymous_args = 0
 3103              	.LVL250:
 3104 0000 10B5     		push	{r4, lr}
 3105              	.LCFI23:
 3106              		.cfi_def_cfa_offset 8
 3107              		.cfi_offset 4, -8
 3108              		.cfi_offset 14, -4
 3109 0002 0400     		movs	r4, r0
2068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3110              		.loc 1 2068 0
 3111 0004 0268     		ldr	r2, [r0]
 3112 0006 1368     		ldr	r3, [r2]
 3113 0008 C021     		movs	r1, #192
 3114 000a 8B43     		bics	r3, r1
 3115 000c 1360     		str	r3, [r2]
2071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3116              		.loc 1 2071 0
 3117 000e 0368     		ldr	r3, [r0]
 3118 0010 9A68     		ldr	r2, [r3, #8]
 3119 0012 1206     		lsls	r2, r2, #24
 3120 0014 1CD5     		bpl	.L211
2073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3121              		.loc 1 2073 0
 3122 0016 9A68     		ldr	r2, [r3, #8]
 3123 0018 4039     		subs	r1, r1, #64
 3124 001a 8A43     		bics	r2, r1
 3125 001c 9A60     		str	r2, [r3, #8]
2076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3126              		.loc 1 2076 0
 3127 001e 836E     		ldr	r3, [r0, #104]
 3128 0020 002B     		cmp	r3, #0
 3129 0022 0CD0     		beq	.L212
2080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3130              		.loc 1 2080 0
 3131 0024 0F4A     		ldr	r2, .L215
 3132 0026 5A63     		str	r2, [r3, #52]
2083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3133              		.loc 1 2083 0
 3134 0028 806E     		ldr	r0, [r0, #104]
 3135              	.LVL251:
 3136 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3137              	.LVL252:
 3138 002e 0028     		cmp	r0, #0
 3139 0030 01D1     		bne	.L214
 3140              	.L213:
2133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3141              		.loc 1 2133 0
 3142 0032 0020     		movs	r0, #0
 3143              		@ sp needed
 3144              	.LVL253:
 3145 0034 10BD     		pop	{r4, pc}
 3146              	.LVL254:
ARM GAS  /tmp/ccsKZFTZ.s 			page 129


 3147              	.L214:
2086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3148              		.loc 1 2086 0
 3149 0036 A06E     		ldr	r0, [r4, #104]
 3150 0038 436B     		ldr	r3, [r0, #52]
 3151 003a 9847     		blx	r3
 3152              	.LVL255:
 3153 003c F9E7     		b	.L213
 3154              	.LVL256:
 3155              	.L212:
2092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3156              		.loc 1 2092 0
 3157 003e 0023     		movs	r3, #0
 3158 0040 5222     		movs	r2, #82
 3159 0042 8352     		strh	r3, [r0, r2]
2095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3160              		.loc 1 2095 0
 3161 0044 4366     		str	r3, [r0, #100]
2098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3162              		.loc 1 2098 0
 3163 0046 2033     		adds	r3, r3, #32
 3164 0048 4367     		str	r3, [r0, #116]
2106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3165              		.loc 1 2106 0
 3166 004a FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3167              	.LVL257:
 3168 004e F0E7     		b	.L213
 3169              	.LVL258:
 3170              	.L211:
2113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3171              		.loc 1 2113 0
 3172 0050 0023     		movs	r3, #0
 3173 0052 5222     		movs	r2, #82
 3174 0054 8352     		strh	r3, [r0, r2]
2116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3175              		.loc 1 2116 0
 3176 0056 4366     		str	r3, [r0, #100]
2120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3177              		.loc 1 2120 0
 3178 0058 2033     		adds	r3, r3, #32
 3179 005a 4367     		str	r3, [r0, #116]
2128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3180              		.loc 1 2128 0
 3181 005c FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3182              	.LVL259:
 3183 0060 E7E7     		b	.L213
 3184              	.L216:
 3185 0062 C046     		.align	2
 3186              	.L215:
 3187 0064 00000000 		.word	UART_DMATxOnlyAbortCallback
 3188              		.cfi_endproc
 3189              	.LFE60:
 3191              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 3192              		.align	1
 3193              		.syntax unified
 3194              		.code	16
 3195              		.thumb_func
ARM GAS  /tmp/ccsKZFTZ.s 			page 130


 3196              		.fpu softvfp
 3198              	UART_DMATxOnlyAbortCallback:
 3199              	.LFB96:
3484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3200              		.loc 1 3484 0
 3201              		.cfi_startproc
 3202              		@ args = 0, pretend = 0, frame = 0
 3203              		@ frame_needed = 0, uses_anonymous_args = 0
 3204              	.LVL260:
 3205 0000 10B5     		push	{r4, lr}
 3206              	.LCFI24:
 3207              		.cfi_def_cfa_offset 8
 3208              		.cfi_offset 4, -8
 3209              		.cfi_offset 14, -4
3485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3210              		.loc 1 3485 0
 3211 0002 406A     		ldr	r0, [r0, #36]
 3212              	.LVL261:
3487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3213              		.loc 1 3487 0
 3214 0004 0022     		movs	r2, #0
 3215 0006 5223     		movs	r3, #82
 3216 0008 C252     		strh	r2, [r0, r3]
3491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3217              		.loc 1 3491 0
 3218 000a 323B     		subs	r3, r3, #50
 3219 000c 4367     		str	r3, [r0, #116]
3499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3220              		.loc 1 3499 0
 3221 000e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3222              	.LVL262:
3501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3223              		.loc 1 3501 0
 3224              		@ sp needed
 3225 0012 10BD     		pop	{r4, pc}
 3226              		.cfi_endproc
 3227              	.LFE96:
 3229              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3230              		.align	1
 3231              		.weak	HAL_UART_AbortReceiveCpltCallback
 3232              		.syntax unified
 3233              		.code	16
 3234              		.thumb_func
 3235              		.fpu softvfp
 3237              	HAL_UART_AbortReceiveCpltCallback:
 3238              	.LFB70:
2545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3239              		.loc 1 2545 0
 3240              		.cfi_startproc
 3241              		@ args = 0, pretend = 0, frame = 0
 3242              		@ frame_needed = 0, uses_anonymous_args = 0
 3243              		@ link register save eliminated.
 3244              	.LVL263:
2552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3245              		.loc 1 2552 0
 3246              		@ sp needed
 3247 0000 7047     		bx	lr
ARM GAS  /tmp/ccsKZFTZ.s 			page 131


 3248              		.cfi_endproc
 3249              	.LFE70:
 3251              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3252              		.align	1
 3253              		.global	HAL_UART_AbortReceive_IT
 3254              		.syntax unified
 3255              		.code	16
 3256              		.thumb_func
 3257              		.fpu softvfp
 3259              	HAL_UART_AbortReceive_IT:
 3260              	.LFB61:
2150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3261              		.loc 1 2150 0
 3262              		.cfi_startproc
 3263              		@ args = 0, pretend = 0, frame = 0
 3264              		@ frame_needed = 0, uses_anonymous_args = 0
 3265              	.LVL264:
 3266 0000 10B5     		push	{r4, lr}
 3267              	.LCFI25:
 3268              		.cfi_def_cfa_offset 8
 3269              		.cfi_offset 4, -8
 3270              		.cfi_offset 14, -4
 3271 0002 0400     		movs	r4, r0
2152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3272              		.loc 1 2152 0
 3273 0004 0268     		ldr	r2, [r0]
 3274 0006 1368     		ldr	r3, [r2]
 3275 0008 1E49     		ldr	r1, .L224
 3276 000a 0B40     		ands	r3, r1
 3277 000c 1360     		str	r3, [r2]
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3278              		.loc 1 2153 0
 3279 000e 0268     		ldr	r2, [r0]
 3280 0010 9368     		ldr	r3, [r2, #8]
 3281 0012 2331     		adds	r1, r1, #35
 3282 0014 FF31     		adds	r1, r1, #255
 3283 0016 8B43     		bics	r3, r1
 3284 0018 9360     		str	r3, [r2, #8]
2156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3285              		.loc 1 2156 0
 3286 001a 0368     		ldr	r3, [r0]
 3287 001c 9A68     		ldr	r2, [r3, #8]
 3288 001e 5206     		lsls	r2, r2, #25
 3289 0020 24D5     		bpl	.L220
2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3290              		.loc 1 2158 0
 3291 0022 9A68     		ldr	r2, [r3, #8]
 3292 0024 3F31     		adds	r1, r1, #63
 3293 0026 8A43     		bics	r2, r1
 3294 0028 9A60     		str	r2, [r3, #8]
2161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3295              		.loc 1 2161 0
 3296 002a C36E     		ldr	r3, [r0, #108]
 3297 002c 002B     		cmp	r3, #0
 3298 002e 0CD0     		beq	.L221
2165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3299              		.loc 1 2165 0
ARM GAS  /tmp/ccsKZFTZ.s 			page 132


 3300 0030 154A     		ldr	r2, .L224+4
 3301 0032 5A63     		str	r2, [r3, #52]
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3302              		.loc 1 2168 0
 3303 0034 C06E     		ldr	r0, [r0, #108]
 3304              	.LVL265:
 3305 0036 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3306              	.LVL266:
 3307 003a 0028     		cmp	r0, #0
 3308 003c 01D1     		bne	.L223
 3309              	.L222:
2226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3310              		.loc 1 2226 0
 3311 003e 0020     		movs	r0, #0
 3312              		@ sp needed
 3313              	.LVL267:
 3314 0040 10BD     		pop	{r4, pc}
 3315              	.LVL268:
 3316              	.L223:
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3317              		.loc 1 2171 0
 3318 0042 E06E     		ldr	r0, [r4, #108]
 3319 0044 436B     		ldr	r3, [r0, #52]
 3320 0046 9847     		blx	r3
 3321              	.LVL269:
 3322 0048 F9E7     		b	.L222
 3323              	.LVL270:
 3324              	.L221:
2177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3325              		.loc 1 2177 0
 3326 004a 0023     		movs	r3, #0
 3327 004c 5A22     		movs	r2, #90
 3328 004e 8352     		strh	r3, [r0, r2]
2180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3329              		.loc 1 2180 0
 3330 0050 4365     		str	r3, [r0, #84]
2183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3331              		.loc 1 2183 0
 3332 0052 0368     		ldr	r3, [r0]
 3333 0054 4B3A     		subs	r2, r2, #75
 3334 0056 1A62     		str	r2, [r3, #32]
2186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3335              		.loc 1 2186 0
 3336 0058 0268     		ldr	r2, [r0]
 3337 005a 9369     		ldr	r3, [r2, #24]
 3338 005c 0821     		movs	r1, #8
 3339 005e 0B43     		orrs	r3, r1
 3340 0060 9361     		str	r3, [r2, #24]
2189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3341              		.loc 1 2189 0
 3342 0062 2023     		movs	r3, #32
 3343 0064 8367     		str	r3, [r0, #120]
2197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3344              		.loc 1 2197 0
 3345 0066 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3346              	.LVL271:
 3347 006a E8E7     		b	.L222
ARM GAS  /tmp/ccsKZFTZ.s 			page 133


 3348              	.LVL272:
 3349              	.L220:
2204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3350              		.loc 1 2204 0
 3351 006c 0022     		movs	r2, #0
 3352 006e 5A21     		movs	r1, #90
 3353 0070 4252     		strh	r2, [r0, r1]
2207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3354              		.loc 1 2207 0
 3355 0072 4265     		str	r2, [r0, #84]
2210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3356              		.loc 1 2210 0
 3357 0074 0F32     		adds	r2, r2, #15
 3358 0076 1A62     		str	r2, [r3, #32]
2213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3359              		.loc 1 2213 0
 3360 0078 2023     		movs	r3, #32
 3361 007a 8367     		str	r3, [r0, #120]
2221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3362              		.loc 1 2221 0
 3363 007c FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3364              	.LVL273:
 3365 0080 DDE7     		b	.L222
 3366              	.L225:
 3367 0082 C046     		.align	2
 3368              	.L224:
 3369 0084 DFFEFFFF 		.word	-289
 3370 0088 00000000 		.word	UART_DMARxOnlyAbortCallback
 3371              		.cfi_endproc
 3372              	.LFE61:
 3374              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 3375              		.align	1
 3376              		.syntax unified
 3377              		.code	16
 3378              		.thumb_func
 3379              		.fpu softvfp
 3381              	UART_DMARxOnlyAbortCallback:
 3382              	.LFB97:
3512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3383              		.loc 1 3512 0
 3384              		.cfi_startproc
 3385              		@ args = 0, pretend = 0, frame = 0
 3386              		@ frame_needed = 0, uses_anonymous_args = 0
 3387              	.LVL274:
 3388 0000 10B5     		push	{r4, lr}
 3389              	.LCFI26:
 3390              		.cfi_def_cfa_offset 8
 3391              		.cfi_offset 4, -8
 3392              		.cfi_offset 14, -4
3513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3393              		.loc 1 3513 0
 3394 0002 406A     		ldr	r0, [r0, #36]
 3395              	.LVL275:
3515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3396              		.loc 1 3515 0
 3397 0004 0022     		movs	r2, #0
 3398 0006 5A23     		movs	r3, #90
ARM GAS  /tmp/ccsKZFTZ.s 			page 134


 3399 0008 C252     		strh	r2, [r0, r3]
3518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3400              		.loc 1 3518 0
 3401 000a 0368     		ldr	r3, [r0]
 3402 000c 0F32     		adds	r2, r2, #15
 3403 000e 1A62     		str	r2, [r3, #32]
3521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3404              		.loc 1 3521 0
 3405 0010 0268     		ldr	r2, [r0]
 3406 0012 9369     		ldr	r3, [r2, #24]
 3407 0014 0821     		movs	r1, #8
 3408 0016 0B43     		orrs	r3, r1
 3409 0018 9361     		str	r3, [r2, #24]
3524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3410              		.loc 1 3524 0
 3411 001a 2023     		movs	r3, #32
 3412 001c 8367     		str	r3, [r0, #120]
3532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3413              		.loc 1 3532 0
 3414 001e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3415              	.LVL276:
3534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3416              		.loc 1 3534 0
 3417              		@ sp needed
 3418 0022 10BD     		pop	{r4, pc}
 3419              		.cfi_endproc
 3420              	.LFE97:
 3422              		.section	.text.HAL_UART_ReceiverTimeout_Config,"ax",%progbits
 3423              		.align	1
 3424              		.global	HAL_UART_ReceiverTimeout_Config
 3425              		.syntax unified
 3426              		.code	16
 3427              		.thumb_func
 3428              		.fpu softvfp
 3430              	HAL_UART_ReceiverTimeout_Config:
 3431              	.LFB71:
2592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
 3432              		.loc 1 2592 0
 3433              		.cfi_startproc
 3434              		@ args = 0, pretend = 0, frame = 0
 3435              		@ frame_needed = 0, uses_anonymous_args = 0
 3436              		@ link register save eliminated.
 3437              	.LVL277:
2594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3438              		.loc 1 2594 0
 3439 0000 0268     		ldr	r2, [r0]
 3440 0002 5369     		ldr	r3, [r2, #20]
 3441 0004 1B0E     		lsrs	r3, r3, #24
 3442 0006 1B06     		lsls	r3, r3, #24
 3443 0008 1943     		orrs	r1, r3
 3444              	.LVL278:
 3445 000a 5161     		str	r1, [r2, #20]
2595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3446              		.loc 1 2595 0
 3447              		@ sp needed
 3448 000c 7047     		bx	lr
 3449              		.cfi_endproc
ARM GAS  /tmp/ccsKZFTZ.s 			page 135


 3450              	.LFE71:
 3452              		.section	.text.HAL_UART_EnableReceiverTimeout,"ax",%progbits
 3453              		.align	1
 3454              		.global	HAL_UART_EnableReceiverTimeout
 3455              		.syntax unified
 3456              		.code	16
 3457              		.thumb_func
 3458              		.fpu softvfp
 3460              	HAL_UART_EnableReceiverTimeout:
 3461              	.LFB72:
2604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 3462              		.loc 1 2604 0
 3463              		.cfi_startproc
 3464              		@ args = 0, pretend = 0, frame = 0
 3465              		@ frame_needed = 0, uses_anonymous_args = 0
 3466              	.LVL279:
 3467 0000 10B5     		push	{r4, lr}
 3468              	.LCFI27:
 3469              		.cfi_def_cfa_offset 8
 3470              		.cfi_offset 4, -8
 3471              		.cfi_offset 14, -4
2605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3472              		.loc 1 2605 0
 3473 0002 436F     		ldr	r3, [r0, #116]
 3474 0004 202B     		cmp	r3, #32
 3475 0006 01D0     		beq	.L232
2624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3476              		.loc 1 2624 0
 3477 0008 0220     		movs	r0, #2
 3478              	.LVL280:
 3479              	.L229:
2626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3480              		.loc 1 2626 0
 3481              		@ sp needed
 3482 000a 10BD     		pop	{r4, pc}
 3483              	.LVL281:
 3484              	.L232:
2608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3485              		.loc 1 2608 0
 3486 000c 5033     		adds	r3, r3, #80
 3487 000e C35C     		ldrb	r3, [r0, r3]
 3488 0010 012B     		cmp	r3, #1
 3489 0012 10D0     		beq	.L231
2608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3490              		.loc 1 2608 0 is_stmt 0 discriminator 2
 3491 0014 7022     		movs	r2, #112
 3492 0016 0123     		movs	r3, #1
 3493 0018 8354     		strb	r3, [r0, r2]
2610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3494              		.loc 1 2610 0 is_stmt 1 discriminator 2
 3495 001a 2333     		adds	r3, r3, #35
 3496 001c 4367     		str	r3, [r0, #116]
2613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3497              		.loc 1 2613 0 discriminator 2
 3498 001e 0168     		ldr	r1, [r0]
 3499 0020 4C68     		ldr	r4, [r1, #4]
 3500 0022 8023     		movs	r3, #128
ARM GAS  /tmp/ccsKZFTZ.s 			page 136


 3501 0024 1B04     		lsls	r3, r3, #16
 3502 0026 2343     		orrs	r3, r4
 3503 0028 4B60     		str	r3, [r1, #4]
2615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3504              		.loc 1 2615 0 discriminator 2
 3505 002a 2023     		movs	r3, #32
 3506 002c 4367     		str	r3, [r0, #116]
2618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3507              		.loc 1 2618 0 discriminator 2
 3508 002e 0023     		movs	r3, #0
 3509 0030 8354     		strb	r3, [r0, r2]
2620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3510              		.loc 1 2620 0 discriminator 2
 3511 0032 0020     		movs	r0, #0
 3512              	.LVL282:
 3513 0034 E9E7     		b	.L229
 3514              	.LVL283:
 3515              	.L231:
2608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3516              		.loc 1 2608 0
 3517 0036 0220     		movs	r0, #2
 3518              	.LVL284:
 3519 0038 E7E7     		b	.L229
 3520              		.cfi_endproc
 3521              	.LFE72:
 3523              		.section	.text.HAL_UART_DisableReceiverTimeout,"ax",%progbits
 3524              		.align	1
 3525              		.global	HAL_UART_DisableReceiverTimeout
 3526              		.syntax unified
 3527              		.code	16
 3528              		.thumb_func
 3529              		.fpu softvfp
 3531              	HAL_UART_DisableReceiverTimeout:
 3532              	.LFB73:
2635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 3533              		.loc 1 2635 0
 3534              		.cfi_startproc
 3535              		@ args = 0, pretend = 0, frame = 0
 3536              		@ frame_needed = 0, uses_anonymous_args = 0
 3537              	.LVL285:
 3538 0000 10B5     		push	{r4, lr}
 3539              	.LCFI28:
 3540              		.cfi_def_cfa_offset 8
 3541              		.cfi_offset 4, -8
 3542              		.cfi_offset 14, -4
2636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3543              		.loc 1 2636 0
 3544 0002 436F     		ldr	r3, [r0, #116]
 3545 0004 202B     		cmp	r3, #32
 3546 0006 01D0     		beq	.L237
2655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3547              		.loc 1 2655 0
 3548 0008 0220     		movs	r0, #2
 3549              	.LVL286:
 3550              	.L234:
2657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3551              		.loc 1 2657 0
ARM GAS  /tmp/ccsKZFTZ.s 			page 137


 3552              		@ sp needed
 3553 000a 10BD     		pop	{r4, pc}
 3554              	.LVL287:
 3555              	.L237:
2639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3556              		.loc 1 2639 0
 3557 000c 5033     		adds	r3, r3, #80
 3558 000e C35C     		ldrb	r3, [r0, r3]
 3559 0010 012B     		cmp	r3, #1
 3560 0012 0FD0     		beq	.L236
2639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3561              		.loc 1 2639 0 is_stmt 0 discriminator 2
 3562 0014 7022     		movs	r2, #112
 3563 0016 0123     		movs	r3, #1
 3564 0018 8354     		strb	r3, [r0, r2]
2641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3565              		.loc 1 2641 0 is_stmt 1 discriminator 2
 3566 001a 2333     		adds	r3, r3, #35
 3567 001c 4367     		str	r3, [r0, #116]
2644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3568              		.loc 1 2644 0 discriminator 2
 3569 001e 0168     		ldr	r1, [r0]
 3570 0020 4B68     		ldr	r3, [r1, #4]
 3571 0022 054C     		ldr	r4, .L238
 3572 0024 2340     		ands	r3, r4
 3573 0026 4B60     		str	r3, [r1, #4]
2646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3574              		.loc 1 2646 0 discriminator 2
 3575 0028 2023     		movs	r3, #32
 3576 002a 4367     		str	r3, [r0, #116]
2649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3577              		.loc 1 2649 0 discriminator 2
 3578 002c 0023     		movs	r3, #0
 3579 002e 8354     		strb	r3, [r0, r2]
2651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3580              		.loc 1 2651 0 discriminator 2
 3581 0030 0020     		movs	r0, #0
 3582              	.LVL288:
 3583 0032 EAE7     		b	.L234
 3584              	.LVL289:
 3585              	.L236:
2639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3586              		.loc 1 2639 0
 3587 0034 0220     		movs	r0, #2
 3588              	.LVL290:
 3589 0036 E8E7     		b	.L234
 3590              	.L239:
 3591              		.align	2
 3592              	.L238:
 3593 0038 FFFF7FFF 		.word	-8388609
 3594              		.cfi_endproc
 3595              	.LFE73:
 3597              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3598              		.align	1
 3599              		.global	HAL_MultiProcessor_EnterMuteMode
 3600              		.syntax unified
 3601              		.code	16
ARM GAS  /tmp/ccsKZFTZ.s 			page 138


 3602              		.thumb_func
 3603              		.fpu softvfp
 3605              	HAL_MultiProcessor_EnterMuteMode:
 3606              	.LFB76:
2706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 3607              		.loc 1 2706 0
 3608              		.cfi_startproc
 3609              		@ args = 0, pretend = 0, frame = 0
 3610              		@ frame_needed = 0, uses_anonymous_args = 0
 3611              		@ link register save eliminated.
 3612              	.LVL291:
2707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3613              		.loc 1 2707 0
 3614 0000 0268     		ldr	r2, [r0]
 3615 0002 9369     		ldr	r3, [r2, #24]
 3616 0004 0421     		movs	r1, #4
 3617 0006 0B43     		orrs	r3, r1
 3618 0008 9361     		str	r3, [r2, #24]
2708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3619              		.loc 1 2708 0
 3620              		@ sp needed
 3621 000a 7047     		bx	lr
 3622              		.cfi_endproc
 3623              	.LFE76:
 3625              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3626              		.align	1
 3627              		.global	HAL_HalfDuplex_EnableTransmitter
 3628              		.syntax unified
 3629              		.code	16
 3630              		.thumb_func
 3631              		.fpu softvfp
 3633              	HAL_HalfDuplex_EnableTransmitter:
 3634              	.LFB77:
2716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 3635              		.loc 1 2716 0
 3636              		.cfi_startproc
 3637              		@ args = 0, pretend = 0, frame = 0
 3638              		@ frame_needed = 0, uses_anonymous_args = 0
 3639              	.LVL292:
 3640 0000 10B5     		push	{r4, lr}
 3641              	.LCFI29:
 3642              		.cfi_def_cfa_offset 8
 3643              		.cfi_offset 4, -8
 3644              		.cfi_offset 14, -4
2717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3645              		.loc 1 2717 0
 3646 0002 7023     		movs	r3, #112
 3647 0004 C35C     		ldrb	r3, [r0, r3]
 3648 0006 012B     		cmp	r3, #1
 3649 0008 14D0     		beq	.L243
2717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3650              		.loc 1 2717 0 is_stmt 0 discriminator 2
 3651 000a 7022     		movs	r2, #112
 3652 000c 0123     		movs	r3, #1
 3653 000e 8354     		strb	r3, [r0, r2]
2718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3654              		.loc 1 2718 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccsKZFTZ.s 			page 139


 3655 0010 2333     		adds	r3, r3, #35
 3656 0012 4367     		str	r3, [r0, #116]
2721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3657              		.loc 1 2721 0 discriminator 2
 3658 0014 0168     		ldr	r1, [r0]
 3659 0016 0B68     		ldr	r3, [r1]
 3660 0018 0C24     		movs	r4, #12
 3661 001a A343     		bics	r3, r4
 3662 001c 0B60     		str	r3, [r1]
2724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3663              		.loc 1 2724 0 discriminator 2
 3664 001e 0168     		ldr	r1, [r0]
 3665 0020 0B68     		ldr	r3, [r1]
 3666 0022 043C     		subs	r4, r4, #4
 3667 0024 2343     		orrs	r3, r4
 3668 0026 0B60     		str	r3, [r1]
2726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3669              		.loc 1 2726 0 discriminator 2
 3670 0028 2023     		movs	r3, #32
 3671 002a 4367     		str	r3, [r0, #116]
2728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3672              		.loc 1 2728 0 discriminator 2
 3673 002c 0023     		movs	r3, #0
 3674 002e 8354     		strb	r3, [r0, r2]
2730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3675              		.loc 1 2730 0 discriminator 2
 3676 0030 0020     		movs	r0, #0
 3677              	.LVL293:
 3678              	.L242:
2731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3679              		.loc 1 2731 0
 3680              		@ sp needed
 3681 0032 10BD     		pop	{r4, pc}
 3682              	.LVL294:
 3683              	.L243:
2717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3684              		.loc 1 2717 0
 3685 0034 0220     		movs	r0, #2
 3686              	.LVL295:
 3687 0036 FCE7     		b	.L242
 3688              		.cfi_endproc
 3689              	.LFE77:
 3691              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 3692              		.align	1
 3693              		.global	HAL_HalfDuplex_EnableReceiver
 3694              		.syntax unified
 3695              		.code	16
 3696              		.thumb_func
 3697              		.fpu softvfp
 3699              	HAL_HalfDuplex_EnableReceiver:
 3700              	.LFB78:
2739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 3701              		.loc 1 2739 0
 3702              		.cfi_startproc
 3703              		@ args = 0, pretend = 0, frame = 0
 3704              		@ frame_needed = 0, uses_anonymous_args = 0
 3705              	.LVL296:
ARM GAS  /tmp/ccsKZFTZ.s 			page 140


 3706 0000 10B5     		push	{r4, lr}
 3707              	.LCFI30:
 3708              		.cfi_def_cfa_offset 8
 3709              		.cfi_offset 4, -8
 3710              		.cfi_offset 14, -4
2740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3711              		.loc 1 2740 0
 3712 0002 7023     		movs	r3, #112
 3713 0004 C35C     		ldrb	r3, [r0, r3]
 3714 0006 012B     		cmp	r3, #1
 3715 0008 14D0     		beq	.L246
2740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3716              		.loc 1 2740 0 is_stmt 0 discriminator 2
 3717 000a 7022     		movs	r2, #112
 3718 000c 0123     		movs	r3, #1
 3719 000e 8354     		strb	r3, [r0, r2]
2741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3720              		.loc 1 2741 0 is_stmt 1 discriminator 2
 3721 0010 2333     		adds	r3, r3, #35
 3722 0012 4367     		str	r3, [r0, #116]
2744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3723              		.loc 1 2744 0 discriminator 2
 3724 0014 0168     		ldr	r1, [r0]
 3725 0016 0B68     		ldr	r3, [r1]
 3726 0018 0C24     		movs	r4, #12
 3727 001a A343     		bics	r3, r4
 3728 001c 0B60     		str	r3, [r1]
2747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3729              		.loc 1 2747 0 discriminator 2
 3730 001e 0168     		ldr	r1, [r0]
 3731 0020 0B68     		ldr	r3, [r1]
 3732 0022 083C     		subs	r4, r4, #8
 3733 0024 2343     		orrs	r3, r4
 3734 0026 0B60     		str	r3, [r1]
2749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3735              		.loc 1 2749 0 discriminator 2
 3736 0028 2023     		movs	r3, #32
 3737 002a 4367     		str	r3, [r0, #116]
2751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3738              		.loc 1 2751 0 discriminator 2
 3739 002c 0023     		movs	r3, #0
 3740 002e 8354     		strb	r3, [r0, r2]
2753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3741              		.loc 1 2753 0 discriminator 2
 3742 0030 0020     		movs	r0, #0
 3743              	.LVL297:
 3744              	.L245:
2754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3745              		.loc 1 2754 0
 3746              		@ sp needed
 3747 0032 10BD     		pop	{r4, pc}
 3748              	.LVL298:
 3749              	.L246:
2740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3750              		.loc 1 2740 0
 3751 0034 0220     		movs	r0, #2
 3752              	.LVL299:
ARM GAS  /tmp/ccsKZFTZ.s 			page 141


 3753 0036 FCE7     		b	.L245
 3754              		.cfi_endproc
 3755              	.LFE78:
 3757              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3758              		.align	1
 3759              		.global	HAL_LIN_SendBreak
 3760              		.syntax unified
 3761              		.code	16
 3762              		.thumb_func
 3763              		.fpu softvfp
 3765              	HAL_LIN_SendBreak:
 3766              	.LFB79:
2764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
 3767              		.loc 1 2764 0
 3768              		.cfi_startproc
 3769              		@ args = 0, pretend = 0, frame = 0
 3770              		@ frame_needed = 0, uses_anonymous_args = 0
 3771              	.LVL300:
 3772 0000 10B5     		push	{r4, lr}
 3773              	.LCFI31:
 3774              		.cfi_def_cfa_offset 8
 3775              		.cfi_offset 4, -8
 3776              		.cfi_offset 14, -4
2768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3777              		.loc 1 2768 0
 3778 0002 7023     		movs	r3, #112
 3779 0004 C35C     		ldrb	r3, [r0, r3]
 3780 0006 012B     		cmp	r3, #1
 3781 0008 0FD0     		beq	.L249
2768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3782              		.loc 1 2768 0 is_stmt 0 discriminator 2
 3783 000a 7022     		movs	r2, #112
 3784 000c 0123     		movs	r3, #1
 3785 000e 8354     		strb	r3, [r0, r2]
2770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3786              		.loc 1 2770 0 is_stmt 1 discriminator 2
 3787 0010 2333     		adds	r3, r3, #35
 3788 0012 4367     		str	r3, [r0, #116]
2773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3789              		.loc 1 2773 0 discriminator 2
 3790 0014 0168     		ldr	r1, [r0]
 3791 0016 8B69     		ldr	r3, [r1, #24]
 3792 0018 0224     		movs	r4, #2
 3793 001a 2343     		orrs	r3, r4
 3794 001c 8B61     		str	r3, [r1, #24]
2775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3795              		.loc 1 2775 0 discriminator 2
 3796 001e 2023     		movs	r3, #32
 3797 0020 4367     		str	r3, [r0, #116]
2777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3798              		.loc 1 2777 0 discriminator 2
 3799 0022 0023     		movs	r3, #0
 3800 0024 8354     		strb	r3, [r0, r2]
2779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3801              		.loc 1 2779 0 discriminator 2
 3802 0026 0020     		movs	r0, #0
 3803              	.LVL301:
ARM GAS  /tmp/ccsKZFTZ.s 			page 142


 3804              	.L248:
2780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR2_LINEN */
 3805              		.loc 1 2780 0
 3806              		@ sp needed
 3807 0028 10BD     		pop	{r4, pc}
 3808              	.LVL302:
 3809              	.L249:
2768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3810              		.loc 1 2768 0
 3811 002a 0220     		movs	r0, #2
 3812              	.LVL303:
 3813 002c FCE7     		b	.L248
 3814              		.cfi_endproc
 3815              	.LFE79:
 3817              		.section	.text.HAL_UART_GetState,"ax",%progbits
 3818              		.align	1
 3819              		.global	HAL_UART_GetState
 3820              		.syntax unified
 3821              		.code	16
 3822              		.thumb_func
 3823              		.fpu softvfp
 3825              	HAL_UART_GetState:
 3826              	.LFB80:
2810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t temp1;
 3827              		.loc 1 2810 0
 3828              		.cfi_startproc
 3829              		@ args = 0, pretend = 0, frame = 0
 3830              		@ frame_needed = 0, uses_anonymous_args = 0
 3831              		@ link register save eliminated.
 3832              	.LVL304:
2813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp2 = huart->RxState;
 3833              		.loc 1 2813 0
 3834 0000 436F     		ldr	r3, [r0, #116]
 3835              	.LVL305:
2814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3836              		.loc 1 2814 0
 3837 0002 806F     		ldr	r0, [r0, #120]
 3838              	.LVL306:
2816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3839              		.loc 1 2816 0
 3840 0004 1843     		orrs	r0, r3
 3841              	.LVL307:
2817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3842              		.loc 1 2817 0
 3843              		@ sp needed
 3844 0006 7047     		bx	lr
 3845              		.cfi_endproc
 3846              	.LFE80:
 3848              		.section	.text.HAL_UART_GetError,"ax",%progbits
 3849              		.align	1
 3850              		.global	HAL_UART_GetError
 3851              		.syntax unified
 3852              		.code	16
 3853              		.thumb_func
 3854              		.fpu softvfp
 3856              	HAL_UART_GetError:
 3857              	.LFB81:
ARM GAS  /tmp/ccsKZFTZ.s 			page 143


2826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return huart->ErrorCode;
 3858              		.loc 1 2826 0
 3859              		.cfi_startproc
 3860              		@ args = 0, pretend = 0, frame = 0
 3861              		@ frame_needed = 0, uses_anonymous_args = 0
 3862              		@ link register save eliminated.
 3863              	.LVL308:
2827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3864              		.loc 1 2827 0
 3865 0000 C06F     		ldr	r0, [r0, #124]
 3866              	.LVL309:
2828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 3867              		.loc 1 2828 0
 3868              		@ sp needed
 3869 0002 7047     		bx	lr
 3870              		.cfi_endproc
 3871              	.LFE81:
 3873              		.global	__aeabi_uidiv
 3874              		.section	.text.UART_SetConfig,"ax",%progbits
 3875              		.align	1
 3876              		.global	UART_SetConfig
 3877              		.syntax unified
 3878              		.code	16
 3879              		.thumb_func
 3880              		.fpu softvfp
 3882              	UART_SetConfig:
 3883              	.LFB82:
2871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tmpreg;
 3884              		.loc 1 2871 0
 3885              		.cfi_startproc
 3886              		@ args = 0, pretend = 0, frame = 0
 3887              		@ frame_needed = 0, uses_anonymous_args = 0
 3888              	.LVL310:
 3889 0000 10B5     		push	{r4, lr}
 3890              	.LCFI32:
 3891              		.cfi_def_cfa_offset 8
 3892              		.cfi_offset 4, -8
 3893              		.cfi_offset 14, -4
 3894 0002 0400     		movs	r4, r0
 3895              	.LVL311:
2897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 3896              		.loc 1 2897 0
 3897 0004 8368     		ldr	r3, [r0, #8]
 3898 0006 0269     		ldr	r2, [r0, #16]
 3899 0008 1343     		orrs	r3, r2
 3900 000a 4269     		ldr	r2, [r0, #20]
 3901 000c 1343     		orrs	r3, r2
 3902 000e C269     		ldr	r2, [r0, #28]
 3903 0010 1343     		orrs	r3, r2
 3904              	.LVL312:
2898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3905              		.loc 1 2898 0
 3906 0012 0168     		ldr	r1, [r0]
 3907 0014 0A68     		ldr	r2, [r1]
 3908 0016 9648     		ldr	r0, .L307
 3909              	.LVL313:
 3910 0018 0240     		ands	r2, r0
ARM GAS  /tmp/ccsKZFTZ.s 			page 144


 3911 001a 1343     		orrs	r3, r2
 3912              	.LVL314:
 3913 001c 0B60     		str	r3, [r1]
 3914              	.LVL315:
2903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3915              		.loc 1 2903 0
 3916 001e 2268     		ldr	r2, [r4]
 3917 0020 5368     		ldr	r3, [r2, #4]
 3918 0022 9449     		ldr	r1, .L307+4
 3919 0024 0B40     		ands	r3, r1
 3920 0026 E168     		ldr	r1, [r4, #12]
 3921 0028 0B43     		orrs	r3, r1
 3922 002a 5360     		str	r3, [r2, #4]
 3923              	.LVL316:
2913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 3924              		.loc 1 2913 0
 3925 002c A369     		ldr	r3, [r4, #24]
 3926 002e 226A     		ldr	r2, [r4, #32]
 3927 0030 1343     		orrs	r3, r2
 3928              	.LVL317:
2914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3929              		.loc 1 2914 0
 3930 0032 2168     		ldr	r1, [r4]
 3931 0034 8A68     		ldr	r2, [r1, #8]
 3932 0036 9048     		ldr	r0, .L307+8
 3933 0038 0240     		ands	r2, r0
 3934 003a 1343     		orrs	r3, r2
 3935              	.LVL318:
 3936 003c 8B60     		str	r3, [r1, #8]
 3937              	.LVL319:
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3938              		.loc 1 2918 0
 3939 003e 2368     		ldr	r3, [r4]
 3940 0040 8E4A     		ldr	r2, .L307+12
 3941 0042 9342     		cmp	r3, r2
 3942 0044 33D0     		beq	.L298
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3943              		.loc 1 2918 0 is_stmt 0 discriminator 2
 3944 0046 8E4A     		ldr	r2, .L307+16
 3945 0048 9342     		cmp	r3, r2
 3946 004a 44D0     		beq	.L299
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3947              		.loc 1 2918 0 discriminator 9
 3948 004c 8D4A     		ldr	r2, .L307+20
 3949 004e 9342     		cmp	r3, r2
 3950 0050 5FD0     		beq	.L300
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3951              		.loc 1 2918 0 discriminator 16
 3952 0052 8D4A     		ldr	r2, .L307+24
 3953 0054 9342     		cmp	r3, r2
 3954 0056 00D1     		bne	.LCB3416
 3955 0058 7DE0     		b	.L288	@long jump
 3956              	.LCB3416:
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3957              		.loc 1 2918 0 discriminator 23
 3958 005a 8C4A     		ldr	r2, .L307+28
 3959 005c 9342     		cmp	r3, r2
ARM GAS  /tmp/ccsKZFTZ.s 			page 145


 3960 005e 7CD0     		beq	.L289
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3961              		.loc 1 2918 0 discriminator 25
 3962 0060 8B4A     		ldr	r2, .L307+32
 3963 0062 9342     		cmp	r3, r2
 3964 0064 7BD0     		beq	.L290
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3965              		.loc 1 2918 0 discriminator 27
 3966 0066 8B4A     		ldr	r2, .L307+36
 3967 0068 9342     		cmp	r3, r2
 3968 006a 7AD0     		beq	.L291
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3969              		.loc 1 2918 0 discriminator 29
 3970 006c 8A4A     		ldr	r2, .L307+40
 3971 006e 9342     		cmp	r3, r2
 3972 0070 6DD0     		beq	.L301
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3973              		.loc 1 2918 0
 3974 0072 1023     		movs	r3, #16
 3975              	.L258:
 3976              	.LVL320:
2920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3977              		.loc 1 2920 0 is_stmt 1
 3978 0074 8022     		movs	r2, #128
 3979 0076 1202     		lsls	r2, r2, #8
 3980 0078 E169     		ldr	r1, [r4, #28]
 3981 007a 9142     		cmp	r1, r2
 3982 007c 73D0     		beq	.L302
2957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3983              		.loc 1 2957 0
 3984 007e 022B     		cmp	r3, #2
 3985 0080 00D1     		bne	.LCB3440
 3986 0082 D6E0     		b	.L280	@long jump
 3987              	.LCB3440:
 3988 0084 00D8     		bhi	.LCB3442
 3989 0086 BCE0     		b	.L303	@long jump
 3990              	.LCB3442:
 3991 0088 042B     		cmp	r3, #4
 3992 008a 00D1     		bne	.LCB3444
 3993 008c DDE0     		b	.L283	@long jump
 3994              	.LCB3444:
 3995 008e 082B     		cmp	r3, #8
 3996 0090 00D0     		beq	.LCB3446
 3997 0092 E6E0     		b	.L295	@long jump
 3998              	.LCB3446:
2971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 3999              		.loc 1 2971 0
 4000 0094 6368     		ldr	r3, [r4, #4]
 4001              	.LVL321:
 4002 0096 5808     		lsrs	r0, r3, #1
 4003 0098 8023     		movs	r3, #128
 4004 009a 1B02     		lsls	r3, r3, #8
 4005 009c 9C46     		mov	ip, r3
 4006 009e 6044     		add	r0, r0, ip
 4007 00a0 6168     		ldr	r1, [r4, #4]
 4008 00a2 FFF7FEFF 		bl	__aeabi_uidiv
 4009              	.LVL322:
ARM GAS  /tmp/ccsKZFTZ.s 			page 146


 4010 00a6 0304     		lsls	r3, r0, #16
 4011 00a8 1B0C     		lsrs	r3, r3, #16
 4012              	.LVL323:
2876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t pclk;
 4013              		.loc 1 2876 0
 4014 00aa 0020     		movs	r0, #0
2972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default:
 4015              		.loc 1 2972 0
 4016 00ac B6E0     		b	.L279
 4017              	.LVL324:
 4018              	.L298:
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4019              		.loc 1 2918 0 discriminator 1
 4020 00ae 7B4B     		ldr	r3, .L307+44
 4021 00b0 1A6B     		ldr	r2, [r3, #48]
 4022 00b2 0323     		movs	r3, #3
 4023 00b4 1340     		ands	r3, r2
 4024 00b6 012B     		cmp	r3, #1
 4025 00b8 09D0     		beq	.L255
 4026 00ba 002B     		cmp	r3, #0
 4027 00bc 05D0     		beq	.L256
 4028 00be 022B     		cmp	r3, #2
 4029 00c0 07D0     		beq	.L257
 4030 00c2 032B     		cmp	r3, #3
 4031 00c4 45D0     		beq	.L285
 4032              	.LVL325:
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4033              		.loc 1 2918 0 is_stmt 0 discriminator 3
 4034 00c6 1023     		movs	r3, #16
 4035 00c8 D4E7     		b	.L258
 4036              	.LVL326:
 4037              	.L256:
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4038              		.loc 1 2918 0
 4039 00ca 0023     		movs	r3, #0
 4040 00cc D2E7     		b	.L258
 4041              	.L255:
 4042              	.LVL327:
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4043              		.loc 1 2918 0 discriminator 5
 4044 00ce 0423     		movs	r3, #4
 4045 00d0 D0E7     		b	.L258
 4046              	.LVL328:
 4047              	.L257:
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4048              		.loc 1 2918 0 discriminator 6
 4049 00d2 0823     		movs	r3, #8
 4050 00d4 CEE7     		b	.L258
 4051              	.LVL329:
 4052              	.L299:
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4053              		.loc 1 2918 0 discriminator 8
 4054 00d6 714B     		ldr	r3, .L307+44
 4055 00d8 1B6B     		ldr	r3, [r3, #48]
 4056 00da C022     		movs	r2, #192
 4057 00dc 9202     		lsls	r2, r2, #10
 4058 00de 1340     		ands	r3, r2
ARM GAS  /tmp/ccsKZFTZ.s 			page 147


 4059 00e0 8022     		movs	r2, #128
 4060 00e2 5202     		lsls	r2, r2, #9
 4061 00e4 9342     		cmp	r3, r2
 4062 00e6 0ED0     		beq	.L261
 4063 00e8 09D9     		bls	.L304
 4064 00ea 8022     		movs	r2, #128
 4065 00ec 9202     		lsls	r2, r2, #10
 4066 00ee 9342     		cmp	r3, r2
 4067 00f0 0BD0     		beq	.L264
 4068 00f2 C022     		movs	r2, #192
 4069 00f4 9202     		lsls	r2, r2, #10
 4070 00f6 9342     		cmp	r3, r2
 4071 00f8 09D1     		bne	.L260
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4072              		.loc 1 2918 0
 4073 00fa 0223     		movs	r3, #2
 4074 00fc BAE7     		b	.L258
 4075              	.L304:
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4076              		.loc 1 2918 0 discriminator 8
 4077 00fe 002B     		cmp	r3, #0
 4078 0100 05D1     		bne	.L260
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4079              		.loc 1 2918 0
 4080 0102 0023     		movs	r3, #0
 4081 0104 B6E7     		b	.L258
 4082              	.L261:
 4083              	.LVL330:
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4084              		.loc 1 2918 0 discriminator 12
 4085 0106 0423     		movs	r3, #4
 4086 0108 B4E7     		b	.L258
 4087              	.LVL331:
 4088              	.L264:
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4089              		.loc 1 2918 0 discriminator 13
 4090 010a 0823     		movs	r3, #8
 4091 010c B2E7     		b	.L258
 4092              	.LVL332:
 4093              	.L260:
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4094              		.loc 1 2918 0 discriminator 10
 4095 010e 1023     		movs	r3, #16
 4096 0110 B0E7     		b	.L258
 4097              	.LVL333:
 4098              	.L300:
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4099              		.loc 1 2918 0 discriminator 15
 4100 0112 624B     		ldr	r3, .L307+44
 4101 0114 1B6B     		ldr	r3, [r3, #48]
 4102 0116 C022     		movs	r2, #192
 4103 0118 1203     		lsls	r2, r2, #12
 4104 011a 1340     		ands	r3, r2
 4105 011c 8022     		movs	r2, #128
 4106 011e D202     		lsls	r2, r2, #11
 4107 0120 9342     		cmp	r3, r2
 4108 0122 0ED0     		beq	.L267
ARM GAS  /tmp/ccsKZFTZ.s 			page 148


 4109 0124 09D9     		bls	.L305
 4110 0126 8022     		movs	r2, #128
 4111 0128 1203     		lsls	r2, r2, #12
 4112 012a 9342     		cmp	r3, r2
 4113 012c 0BD0     		beq	.L270
 4114 012e C022     		movs	r2, #192
 4115 0130 1203     		lsls	r2, r2, #12
 4116 0132 9342     		cmp	r3, r2
 4117 0134 09D1     		bne	.L266
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4118              		.loc 1 2918 0
 4119 0136 0223     		movs	r3, #2
 4120 0138 9CE7     		b	.L258
 4121              	.L305:
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4122              		.loc 1 2918 0 discriminator 15
 4123 013a 002B     		cmp	r3, #0
 4124 013c 05D1     		bne	.L266
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4125              		.loc 1 2918 0
 4126 013e 0023     		movs	r3, #0
 4127 0140 98E7     		b	.L258
 4128              	.L267:
 4129              	.LVL334:
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4130              		.loc 1 2918 0 discriminator 19
 4131 0142 0423     		movs	r3, #4
 4132 0144 96E7     		b	.L258
 4133              	.LVL335:
 4134              	.L270:
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4135              		.loc 1 2918 0 discriminator 20
 4136 0146 0823     		movs	r3, #8
 4137 0148 94E7     		b	.L258
 4138              	.LVL336:
 4139              	.L266:
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4140              		.loc 1 2918 0 discriminator 17
 4141 014a 1023     		movs	r3, #16
 4142 014c 92E7     		b	.L258
 4143              	.LVL337:
 4144              	.L301:
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4145              		.loc 1 2918 0
 4146 014e 0023     		movs	r3, #0
 4147 0150 90E7     		b	.L258
 4148              	.L285:
 4149 0152 0223     		movs	r3, #2
 4150 0154 8EE7     		b	.L258
 4151              	.L288:
 4152 0156 0023     		movs	r3, #0
 4153 0158 8CE7     		b	.L258
 4154              	.L289:
 4155 015a 0023     		movs	r3, #0
 4156 015c 8AE7     		b	.L258
 4157              	.L290:
 4158 015e 0023     		movs	r3, #0
ARM GAS  /tmp/ccsKZFTZ.s 			page 149


 4159 0160 88E7     		b	.L258
 4160              	.L291:
 4161 0162 0023     		movs	r3, #0
 4162 0164 86E7     		b	.L258
 4163              	.LVL338:
 4164              	.L302:
2922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4165              		.loc 1 2922 0 is_stmt 1
 4166 0166 022B     		cmp	r3, #2
 4167 0168 2FD0     		beq	.L273
 4168 016a 10D9     		bls	.L306
 4169 016c 042B     		cmp	r3, #4
 4170 016e 38D0     		beq	.L276
 4171 0170 082B     		cmp	r3, #8
 4172 0172 43D1     		bne	.L293
2936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 4173              		.loc 1 2936 0
 4174 0174 6368     		ldr	r3, [r4, #4]
 4175              	.LVL339:
 4176 0176 5808     		lsrs	r0, r3, #1
 4177 0178 8023     		movs	r3, #128
 4178 017a 5B02     		lsls	r3, r3, #9
 4179 017c 9C46     		mov	ip, r3
 4180 017e 6044     		add	r0, r0, ip
 4181 0180 6168     		ldr	r1, [r4, #4]
 4182 0182 FFF7FEFF 		bl	__aeabi_uidiv
 4183              	.LVL340:
 4184 0186 0304     		lsls	r3, r0, #16
 4185 0188 1B0C     		lsrs	r3, r3, #16
 4186              	.LVL341:
2876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t pclk;
 4187              		.loc 1 2876 0
 4188 018a 0020     		movs	r0, #0
2937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default:
 4189              		.loc 1 2937 0
 4190 018c 0DE0     		b	.L272
 4191              	.LVL342:
 4192              	.L306:
2922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4193              		.loc 1 2922 0
 4194 018e 002B     		cmp	r3, #0
 4195 0190 34D1     		bne	.L293
2925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 4196              		.loc 1 2925 0
 4197 0192 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4198              	.LVL343:
2926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 4199              		.loc 1 2926 0
 4200 0196 4000     		lsls	r0, r0, #1
 4201              	.LVL344:
 4202 0198 6368     		ldr	r3, [r4, #4]
 4203 019a 5B08     		lsrs	r3, r3, #1
 4204 019c C018     		adds	r0, r0, r3
 4205 019e 6168     		ldr	r1, [r4, #4]
 4206 01a0 FFF7FEFF 		bl	__aeabi_uidiv
 4207              	.LVL345:
 4208 01a4 0304     		lsls	r3, r0, #16
ARM GAS  /tmp/ccsKZFTZ.s 			page 150


 4209 01a6 1B0C     		lsrs	r3, r3, #16
 4210              	.LVL346:
2876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t pclk;
 4211              		.loc 1 2876 0
 4212 01a8 0020     		movs	r0, #0
 4213              	.LVL347:
 4214              	.L272:
2944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4215              		.loc 1 2944 0
 4216 01aa 3D49     		ldr	r1, .L307+48
 4217 01ac 1A00     		movs	r2, r3
 4218 01ae 103A     		subs	r2, r2, #16
 4219 01b0 8A42     		cmp	r2, r1
 4220 01b2 59D8     		bhi	.L294
2946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 4221              		.loc 1 2946 0
 4222 01b4 0F22     		movs	r2, #15
 4223 01b6 1900     		movs	r1, r3
 4224 01b8 9143     		bics	r1, r2
 4225 01ba 0A00     		movs	r2, r1
 4226              	.LVL348:
2947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
 4227              		.loc 1 2947 0
 4228 01bc 5B08     		lsrs	r3, r3, #1
 4229              	.LVL349:
 4230 01be 0721     		movs	r1, #7
 4231 01c0 0B40     		ands	r3, r1
 4232 01c2 1343     		orrs	r3, r2
 4233              	.LVL350:
2948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4234              		.loc 1 2948 0
 4235 01c4 2268     		ldr	r2, [r4]
 4236 01c6 D360     		str	r3, [r2, #12]
 4237 01c8 2FE0     		b	.L278
 4238              	.LVL351:
 4239              	.L273:
2929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 4240              		.loc 1 2929 0
 4241 01ca 6368     		ldr	r3, [r4, #4]
 4242              	.LVL352:
 4243 01cc 5808     		lsrs	r0, r3, #1
 4244 01ce 354B     		ldr	r3, .L307+52
 4245 01d0 9C46     		mov	ip, r3
 4246 01d2 6044     		add	r0, r0, ip
 4247 01d4 6168     		ldr	r1, [r4, #4]
 4248 01d6 FFF7FEFF 		bl	__aeabi_uidiv
 4249              	.LVL353:
 4250 01da 0304     		lsls	r3, r0, #16
 4251 01dc 1B0C     		lsrs	r3, r3, #16
 4252              	.LVL354:
2876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t pclk;
 4253              		.loc 1 2876 0
 4254 01de 0020     		movs	r0, #0
2930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 4255              		.loc 1 2930 0
 4256 01e0 E3E7     		b	.L272
 4257              	.LVL355:
ARM GAS  /tmp/ccsKZFTZ.s 			page 151


 4258              	.L276:
2932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 4259              		.loc 1 2932 0
 4260 01e2 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 4261              	.LVL356:
2933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 4262              		.loc 1 2933 0
 4263 01e6 4000     		lsls	r0, r0, #1
 4264              	.LVL357:
 4265 01e8 6368     		ldr	r3, [r4, #4]
 4266 01ea 5B08     		lsrs	r3, r3, #1
 4267 01ec C018     		adds	r0, r0, r3
 4268 01ee 6168     		ldr	r1, [r4, #4]
 4269 01f0 FFF7FEFF 		bl	__aeabi_uidiv
 4270              	.LVL358:
 4271 01f4 0304     		lsls	r3, r0, #16
 4272 01f6 1B0C     		lsrs	r3, r3, #16
 4273              	.LVL359:
2876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t pclk;
 4274              		.loc 1 2876 0
 4275 01f8 0020     		movs	r0, #0
2934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 4276              		.loc 1 2934 0
 4277 01fa D6E7     		b	.L272
 4278              	.LVL360:
 4279              	.L293:
2939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 4280              		.loc 1 2939 0
 4281 01fc 0120     		movs	r0, #1
2875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 4282              		.loc 1 2875 0
 4283 01fe 0023     		movs	r3, #0
 4284              	.LVL361:
 4285 0200 D3E7     		b	.L272
 4286              	.LVL362:
 4287              	.L303:
2957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4288              		.loc 1 2957 0
 4289 0202 002B     		cmp	r3, #0
 4290 0204 2DD1     		bne	.L295
2960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 4291              		.loc 1 2960 0
 4292 0206 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4293              	.LVL363:
2961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 4294              		.loc 1 2961 0
 4295 020a 6368     		ldr	r3, [r4, #4]
 4296 020c 5B08     		lsrs	r3, r3, #1
 4297 020e C018     		adds	r0, r0, r3
 4298              	.LVL364:
 4299 0210 6168     		ldr	r1, [r4, #4]
 4300 0212 FFF7FEFF 		bl	__aeabi_uidiv
 4301              	.LVL365:
 4302 0216 0304     		lsls	r3, r0, #16
 4303 0218 1B0C     		lsrs	r3, r3, #16
 4304              	.LVL366:
2876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t pclk;
ARM GAS  /tmp/ccsKZFTZ.s 			page 152


 4305              		.loc 1 2876 0
 4306 021a 0020     		movs	r0, #0
 4307              	.LVL367:
 4308              	.L279:
2979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4309              		.loc 1 2979 0
 4310 021c 2049     		ldr	r1, .L307+48
 4311 021e 1A00     		movs	r2, r3
 4312 0220 103A     		subs	r2, r2, #16
 4313 0222 8A42     		cmp	r2, r1
 4314 0224 22D8     		bhi	.L296
2981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4315              		.loc 1 2981 0
 4316 0226 2268     		ldr	r2, [r4]
 4317 0228 D360     		str	r3, [r2, #12]
 4318              	.LVL368:
 4319              	.L278:
2991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxISR = NULL;
 4320              		.loc 1 2991 0
 4321 022a 0023     		movs	r3, #0
 4322 022c 2366     		str	r3, [r4, #96]
2992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4323              		.loc 1 2992 0
 4324 022e 6366     		str	r3, [r4, #100]
2995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4325              		.loc 1 2995 0
 4326              		@ sp needed
 4327              	.LVL369:
 4328 0230 10BD     		pop	{r4, pc}
 4329              	.LVL370:
 4330              	.L280:
2964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 4331              		.loc 1 2964 0
 4332 0232 6368     		ldr	r3, [r4, #4]
 4333              	.LVL371:
 4334 0234 5808     		lsrs	r0, r3, #1
 4335 0236 1C4B     		ldr	r3, .L307+56
 4336 0238 9C46     		mov	ip, r3
 4337 023a 6044     		add	r0, r0, ip
 4338 023c 6168     		ldr	r1, [r4, #4]
 4339 023e FFF7FEFF 		bl	__aeabi_uidiv
 4340              	.LVL372:
 4341 0242 0304     		lsls	r3, r0, #16
 4342 0244 1B0C     		lsrs	r3, r3, #16
 4343              	.LVL373:
2876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t pclk;
 4344              		.loc 1 2876 0
 4345 0246 0020     		movs	r0, #0
2965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 4346              		.loc 1 2965 0
 4347 0248 E8E7     		b	.L279
 4348              	.LVL374:
 4349              	.L283:
2967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 4350              		.loc 1 2967 0
 4351 024a FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 4352              	.LVL375:
ARM GAS  /tmp/ccsKZFTZ.s 			page 153


2968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 4353              		.loc 1 2968 0
 4354 024e 6368     		ldr	r3, [r4, #4]
 4355 0250 5B08     		lsrs	r3, r3, #1
 4356 0252 C018     		adds	r0, r0, r3
 4357              	.LVL376:
 4358 0254 6168     		ldr	r1, [r4, #4]
 4359 0256 FFF7FEFF 		bl	__aeabi_uidiv
 4360              	.LVL377:
 4361 025a 0304     		lsls	r3, r0, #16
 4362 025c 1B0C     		lsrs	r3, r3, #16
 4363              	.LVL378:
2876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t pclk;
 4364              		.loc 1 2876 0
 4365 025e 0020     		movs	r0, #0
2969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 4366              		.loc 1 2969 0
 4367 0260 DCE7     		b	.L279
 4368              	.LVL379:
 4369              	.L295:
2974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 4370              		.loc 1 2974 0
 4371 0262 0120     		movs	r0, #1
2875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 4372              		.loc 1 2875 0
 4373 0264 0023     		movs	r3, #0
 4374              	.LVL380:
 4375 0266 D9E7     		b	.L279
 4376              	.LVL381:
 4377              	.L294:
2952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4378              		.loc 1 2952 0
 4379 0268 0120     		movs	r0, #1
 4380              	.LVL382:
 4381 026a DEE7     		b	.L278
 4382              	.LVL383:
 4383              	.L296:
2985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4384              		.loc 1 2985 0
 4385 026c 0120     		movs	r0, #1
 4386              	.LVL384:
 4387 026e DCE7     		b	.L278
 4388              	.L308:
 4389              		.align	2
 4390              	.L307:
 4391 0270 F369FFEF 		.word	-268473869
 4392 0274 FFCFFFFF 		.word	-12289
 4393 0278 FFF4FFFF 		.word	-2817
 4394 027c 00380140 		.word	1073821696
 4395 0280 00440040 		.word	1073759232
 4396 0284 00480040 		.word	1073760256
 4397 0288 004C0040 		.word	1073761280
 4398 028c 00500040 		.word	1073762304
 4399 0290 00140140 		.word	1073812480
 4400 0294 00180140 		.word	1073813504
 4401 0298 001C0140 		.word	1073814528
 4402 029c 00100240 		.word	1073876992
ARM GAS  /tmp/ccsKZFTZ.s 			page 154


 4403 02a0 EFFF0000 		.word	65519
 4404 02a4 0024F400 		.word	16000000
 4405 02a8 00127A00 		.word	8000000
 4406              		.cfi_endproc
 4407              	.LFE82:
 4409              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 4410              		.align	1
 4411              		.global	UART_AdvFeatureConfig
 4412              		.syntax unified
 4413              		.code	16
 4414              		.thumb_func
 4415              		.fpu softvfp
 4417              	UART_AdvFeatureConfig:
 4418              	.LFB83:
3003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 4419              		.loc 1 3003 0
 4420              		.cfi_startproc
 4421              		@ args = 0, pretend = 0, frame = 0
 4422              		@ frame_needed = 0, uses_anonymous_args = 0
 4423              		@ link register save eliminated.
 4424              	.LVL385:
3008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4425              		.loc 1 3008 0
 4426 0000 436A     		ldr	r3, [r0, #36]
 4427 0002 DB07     		lsls	r3, r3, #31
 4428 0004 06D5     		bpl	.L310
3011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4429              		.loc 1 3011 0
 4430 0006 0268     		ldr	r2, [r0]
 4431 0008 5368     		ldr	r3, [r2, #4]
 4432 000a 2C49     		ldr	r1, .L319
 4433 000c 0B40     		ands	r3, r1
 4434 000e 816A     		ldr	r1, [r0, #40]
 4435 0010 0B43     		orrs	r3, r1
 4436 0012 5360     		str	r3, [r2, #4]
 4437              	.L310:
3015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4438              		.loc 1 3015 0
 4439 0014 436A     		ldr	r3, [r0, #36]
 4440 0016 9B07     		lsls	r3, r3, #30
 4441 0018 06D5     		bpl	.L311
3018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4442              		.loc 1 3018 0
 4443 001a 0268     		ldr	r2, [r0]
 4444 001c 5368     		ldr	r3, [r2, #4]
 4445 001e 2849     		ldr	r1, .L319+4
 4446 0020 0B40     		ands	r3, r1
 4447 0022 C16A     		ldr	r1, [r0, #44]
 4448 0024 0B43     		orrs	r3, r1
 4449 0026 5360     		str	r3, [r2, #4]
 4450              	.L311:
3022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4451              		.loc 1 3022 0
 4452 0028 436A     		ldr	r3, [r0, #36]
 4453 002a 5B07     		lsls	r3, r3, #29
 4454 002c 06D5     		bpl	.L312
3025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccsKZFTZ.s 			page 155


 4455              		.loc 1 3025 0
 4456 002e 0268     		ldr	r2, [r0]
 4457 0030 5368     		ldr	r3, [r2, #4]
 4458 0032 2449     		ldr	r1, .L319+8
 4459 0034 0B40     		ands	r3, r1
 4460 0036 016B     		ldr	r1, [r0, #48]
 4461 0038 0B43     		orrs	r3, r1
 4462 003a 5360     		str	r3, [r2, #4]
 4463              	.L312:
3029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4464              		.loc 1 3029 0
 4465 003c 436A     		ldr	r3, [r0, #36]
 4466 003e 1B07     		lsls	r3, r3, #28
 4467 0040 06D5     		bpl	.L313
3032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4468              		.loc 1 3032 0
 4469 0042 0268     		ldr	r2, [r0]
 4470 0044 5368     		ldr	r3, [r2, #4]
 4471 0046 2049     		ldr	r1, .L319+12
 4472 0048 0B40     		ands	r3, r1
 4473 004a 416B     		ldr	r1, [r0, #52]
 4474 004c 0B43     		orrs	r3, r1
 4475 004e 5360     		str	r3, [r2, #4]
 4476              	.L313:
3036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4477              		.loc 1 3036 0
 4478 0050 436A     		ldr	r3, [r0, #36]
 4479 0052 DB06     		lsls	r3, r3, #27
 4480 0054 06D5     		bpl	.L314
3039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4481              		.loc 1 3039 0
 4482 0056 0268     		ldr	r2, [r0]
 4483 0058 9368     		ldr	r3, [r2, #8]
 4484 005a 1C49     		ldr	r1, .L319+16
 4485 005c 0B40     		ands	r3, r1
 4486 005e 816B     		ldr	r1, [r0, #56]
 4487 0060 0B43     		orrs	r3, r1
 4488 0062 9360     		str	r3, [r2, #8]
 4489              	.L314:
3043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4490              		.loc 1 3043 0
 4491 0064 436A     		ldr	r3, [r0, #36]
 4492 0066 9B06     		lsls	r3, r3, #26
 4493 0068 06D5     		bpl	.L315
3046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4494              		.loc 1 3046 0
 4495 006a 0268     		ldr	r2, [r0]
 4496 006c 9368     		ldr	r3, [r2, #8]
 4497 006e 1849     		ldr	r1, .L319+20
 4498 0070 0B40     		ands	r3, r1
 4499 0072 C16B     		ldr	r1, [r0, #60]
 4500 0074 0B43     		orrs	r3, r1
 4501 0076 9360     		str	r3, [r2, #8]
 4502              	.L315:
3050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4503              		.loc 1 3050 0
 4504 0078 436A     		ldr	r3, [r0, #36]
ARM GAS  /tmp/ccsKZFTZ.s 			page 156


 4505 007a 5B06     		lsls	r3, r3, #25
 4506 007c 0BD5     		bpl	.L316
3054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 4507              		.loc 1 3054 0
 4508 007e 0268     		ldr	r2, [r0]
 4509 0080 5368     		ldr	r3, [r2, #4]
 4510 0082 1449     		ldr	r1, .L319+24
 4511 0084 0B40     		ands	r3, r1
 4512 0086 016C     		ldr	r1, [r0, #64]
 4513 0088 0B43     		orrs	r3, r1
 4514 008a 5360     		str	r3, [r2, #4]
3056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4515              		.loc 1 3056 0
 4516 008c 8023     		movs	r3, #128
 4517 008e 5B03     		lsls	r3, r3, #13
 4518 0090 026C     		ldr	r2, [r0, #64]
 4519 0092 9A42     		cmp	r2, r3
 4520 0094 0AD0     		beq	.L318
 4521              	.L316:
3064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4522              		.loc 1 3064 0
 4523 0096 436A     		ldr	r3, [r0, #36]
 4524 0098 1B06     		lsls	r3, r3, #24
 4525 009a 06D5     		bpl	.L309
3067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4526              		.loc 1 3067 0
 4527 009c 0268     		ldr	r2, [r0]
 4528 009e 5368     		ldr	r3, [r2, #4]
 4529 00a0 0D49     		ldr	r1, .L319+28
 4530 00a2 0B40     		ands	r3, r1
 4531 00a4 816C     		ldr	r1, [r0, #72]
 4532 00a6 0B43     		orrs	r3, r1
 4533 00a8 5360     		str	r3, [r2, #4]
 4534              	.L309:
3069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4535              		.loc 1 3069 0
 4536              		@ sp needed
 4537 00aa 7047     		bx	lr
 4538              	.L318:
3059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4539              		.loc 1 3059 0
 4540 00ac 0268     		ldr	r2, [r0]
 4541 00ae 5368     		ldr	r3, [r2, #4]
 4542 00b0 0A49     		ldr	r1, .L319+32
 4543 00b2 0B40     		ands	r3, r1
 4544 00b4 416C     		ldr	r1, [r0, #68]
 4545 00b6 0B43     		orrs	r3, r1
 4546 00b8 5360     		str	r3, [r2, #4]
 4547 00ba ECE7     		b	.L316
 4548              	.L320:
 4549              		.align	2
 4550              	.L319:
 4551 00bc FFFFFDFF 		.word	-131073
 4552 00c0 FFFFFEFF 		.word	-65537
 4553 00c4 FFFFFBFF 		.word	-262145
 4554 00c8 FF7FFFFF 		.word	-32769
 4555 00cc FFEFFFFF 		.word	-4097
ARM GAS  /tmp/ccsKZFTZ.s 			page 157


 4556 00d0 FFDFFFFF 		.word	-8193
 4557 00d4 FFFFEFFF 		.word	-1048577
 4558 00d8 FFFFF7FF 		.word	-524289
 4559 00dc FFFF9FFF 		.word	-6291457
 4560              		.cfi_endproc
 4561              	.LFE83:
 4563              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 4564              		.align	1
 4565              		.global	UART_WaitOnFlagUntilTimeout
 4566              		.syntax unified
 4567              		.code	16
 4568              		.thumb_func
 4569              		.fpu softvfp
 4571              	UART_WaitOnFlagUntilTimeout:
 4572              	.LFB85:
3128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Wait until flag is set */
 4573              		.loc 1 3128 0
 4574              		.cfi_startproc
 4575              		@ args = 4, pretend = 0, frame = 0
 4576              		@ frame_needed = 0, uses_anonymous_args = 0
 4577              	.LVL386:
 4578 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4579              	.LCFI33:
 4580              		.cfi_def_cfa_offset 20
 4581              		.cfi_offset 4, -20
 4582              		.cfi_offset 5, -16
 4583              		.cfi_offset 6, -12
 4584              		.cfi_offset 7, -8
 4585              		.cfi_offset 14, -4
 4586 0002 C646     		mov	lr, r8
 4587 0004 00B5     		push	{lr}
 4588              	.LCFI34:
 4589              		.cfi_def_cfa_offset 24
 4590              		.cfi_offset 8, -24
 4591 0006 0400     		movs	r4, r0
 4592 0008 0F00     		movs	r7, r1
 4593 000a 1600     		movs	r6, r2
 4594 000c 9846     		mov	r8, r3
 4595 000e 069D     		ldr	r5, [sp, #24]
 4596              	.LVL387:
 4597              	.L323:
3130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4598              		.loc 1 3130 0
 4599 0010 2368     		ldr	r3, [r4]
 4600 0012 DB69     		ldr	r3, [r3, #28]
 4601 0014 3A00     		movs	r2, r7
 4602 0016 9A43     		bics	r2, r3
 4603 0018 1300     		movs	r3, r2
 4604 001a 5A42     		rsbs	r2, r3, #0
 4605 001c 5341     		adcs	r3, r3, r2
 4606 001e B342     		cmp	r3, r6
 4607 0020 3AD1     		bne	.L328
3133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4608              		.loc 1 3133 0
 4609 0022 6B1C     		adds	r3, r5, #1
 4610 0024 F4D0     		beq	.L323
3135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
ARM GAS  /tmp/ccsKZFTZ.s 			page 158


 4611              		.loc 1 3135 0
 4612 0026 FFF7FEFF 		bl	HAL_GetTick
 4613              	.LVL388:
 4614 002a 4346     		mov	r3, r8
 4615 002c C01A     		subs	r0, r0, r3
 4616 002e 8542     		cmp	r5, r0
 4617 0030 1FD3     		bcc	.L324
 4618              	.LVL389:
3135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4619              		.loc 1 3135 0 is_stmt 0 discriminator 1
 4620 0032 002D     		cmp	r5, #0
 4621 0034 1DD0     		beq	.L324
3149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4622              		.loc 1 3149 0 is_stmt 1
 4623 0036 2368     		ldr	r3, [r4]
 4624              	.LVL390:
 4625 0038 1A68     		ldr	r2, [r3]
 4626 003a 5207     		lsls	r2, r2, #29
 4627 003c E8D5     		bpl	.L323
3151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 4628              		.loc 1 3151 0
 4629 003e DA69     		ldr	r2, [r3, #28]
 4630 0040 1205     		lsls	r2, r2, #20
 4631 0042 E5D5     		bpl	.L323
3154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           
 4632              		.loc 1 3154 0
 4633 0044 8022     		movs	r2, #128
 4634 0046 1201     		lsls	r2, r2, #4
 4635 0048 1A62     		str	r2, [r3, #32]
3157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4636              		.loc 1 3157 0
 4637 004a 2268     		ldr	r2, [r4]
 4638 004c 1368     		ldr	r3, [r2]
 4639 004e 1449     		ldr	r1, .L329
 4640 0050 0B40     		ands	r3, r1
 4641 0052 1360     		str	r3, [r2]
3158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4642              		.loc 1 3158 0
 4643 0054 2268     		ldr	r2, [r4]
 4644 0056 9368     		ldr	r3, [r2, #8]
 4645 0058 A331     		adds	r1, r1, #163
 4646 005a FF31     		adds	r1, r1, #255
 4647 005c 8B43     		bics	r3, r1
 4648 005e 9360     		str	r3, [r2, #8]
3160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 4649              		.loc 1 3160 0
 4650 0060 2023     		movs	r3, #32
 4651 0062 6367     		str	r3, [r4, #116]
3161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
 4652              		.loc 1 3161 0
 4653 0064 A367     		str	r3, [r4, #120]
3162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           
 4654              		.loc 1 3162 0
 4655 0066 E367     		str	r3, [r4, #124]
3165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           
 4656              		.loc 1 3165 0
 4657 0068 0022     		movs	r2, #0
ARM GAS  /tmp/ccsKZFTZ.s 			page 159


 4658 006a 5033     		adds	r3, r3, #80
 4659 006c E254     		strb	r2, [r4, r3]
3167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
 4660              		.loc 1 3167 0
 4661 006e 0320     		movs	r0, #3
 4662 0070 13E0     		b	.L326
 4663              	.LVL391:
 4664              	.L324:
3138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4665              		.loc 1 3138 0
 4666 0072 2268     		ldr	r2, [r4]
 4667 0074 1368     		ldr	r3, [r2]
 4668              	.LVL392:
 4669 0076 0A49     		ldr	r1, .L329
 4670 0078 0B40     		ands	r3, r1
 4671 007a 1360     		str	r3, [r2]
3139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4672              		.loc 1 3139 0
 4673 007c 2268     		ldr	r2, [r4]
 4674 007e 9368     		ldr	r3, [r2, #8]
 4675 0080 A331     		adds	r1, r1, #163
 4676 0082 FF31     		adds	r1, r1, #255
 4677 0084 8B43     		bics	r3, r1
 4678 0086 9360     		str	r3, [r2, #8]
3141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 4679              		.loc 1 3141 0
 4680 0088 2023     		movs	r3, #32
 4681 008a 6367     		str	r3, [r4, #116]
3142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4682              		.loc 1 3142 0
 4683 008c A367     		str	r3, [r4, #120]
3144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4684              		.loc 1 3144 0
 4685 008e 0022     		movs	r2, #0
 4686 0090 5033     		adds	r3, r3, #80
 4687 0092 E254     		strb	r2, [r4, r3]
3146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4688              		.loc 1 3146 0
 4689 0094 0320     		movs	r0, #3
 4690 0096 00E0     		b	.L326
 4691              	.L328:
3172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4692              		.loc 1 3172 0
 4693 0098 0020     		movs	r0, #0
 4694              	.L326:
3173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4695              		.loc 1 3173 0
 4696              		@ sp needed
 4697              	.LVL393:
 4698              	.LVL394:
 4699              	.LVL395:
 4700 009a 04BC     		pop	{r2}
 4701 009c 9046     		mov	r8, r2
 4702 009e F0BD     		pop	{r4, r5, r6, r7, pc}
 4703              	.L330:
 4704              		.align	2
 4705              	.L329:
ARM GAS  /tmp/ccsKZFTZ.s 			page 160


 4706 00a0 5FFEFFFF 		.word	-417
 4707              		.cfi_endproc
 4708              	.LFE85:
 4710              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 4711              		.align	1
 4712              		.global	HAL_UART_Transmit
 4713              		.syntax unified
 4714              		.code	16
 4715              		.thumb_func
 4716              		.fpu softvfp
 4718              	HAL_UART_Transmit:
 4719              	.LFB47:
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint8_t  *pdata8bits;
 4720              		.loc 1 1071 0
 4721              		.cfi_startproc
 4722              		@ args = 0, pretend = 0, frame = 8
 4723              		@ frame_needed = 0, uses_anonymous_args = 0
 4724              	.LVL396:
 4725 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4726              	.LCFI35:
 4727              		.cfi_def_cfa_offset 20
 4728              		.cfi_offset 4, -20
 4729              		.cfi_offset 5, -16
 4730              		.cfi_offset 6, -12
 4731              		.cfi_offset 7, -8
 4732              		.cfi_offset 14, -4
 4733 0002 85B0     		sub	sp, sp, #20
 4734              	.LCFI36:
 4735              		.cfi_def_cfa_offset 40
 4736 0004 0400     		movs	r4, r0
 4737 0006 0F00     		movs	r7, r1
 4738 0008 1600     		movs	r6, r2
 4739 000a 1D00     		movs	r5, r3
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4740              		.loc 1 1077 0
 4741 000c 436F     		ldr	r3, [r0, #116]
 4742              	.LVL397:
 4743 000e 202B     		cmp	r3, #32
 4744 0010 02D0     		beq	.L348
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4745              		.loc 1 1151 0
 4746 0012 0220     		movs	r0, #2
 4747              	.LVL398:
 4748              	.L332:
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4749              		.loc 1 1153 0
 4750 0014 05B0     		add	sp, sp, #20
 4751              		@ sp needed
 4752              	.LVL399:
 4753              	.LVL400:
 4754 0016 F0BD     		pop	{r4, r5, r6, r7, pc}
 4755              	.LVL401:
 4756              	.L348:
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4757              		.loc 1 1079 0
 4758 0018 0029     		cmp	r1, #0
 4759 001a 61D0     		beq	.L340
ARM GAS  /tmp/ccsKZFTZ.s 			page 161


1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4760              		.loc 1 1079 0 is_stmt 0 discriminator 1
 4761 001c 002A     		cmp	r2, #0
 4762 001e 61D0     		beq	.L341
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4763              		.loc 1 1087 0 is_stmt 1
 4764 0020 8023     		movs	r3, #128
 4765 0022 5B01     		lsls	r3, r3, #5
 4766 0024 8268     		ldr	r2, [r0, #8]
 4767              	.LVL402:
 4768 0026 9A42     		cmp	r2, r3
 4769 0028 05D0     		beq	.L349
 4770              	.L333:
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4771              		.loc 1 1095 0
 4772 002a 7023     		movs	r3, #112
 4773 002c E35C     		ldrb	r3, [r4, r3]
 4774 002e 012B     		cmp	r3, #1
 4775 0030 08D1     		bne	.L350
 4776 0032 0220     		movs	r0, #2
 4777              	.LVL403:
 4778 0034 EEE7     		b	.L332
 4779              	.LVL404:
 4780              	.L349:
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4781              		.loc 1 1087 0 discriminator 1
 4782 0036 0369     		ldr	r3, [r0, #16]
 4783 0038 002B     		cmp	r3, #0
 4784 003a F6D1     		bne	.L333
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4785              		.loc 1 1089 0
 4786 003c CB07     		lsls	r3, r1, #31
 4787 003e F4D5     		bpl	.L333
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4788              		.loc 1 1091 0
 4789 0040 0120     		movs	r0, #1
 4790              	.LVL405:
 4791 0042 E7E7     		b	.L332
 4792              	.LVL406:
 4793              	.L350:
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4794              		.loc 1 1095 0 discriminator 2
 4795 0044 0122     		movs	r2, #1
 4796 0046 7023     		movs	r3, #112
 4797 0048 E254     		strb	r2, [r4, r3]
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 4798              		.loc 1 1097 0 discriminator 2
 4799 004a 0023     		movs	r3, #0
 4800 004c E367     		str	r3, [r4, #124]
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4801              		.loc 1 1098 0 discriminator 2
 4802 004e 2133     		adds	r3, r3, #33
 4803 0050 6367     		str	r3, [r4, #116]
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4804              		.loc 1 1101 0 discriminator 2
 4805 0052 FFF7FEFF 		bl	HAL_GetTick
 4806              	.LVL407:
ARM GAS  /tmp/ccsKZFTZ.s 			page 162


 4807 0056 0390     		str	r0, [sp, #12]
 4808              	.LVL408:
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 4809              		.loc 1 1103 0 discriminator 2
 4810 0058 5023     		movs	r3, #80
 4811 005a E652     		strh	r6, [r4, r3]
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4812              		.loc 1 1104 0 discriminator 2
 4813 005c 0233     		adds	r3, r3, #2
 4814 005e E652     		strh	r6, [r4, r3]
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4815              		.loc 1 1107 0 discriminator 2
 4816 0060 8023     		movs	r3, #128
 4817 0062 5B01     		lsls	r3, r3, #5
 4818 0064 A268     		ldr	r2, [r4, #8]
 4819 0066 9A42     		cmp	r2, r3
 4820 0068 01D0     		beq	.L351
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4821              		.loc 1 1115 0
 4822 006a 0026     		movs	r6, #0
 4823 006c 12E0     		b	.L335
 4824              	.L351:
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4825              		.loc 1 1107 0 discriminator 1
 4826 006e 2369     		ldr	r3, [r4, #16]
 4827 0070 002B     		cmp	r3, #0
 4828 0072 01D0     		beq	.L345
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4829              		.loc 1 1115 0
 4830 0074 0026     		movs	r6, #0
 4831 0076 0DE0     		b	.L335
 4832              	.L345:
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4833              		.loc 1 1110 0
 4834 0078 3E00     		movs	r6, r7
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 4835              		.loc 1 1109 0
 4836 007a 0027     		movs	r7, #0
 4837              	.LVL409:
 4838 007c 0AE0     		b	.L335
 4839              	.LVL410:
 4840              	.L353:
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pdata16bits++;
 4841              		.loc 1 1126 0
 4842 007e 3388     		ldrh	r3, [r6]
 4843 0080 DB05     		lsls	r3, r3, #23
 4844 0082 DB0D     		lsrs	r3, r3, #23
 4845 0084 2268     		ldr	r2, [r4]
 4846 0086 1385     		strh	r3, [r2, #40]
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4847              		.loc 1 1127 0
 4848 0088 0236     		adds	r6, r6, #2
 4849              	.LVL411:
 4850              	.L337:
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4851              		.loc 1 1134 0
 4852 008a 5222     		movs	r2, #82
ARM GAS  /tmp/ccsKZFTZ.s 			page 163


 4853 008c A35A     		ldrh	r3, [r4, r2]
 4854 008e 013B     		subs	r3, r3, #1
 4855 0090 9BB2     		uxth	r3, r3
 4856 0092 A352     		strh	r3, [r4, r2]
 4857              	.LVL412:
 4858              	.L335:
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4859              		.loc 1 1118 0
 4860 0094 5223     		movs	r3, #82
 4861 0096 E35A     		ldrh	r3, [r4, r3]
 4862 0098 9BB2     		uxth	r3, r3
 4863 009a 002B     		cmp	r3, #0
 4864 009c 0FD0     		beq	.L352
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4865              		.loc 1 1120 0
 4866 009e 0095     		str	r5, [sp]
 4867 00a0 039B     		ldr	r3, [sp, #12]
 4868 00a2 0022     		movs	r2, #0
 4869 00a4 8021     		movs	r1, #128
 4870 00a6 2000     		movs	r0, r4
 4871 00a8 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4872              	.LVL413:
 4873 00ac 0028     		cmp	r0, #0
 4874 00ae 1BD1     		bne	.L346
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4875              		.loc 1 1124 0
 4876 00b0 002F     		cmp	r7, #0
 4877 00b2 E4D0     		beq	.L353
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pdata8bits++;
 4878              		.loc 1 1131 0
 4879 00b4 3B78     		ldrb	r3, [r7]
 4880 00b6 2268     		ldr	r2, [r4]
 4881 00b8 1385     		strh	r3, [r2, #40]
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4882              		.loc 1 1132 0
 4883 00ba 0137     		adds	r7, r7, #1
 4884              	.LVL414:
 4885 00bc E5E7     		b	.L337
 4886              	.L352:
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4887              		.loc 1 1137 0
 4888 00be 0095     		str	r5, [sp]
 4889 00c0 039B     		ldr	r3, [sp, #12]
 4890 00c2 0022     		movs	r2, #0
 4891 00c4 4021     		movs	r1, #64
 4892 00c6 2000     		movs	r0, r4
 4893 00c8 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4894              	.LVL415:
 4895 00cc 0028     		cmp	r0, #0
 4896 00ce 01D0     		beq	.L354
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4897              		.loc 1 1139 0
 4898 00d0 0320     		movs	r0, #3
 4899 00d2 9FE7     		b	.L332
 4900              	.L354:
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4901              		.loc 1 1143 0
ARM GAS  /tmp/ccsKZFTZ.s 			page 164


 4902 00d4 2023     		movs	r3, #32
 4903 00d6 6367     		str	r3, [r4, #116]
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4904              		.loc 1 1145 0
 4905 00d8 0022     		movs	r2, #0
 4906 00da 5033     		adds	r3, r3, #80
 4907 00dc E254     		strb	r2, [r4, r3]
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4908              		.loc 1 1147 0
 4909 00de 99E7     		b	.L332
 4910              	.LVL416:
 4911              	.L340:
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4912              		.loc 1 1081 0
 4913 00e0 0120     		movs	r0, #1
 4914              	.LVL417:
 4915 00e2 97E7     		b	.L332
 4916              	.LVL418:
 4917              	.L341:
 4918 00e4 0120     		movs	r0, #1
 4919              	.LVL419:
 4920 00e6 95E7     		b	.L332
 4921              	.LVL420:
 4922              	.L346:
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4923              		.loc 1 1122 0
 4924 00e8 0320     		movs	r0, #3
 4925 00ea 93E7     		b	.L332
 4926              		.cfi_endproc
 4927              	.LFE47:
 4929              		.section	.text.HAL_UART_Receive,"ax",%progbits
 4930              		.align	1
 4931              		.global	HAL_UART_Receive
 4932              		.syntax unified
 4933              		.code	16
 4934              		.thumb_func
 4935              		.fpu softvfp
 4937              	HAL_UART_Receive:
 4938              	.LFB48:
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint8_t  *pdata8bits;
 4939              		.loc 1 1171 0
 4940              		.cfi_startproc
 4941              		@ args = 0, pretend = 0, frame = 8
 4942              		@ frame_needed = 0, uses_anonymous_args = 0
 4943              	.LVL421:
 4944 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4945              	.LCFI37:
 4946              		.cfi_def_cfa_offset 20
 4947              		.cfi_offset 4, -20
 4948              		.cfi_offset 5, -16
 4949              		.cfi_offset 6, -12
 4950              		.cfi_offset 7, -8
 4951              		.cfi_offset 14, -4
 4952 0002 CE46     		mov	lr, r9
 4953 0004 00B5     		push	{lr}
 4954              	.LCFI38:
 4955              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccsKZFTZ.s 			page 165


 4956              		.cfi_offset 9, -24
 4957 0006 84B0     		sub	sp, sp, #16
 4958              	.LCFI39:
 4959              		.cfi_def_cfa_offset 40
 4960 0008 0400     		movs	r4, r0
 4961 000a 0F00     		movs	r7, r1
 4962 000c 1600     		movs	r6, r2
 4963 000e 1D00     		movs	r5, r3
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4964              		.loc 1 1178 0
 4965 0010 836F     		ldr	r3, [r0, #120]
 4966              	.LVL422:
 4967 0012 202B     		cmp	r3, #32
 4968 0014 04D0     		beq	.L378
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4969              		.loc 1 1252 0
 4970 0016 0220     		movs	r0, #2
 4971              	.LVL423:
 4972              	.L356:
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4973              		.loc 1 1254 0
 4974 0018 04B0     		add	sp, sp, #16
 4975              		@ sp needed
 4976              	.LVL424:
 4977              	.LVL425:
 4978 001a 04BC     		pop	{r2}
 4979 001c 9146     		mov	r9, r2
 4980 001e F0BD     		pop	{r4, r5, r6, r7, pc}
 4981              	.LVL426:
 4982              	.L378:
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4983              		.loc 1 1180 0
 4984 0020 0029     		cmp	r1, #0
 4985 0022 00D1     		bne	.LCB4551
 4986 0024 8EE0     		b	.L371	@long jump
 4987              	.LCB4551:
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4988              		.loc 1 1180 0 is_stmt 0 discriminator 1
 4989 0026 002A     		cmp	r2, #0
 4990 0028 00D1     		bne	.LCB4553
 4991 002a 8DE0     		b	.L372	@long jump
 4992              	.LCB4553:
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4993              		.loc 1 1188 0 is_stmt 1
 4994 002c 8023     		movs	r3, #128
 4995 002e 5B01     		lsls	r3, r3, #5
 4996 0030 8268     		ldr	r2, [r0, #8]
 4997              	.LVL427:
 4998 0032 9A42     		cmp	r2, r3
 4999 0034 05D0     		beq	.L379
 5000              	.L357:
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5001              		.loc 1 1196 0
 5002 0036 7023     		movs	r3, #112
 5003 0038 E35C     		ldrb	r3, [r4, r3]
 5004 003a 012B     		cmp	r3, #1
 5005 003c 08D1     		bne	.L380
ARM GAS  /tmp/ccsKZFTZ.s 			page 166


 5006 003e 0220     		movs	r0, #2
 5007              	.LVL428:
 5008 0040 EAE7     		b	.L356
 5009              	.LVL429:
 5010              	.L379:
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 5011              		.loc 1 1188 0 discriminator 1
 5012 0042 0369     		ldr	r3, [r0, #16]
 5013 0044 002B     		cmp	r3, #0
 5014 0046 F6D1     		bne	.L357
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 5015              		.loc 1 1190 0
 5016 0048 CB07     		lsls	r3, r1, #31
 5017 004a F4D5     		bpl	.L357
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 5018              		.loc 1 1192 0
 5019 004c 0120     		movs	r0, #1
 5020              	.LVL430:
 5021 004e E3E7     		b	.L356
 5022              	.LVL431:
 5023              	.L380:
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5024              		.loc 1 1196 0 discriminator 2
 5025 0050 0122     		movs	r2, #1
 5026 0052 7023     		movs	r3, #112
 5027 0054 E254     		strb	r2, [r4, r3]
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 5028              		.loc 1 1198 0 discriminator 2
 5029 0056 0023     		movs	r3, #0
 5030 0058 E367     		str	r3, [r4, #124]
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5031              		.loc 1 1199 0 discriminator 2
 5032 005a 2233     		adds	r3, r3, #34
 5033 005c A367     		str	r3, [r4, #120]
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5034              		.loc 1 1202 0 discriminator 2
 5035 005e FFF7FEFF 		bl	HAL_GetTick
 5036              	.LVL432:
 5037 0062 0390     		str	r0, [sp, #12]
 5038              	.LVL433:
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 5039              		.loc 1 1204 0 discriminator 2
 5040 0064 5823     		movs	r3, #88
 5041 0066 E652     		strh	r6, [r4, r3]
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5042              		.loc 1 1205 0 discriminator 2
 5043 0068 0233     		adds	r3, r3, #2
 5044 006a E652     		strh	r6, [r4, r3]
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 5045              		.loc 1 1208 0 discriminator 2
 5046 006c A368     		ldr	r3, [r4, #8]
 5047 006e 8022     		movs	r2, #128
 5048 0070 5201     		lsls	r2, r2, #5
 5049 0072 9342     		cmp	r3, r2
 5050 0074 08D0     		beq	.L381
 5051 0076 002B     		cmp	r3, #0
 5052 0078 15D1     		bne	.L361
ARM GAS  /tmp/ccsKZFTZ.s 			page 167


1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 5053              		.loc 1 1208 0 is_stmt 0 discriminator 5
 5054 007a 2269     		ldr	r2, [r4, #16]
 5055 007c 002A     		cmp	r2, #0
 5056 007e 0ED1     		bne	.L362
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 5057              		.loc 1 1208 0 discriminator 7
 5058 0080 FF21     		movs	r1, #255
 5059 0082 5C32     		adds	r2, r2, #92
 5060 0084 A152     		strh	r1, [r4, r2]
 5061 0086 15E0     		b	.L360
 5062              	.L381:
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 5063              		.loc 1 1208 0 discriminator 1
 5064 0088 2269     		ldr	r2, [r4, #16]
 5065 008a 002A     		cmp	r2, #0
 5066 008c 03D1     		bne	.L359
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 5067              		.loc 1 1208 0 discriminator 3
 5068 008e 3049     		ldr	r1, .L386
 5069 0090 5C32     		adds	r2, r2, #92
 5070 0092 A152     		strh	r1, [r4, r2]
 5071 0094 0EE0     		b	.L360
 5072              	.L359:
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 5073              		.loc 1 1208 0 discriminator 4
 5074 0096 FF21     		movs	r1, #255
 5075 0098 5C22     		movs	r2, #92
 5076 009a A152     		strh	r1, [r4, r2]
 5077 009c 0AE0     		b	.L360
 5078              	.L362:
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 5079              		.loc 1 1208 0 discriminator 8
 5080 009e 7F21     		movs	r1, #127
 5081 00a0 5C22     		movs	r2, #92
 5082 00a2 A152     		strh	r1, [r4, r2]
 5083 00a4 06E0     		b	.L360
 5084              	.L361:
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 5085              		.loc 1 1208 0 discriminator 6
 5086 00a6 8022     		movs	r2, #128
 5087 00a8 5205     		lsls	r2, r2, #21
 5088 00aa 9342     		cmp	r3, r2
 5089 00ac 0BD0     		beq	.L382
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 5090              		.loc 1 1208 0 discriminator 10
 5091 00ae 0021     		movs	r1, #0
 5092 00b0 5C22     		movs	r2, #92
 5093 00b2 A152     		strh	r1, [r4, r2]
 5094              	.L360:
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5095              		.loc 1 1209 0 is_stmt 1
 5096 00b4 5C22     		movs	r2, #92
 5097 00b6 A65A     		ldrh	r6, [r4, r2]
 5098              	.LVL434:
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 5099              		.loc 1 1212 0
ARM GAS  /tmp/ccsKZFTZ.s 			page 168


 5100 00b8 8022     		movs	r2, #128
 5101 00ba 5201     		lsls	r2, r2, #5
 5102 00bc 9342     		cmp	r3, r2
 5103 00be 0DD0     		beq	.L383
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 5104              		.loc 1 1220 0
 5105 00c0 0023     		movs	r3, #0
 5106 00c2 9946     		mov	r9, r3
 5107 00c4 20E0     		b	.L366
 5108              	.LVL435:
 5109              	.L382:
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 5110              		.loc 1 1208 0 discriminator 9
 5111 00c6 2269     		ldr	r2, [r4, #16]
 5112 00c8 002A     		cmp	r2, #0
 5113 00ca 03D1     		bne	.L364
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 5114              		.loc 1 1208 0 is_stmt 0 discriminator 11
 5115 00cc 7F21     		movs	r1, #127
 5116 00ce 5C32     		adds	r2, r2, #92
 5117 00d0 A152     		strh	r1, [r4, r2]
 5118 00d2 EFE7     		b	.L360
 5119              	.L364:
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 5120              		.loc 1 1208 0 discriminator 12
 5121 00d4 3F21     		movs	r1, #63
 5122 00d6 5C22     		movs	r2, #92
 5123 00d8 A152     		strh	r1, [r4, r2]
 5124 00da EBE7     		b	.L360
 5125              	.LVL436:
 5126              	.L383:
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 5127              		.loc 1 1212 0 is_stmt 1 discriminator 1
 5128 00dc 2369     		ldr	r3, [r4, #16]
 5129 00de 002B     		cmp	r3, #0
 5130 00e0 02D0     		beq	.L376
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 5131              		.loc 1 1220 0
 5132 00e2 0023     		movs	r3, #0
 5133 00e4 9946     		mov	r9, r3
 5134 00e6 0FE0     		b	.L366
 5135              	.L376:
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 5136              		.loc 1 1215 0
 5137 00e8 B946     		mov	r9, r7
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 5138              		.loc 1 1214 0
 5139 00ea 0027     		movs	r7, #0
 5140              	.LVL437:
 5141 00ec 0CE0     		b	.L366
 5142              	.LVL438:
 5143              	.L385:
1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pdata16bits++;
 5144              		.loc 1 1232 0
 5145 00ee 2368     		ldr	r3, [r4]
 5146 00f0 9B8C     		ldrh	r3, [r3, #36]
 5147 00f2 3340     		ands	r3, r6
ARM GAS  /tmp/ccsKZFTZ.s 			page 169


 5148 00f4 4A46     		mov	r2, r9
 5149 00f6 1380     		strh	r3, [r2]
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 5150              		.loc 1 1233 0
 5151 00f8 0223     		movs	r3, #2
 5152 00fa 9C46     		mov	ip, r3
 5153 00fc E144     		add	r9, r9, ip
 5154              	.LVL439:
 5155              	.L368:
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 5156              		.loc 1 1240 0
 5157 00fe 5A22     		movs	r2, #90
 5158 0100 A35A     		ldrh	r3, [r4, r2]
 5159 0102 013B     		subs	r3, r3, #1
 5160 0104 9BB2     		uxth	r3, r3
 5161 0106 A352     		strh	r3, [r4, r2]
 5162              	.LVL440:
 5163              	.L366:
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 5164              		.loc 1 1224 0
 5165 0108 5A23     		movs	r3, #90
 5166 010a E35A     		ldrh	r3, [r4, r3]
 5167 010c 9BB2     		uxth	r3, r3
 5168 010e 002B     		cmp	r3, #0
 5169 0110 11D0     		beq	.L384
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 5170              		.loc 1 1226 0
 5171 0112 0095     		str	r5, [sp]
 5172 0114 039B     		ldr	r3, [sp, #12]
 5173 0116 0022     		movs	r2, #0
 5174 0118 2021     		movs	r1, #32
 5175 011a 2000     		movs	r0, r4
 5176 011c FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5177              	.LVL441:
 5178 0120 0028     		cmp	r0, #0
 5179 0122 13D1     		bne	.L377
1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 5180              		.loc 1 1230 0
 5181 0124 002F     		cmp	r7, #0
 5182 0126 E2D0     		beq	.L385
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pdata8bits++;
 5183              		.loc 1 1237 0
 5184 0128 2368     		ldr	r3, [r4]
 5185 012a 9B8C     		ldrh	r3, [r3, #36]
 5186 012c F2B2     		uxtb	r2, r6
 5187 012e 1340     		ands	r3, r2
 5188 0130 3B70     		strb	r3, [r7]
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 5189              		.loc 1 1238 0
 5190 0132 0137     		adds	r7, r7, #1
 5191              	.LVL442:
 5192 0134 E3E7     		b	.L368
 5193              	.L384:
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5194              		.loc 1 1244 0
 5195 0136 2033     		adds	r3, r3, #32
 5196 0138 A367     		str	r3, [r4, #120]
ARM GAS  /tmp/ccsKZFTZ.s 			page 170


1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5197              		.loc 1 1246 0
 5198 013a 0022     		movs	r2, #0
 5199 013c 5033     		adds	r3, r3, #80
 5200 013e E254     		strb	r2, [r4, r3]
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 5201              		.loc 1 1248 0
 5202 0140 0020     		movs	r0, #0
 5203 0142 69E7     		b	.L356
 5204              	.LVL443:
 5205              	.L371:
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 5206              		.loc 1 1182 0
 5207 0144 0120     		movs	r0, #1
 5208              	.LVL444:
 5209 0146 67E7     		b	.L356
 5210              	.LVL445:
 5211              	.L372:
 5212 0148 0120     		movs	r0, #1
 5213              	.LVL446:
 5214 014a 65E7     		b	.L356
 5215              	.LVL447:
 5216              	.L377:
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 5217              		.loc 1 1228 0
 5218 014c 0320     		movs	r0, #3
 5219 014e 63E7     		b	.L356
 5220              	.L387:
 5221              		.align	2
 5222              	.L386:
 5223 0150 FF010000 		.word	511
 5224              		.cfi_endproc
 5225              	.LFE48:
 5227              		.section	.text.UART_CheckIdleState,"ax",%progbits
 5228              		.align	1
 5229              		.global	UART_CheckIdleState
 5230              		.syntax unified
 5231              		.code	16
 5232              		.thumb_func
 5233              		.fpu softvfp
 5235              	UART_CheckIdleState:
 5236              	.LFB84:
3077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart;
 5237              		.loc 1 3077 0
 5238              		.cfi_startproc
 5239              		@ args = 0, pretend = 0, frame = 0
 5240              		@ frame_needed = 0, uses_anonymous_args = 0
 5241              	.LVL448:
 5242 0000 30B5     		push	{r4, r5, lr}
 5243              	.LCFI40:
 5244              		.cfi_def_cfa_offset 12
 5245              		.cfi_offset 4, -12
 5246              		.cfi_offset 5, -8
 5247              		.cfi_offset 14, -4
 5248 0002 83B0     		sub	sp, sp, #12
 5249              	.LCFI41:
 5250              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccsKZFTZ.s 			page 171


 5251 0004 0400     		movs	r4, r0
3081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5252              		.loc 1 3081 0
 5253 0006 0023     		movs	r3, #0
 5254 0008 C367     		str	r3, [r0, #124]
3084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5255              		.loc 1 3084 0
 5256 000a FFF7FEFF 		bl	HAL_GetTick
 5257              	.LVL449:
 5258 000e 0500     		movs	r5, r0
 5259              	.LVL450:
3087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5260              		.loc 1 3087 0
 5261 0010 2368     		ldr	r3, [r4]
 5262 0012 1B68     		ldr	r3, [r3]
 5263 0014 1B07     		lsls	r3, r3, #28
 5264 0016 0CD4     		bmi	.L394
 5265              	.LVL451:
 5266              	.L389:
3098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5267              		.loc 1 3098 0
 5268 0018 2368     		ldr	r3, [r4]
 5269 001a 1B68     		ldr	r3, [r3]
 5270 001c 5B07     		lsls	r3, r3, #29
 5271 001e 15D4     		bmi	.L395
 5272              	.L391:
3109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5273              		.loc 1 3109 0
 5274 0020 2023     		movs	r3, #32
 5275 0022 6367     		str	r3, [r4, #116]
3110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5276              		.loc 1 3110 0
 5277 0024 A367     		str	r3, [r4, #120]
3112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5278              		.loc 1 3112 0
 5279 0026 0022     		movs	r2, #0
 5280 0028 5033     		adds	r3, r3, #80
 5281 002a E254     		strb	r2, [r4, r3]
3114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5282              		.loc 1 3114 0
 5283 002c 0020     		movs	r0, #0
 5284              	.L390:
3115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5285              		.loc 1 3115 0
 5286 002e 03B0     		add	sp, sp, #12
 5287              		@ sp needed
 5288              	.LVL452:
 5289              	.LVL453:
 5290 0030 30BD     		pop	{r4, r5, pc}
 5291              	.LVL454:
 5292              	.L394:
3090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 5293              		.loc 1 3090 0
 5294 0032 0D4B     		ldr	r3, .L396
 5295 0034 0093     		str	r3, [sp]
 5296 0036 0300     		movs	r3, r0
 5297 0038 0022     		movs	r2, #0
ARM GAS  /tmp/ccsKZFTZ.s 			page 172


 5298 003a 8021     		movs	r1, #128
 5299 003c 8903     		lsls	r1, r1, #14
 5300 003e 2000     		movs	r0, r4
 5301              	.LVL455:
 5302 0040 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5303              	.LVL456:
 5304 0044 0028     		cmp	r0, #0
 5305 0046 E7D0     		beq	.L389
3093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 5306              		.loc 1 3093 0
 5307 0048 0320     		movs	r0, #3
 5308 004a F0E7     		b	.L390
 5309              	.L395:
3101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 5310              		.loc 1 3101 0
 5311 004c 064B     		ldr	r3, .L396
 5312 004e 0093     		str	r3, [sp]
 5313 0050 2B00     		movs	r3, r5
 5314 0052 0022     		movs	r2, #0
 5315 0054 8021     		movs	r1, #128
 5316 0056 C903     		lsls	r1, r1, #15
 5317 0058 2000     		movs	r0, r4
 5318 005a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5319              	.LVL457:
 5320 005e 0028     		cmp	r0, #0
 5321 0060 DED0     		beq	.L391
3104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 5322              		.loc 1 3104 0
 5323 0062 0320     		movs	r0, #3
 5324 0064 E3E7     		b	.L390
 5325              	.L397:
 5326 0066 C046     		.align	2
 5327              	.L396:
 5328 0068 FFFFFF01 		.word	33554431
 5329              		.cfi_endproc
 5330              	.LFE84:
 5332              		.section	.text.HAL_UART_Init,"ax",%progbits
 5333              		.align	1
 5334              		.global	HAL_UART_Init
 5335              		.syntax unified
 5336              		.code	16
 5337              		.thumb_func
 5338              		.fpu softvfp
 5340              	HAL_UART_Init:
 5341              	.LFB40:
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 5342              		.loc 1 288 0
 5343              		.cfi_startproc
 5344              		@ args = 0, pretend = 0, frame = 0
 5345              		@ frame_needed = 0, uses_anonymous_args = 0
 5346              	.LVL458:
 5347 0000 10B5     		push	{r4, lr}
 5348              	.LCFI42:
 5349              		.cfi_def_cfa_offset 8
 5350              		.cfi_offset 4, -8
 5351              		.cfi_offset 14, -4
 5352 0002 041E     		subs	r4, r0, #0
ARM GAS  /tmp/ccsKZFTZ.s 			page 173


 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5353              		.loc 1 290 0
 5354 0004 2ED0     		beq	.L402
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5355              		.loc 1 306 0
 5356 0006 436F     		ldr	r3, [r0, #116]
 5357 0008 002B     		cmp	r3, #0
 5358 000a 21D0     		beq	.L403
 5359              	.LVL459:
 5360              	.L400:
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5361              		.loc 1 327 0
 5362 000c 2423     		movs	r3, #36
 5363 000e 6367     		str	r3, [r4, #116]
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5364              		.loc 1 329 0
 5365 0010 2268     		ldr	r2, [r4]
 5366 0012 1368     		ldr	r3, [r2]
 5367 0014 0121     		movs	r1, #1
 5368 0016 8B43     		bics	r3, r1
 5369 0018 1360     		str	r3, [r2]
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5370              		.loc 1 332 0
 5371 001a 2000     		movs	r0, r4
 5372 001c FFF7FEFF 		bl	UART_SetConfig
 5373              	.LVL460:
 5374 0020 0128     		cmp	r0, #1
 5375 0022 14D0     		beq	.L399
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5376              		.loc 1 337 0
 5377 0024 636A     		ldr	r3, [r4, #36]
 5378 0026 002B     		cmp	r3, #0
 5379 0028 18D1     		bne	.L404
 5380              	.L401:
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 5381              		.loc 1 346 0
 5382 002a 2268     		ldr	r2, [r4]
 5383 002c 5368     		ldr	r3, [r2, #4]
 5384 002e 0E49     		ldr	r1, .L405
 5385 0030 0B40     		ands	r3, r1
 5386 0032 5360     		str	r3, [r2, #4]
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 5387              		.loc 1 352 0
 5388 0034 2268     		ldr	r2, [r4]
 5389 0036 9368     		ldr	r3, [r2, #8]
 5390 0038 2A21     		movs	r1, #42
 5391 003a 8B43     		bics	r3, r1
 5392 003c 9360     		str	r3, [r2, #8]
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5393              		.loc 1 364 0
 5394 003e 2268     		ldr	r2, [r4]
 5395 0040 1368     		ldr	r3, [r2]
 5396 0042 2939     		subs	r1, r1, #41
 5397 0044 0B43     		orrs	r3, r1
 5398 0046 1360     		str	r3, [r2]
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5399              		.loc 1 367 0
ARM GAS  /tmp/ccsKZFTZ.s 			page 174


 5400 0048 2000     		movs	r0, r4
 5401 004a FFF7FEFF 		bl	UART_CheckIdleState
 5402              	.LVL461:
 5403              	.L399:
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5404              		.loc 1 368 0
 5405              		@ sp needed
 5406              	.LVL462:
 5407 004e 10BD     		pop	{r4, pc}
 5408              	.LVL463:
 5409              	.L403:
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5410              		.loc 1 309 0
 5411 0050 0022     		movs	r2, #0
 5412 0052 7033     		adds	r3, r3, #112
 5413 0054 C254     		strb	r2, [r0, r3]
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5414              		.loc 1 323 0
 5415 0056 FFF7FEFF 		bl	HAL_UART_MspInit
 5416              	.LVL464:
 5417 005a D7E7     		b	.L400
 5418              	.L404:
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 5419              		.loc 1 339 0
 5420 005c 2000     		movs	r0, r4
 5421 005e FFF7FEFF 		bl	UART_AdvFeatureConfig
 5422              	.LVL465:
 5423 0062 E2E7     		b	.L401
 5424              	.LVL466:
 5425              	.L402:
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 5426              		.loc 1 292 0
 5427 0064 0120     		movs	r0, #1
 5428              	.LVL467:
 5429 0066 F2E7     		b	.L399
 5430              	.L406:
 5431              		.align	2
 5432              	.L405:
 5433 0068 FFB7FFFF 		.word	-18433
 5434              		.cfi_endproc
 5435              	.LFE40:
 5437              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 5438              		.align	1
 5439              		.global	HAL_HalfDuplex_Init
 5440              		.syntax unified
 5441              		.code	16
 5442              		.thumb_func
 5443              		.fpu softvfp
 5445              	HAL_HalfDuplex_Init:
 5446              	.LFB41:
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 5447              		.loc 1 377 0
 5448              		.cfi_startproc
 5449              		@ args = 0, pretend = 0, frame = 0
 5450              		@ frame_needed = 0, uses_anonymous_args = 0
 5451              	.LVL468:
 5452 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccsKZFTZ.s 			page 175


 5453              	.LCFI43:
 5454              		.cfi_def_cfa_offset 8
 5455              		.cfi_offset 4, -8
 5456              		.cfi_offset 14, -4
 5457 0002 041E     		subs	r4, r0, #0
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5458              		.loc 1 379 0
 5459 0004 33D0     		beq	.L411
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5460              		.loc 1 387 0
 5461 0006 436F     		ldr	r3, [r0, #116]
 5462 0008 002B     		cmp	r3, #0
 5463 000a 26D0     		beq	.L412
 5464              	.LVL469:
 5465              	.L409:
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5466              		.loc 1 408 0
 5467 000c 2423     		movs	r3, #36
 5468 000e 6367     		str	r3, [r4, #116]
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5469              		.loc 1 410 0
 5470 0010 2268     		ldr	r2, [r4]
 5471 0012 1368     		ldr	r3, [r2]
 5472 0014 0121     		movs	r1, #1
 5473 0016 8B43     		bics	r3, r1
 5474 0018 1360     		str	r3, [r2]
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5475              		.loc 1 413 0
 5476 001a 2000     		movs	r0, r4
 5477 001c FFF7FEFF 		bl	UART_SetConfig
 5478              	.LVL470:
 5479 0020 0128     		cmp	r0, #1
 5480 0022 19D0     		beq	.L408
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5481              		.loc 1 418 0
 5482 0024 636A     		ldr	r3, [r4, #36]
 5483 0026 002B     		cmp	r3, #0
 5484 0028 1DD1     		bne	.L413
 5485              	.L410:
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 5486              		.loc 1 427 0
 5487 002a 2268     		ldr	r2, [r4]
 5488 002c 5368     		ldr	r3, [r2, #4]
 5489 002e 1149     		ldr	r1, .L414
 5490 0030 0B40     		ands	r3, r1
 5491 0032 5360     		str	r3, [r2, #4]
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 5492              		.loc 1 433 0
 5493 0034 2268     		ldr	r2, [r4]
 5494 0036 9368     		ldr	r3, [r2, #8]
 5495 0038 2221     		movs	r1, #34
 5496 003a 8B43     		bics	r3, r1
 5497 003c 9360     		str	r3, [r2, #8]
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5498              		.loc 1 444 0
 5499 003e 2268     		ldr	r2, [r4]
 5500 0040 9368     		ldr	r3, [r2, #8]
ARM GAS  /tmp/ccsKZFTZ.s 			page 176


 5501 0042 1A39     		subs	r1, r1, #26
 5502 0044 0B43     		orrs	r3, r1
 5503 0046 9360     		str	r3, [r2, #8]
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5504              		.loc 1 446 0
 5505 0048 2268     		ldr	r2, [r4]
 5506 004a 1368     		ldr	r3, [r2]
 5507 004c 0739     		subs	r1, r1, #7
 5508 004e 0B43     		orrs	r3, r1
 5509 0050 1360     		str	r3, [r2]
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5510              		.loc 1 449 0
 5511 0052 2000     		movs	r0, r4
 5512 0054 FFF7FEFF 		bl	UART_CheckIdleState
 5513              	.LVL471:
 5514              	.L408:
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5515              		.loc 1 450 0
 5516              		@ sp needed
 5517              	.LVL472:
 5518 0058 10BD     		pop	{r4, pc}
 5519              	.LVL473:
 5520              	.L412:
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5521              		.loc 1 390 0
 5522 005a 0022     		movs	r2, #0
 5523 005c 7033     		adds	r3, r3, #112
 5524 005e C254     		strb	r2, [r0, r3]
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5525              		.loc 1 404 0
 5526 0060 FFF7FEFF 		bl	HAL_UART_MspInit
 5527              	.LVL474:
 5528 0064 D2E7     		b	.L409
 5529              	.L413:
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 5530              		.loc 1 420 0
 5531 0066 2000     		movs	r0, r4
 5532 0068 FFF7FEFF 		bl	UART_AdvFeatureConfig
 5533              	.LVL475:
 5534 006c DDE7     		b	.L410
 5535              	.LVL476:
 5536              	.L411:
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 5537              		.loc 1 381 0
 5538 006e 0120     		movs	r0, #1
 5539              	.LVL477:
 5540 0070 F2E7     		b	.L408
 5541              	.L415:
 5542 0072 C046     		.align	2
 5543              	.L414:
 5544 0074 FFB7FFFF 		.word	-18433
 5545              		.cfi_endproc
 5546              	.LFE41:
 5548              		.section	.text.HAL_LIN_Init,"ax",%progbits
 5549              		.align	1
 5550              		.global	HAL_LIN_Init
 5551              		.syntax unified
ARM GAS  /tmp/ccsKZFTZ.s 			page 177


 5552              		.code	16
 5553              		.thumb_func
 5554              		.fpu softvfp
 5556              	HAL_LIN_Init:
 5557              	.LFB42:
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 5558              		.loc 1 465 0
 5559              		.cfi_startproc
 5560              		@ args = 0, pretend = 0, frame = 0
 5561              		@ frame_needed = 0, uses_anonymous_args = 0
 5562              	.LVL478:
 5563 0000 70B5     		push	{r4, r5, r6, lr}
 5564              	.LCFI44:
 5565              		.cfi_def_cfa_offset 16
 5566              		.cfi_offset 4, -16
 5567              		.cfi_offset 5, -12
 5568              		.cfi_offset 6, -8
 5569              		.cfi_offset 14, -4
 5570 0002 0400     		movs	r4, r0
 5571 0004 0D00     		movs	r5, r1
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5572              		.loc 1 467 0
 5573 0006 0028     		cmp	r0, #0
 5574 0008 42D0     		beq	.L420
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5575              		.loc 1 478 0
 5576 000a 8023     		movs	r3, #128
 5577 000c 1B02     		lsls	r3, r3, #8
 5578 000e C269     		ldr	r2, [r0, #28]
 5579 0010 9A42     		cmp	r2, r3
 5580 0012 3FD0     		beq	.L421
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5581              		.loc 1 483 0
 5582 0014 8368     		ldr	r3, [r0, #8]
 5583 0016 002B     		cmp	r3, #0
 5584 0018 3ED1     		bne	.L422
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5585              		.loc 1 488 0
 5586 001a 436F     		ldr	r3, [r0, #116]
 5587 001c 002B     		cmp	r3, #0
 5588 001e 2DD0     		beq	.L423
 5589              	.LVL479:
 5590              	.L418:
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5591              		.loc 1 509 0
 5592 0020 2423     		movs	r3, #36
 5593 0022 6367     		str	r3, [r4, #116]
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5594              		.loc 1 511 0
 5595 0024 2268     		ldr	r2, [r4]
 5596 0026 1368     		ldr	r3, [r2]
 5597 0028 0121     		movs	r1, #1
 5598 002a 8B43     		bics	r3, r1
 5599 002c 1360     		str	r3, [r2]
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5600              		.loc 1 514 0
 5601 002e 2000     		movs	r0, r4
ARM GAS  /tmp/ccsKZFTZ.s 			page 178


 5602 0030 FFF7FEFF 		bl	UART_SetConfig
 5603              	.LVL480:
 5604 0034 0128     		cmp	r0, #1
 5605 0036 20D0     		beq	.L417
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5606              		.loc 1 519 0
 5607 0038 636A     		ldr	r3, [r4, #36]
 5608 003a 002B     		cmp	r3, #0
 5609 003c 24D1     		bne	.L424
 5610              	.L419:
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 5611              		.loc 1 527 0
 5612 003e 2268     		ldr	r2, [r4]
 5613 0040 5368     		ldr	r3, [r2, #4]
 5614 0042 1649     		ldr	r1, .L425
 5615 0044 0B40     		ands	r3, r1
 5616 0046 5360     		str	r3, [r2, #4]
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 5617              		.loc 1 530 0
 5618 0048 2268     		ldr	r2, [r4]
 5619 004a 9368     		ldr	r3, [r2, #8]
 5620 004c 2A21     		movs	r1, #42
 5621 004e 8B43     		bics	r3, r1
 5622 0050 9360     		str	r3, [r2, #8]
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5623              		.loc 1 543 0
 5624 0052 2268     		ldr	r2, [r4]
 5625 0054 5168     		ldr	r1, [r2, #4]
 5626 0056 8023     		movs	r3, #128
 5627 0058 DB01     		lsls	r3, r3, #7
 5628 005a 0B43     		orrs	r3, r1
 5629 005c 5360     		str	r3, [r2, #4]
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5630              		.loc 1 546 0
 5631 005e 2368     		ldr	r3, [r4]
 5632 0060 5968     		ldr	r1, [r3, #4]
 5633 0062 2022     		movs	r2, #32
 5634 0064 9143     		bics	r1, r2
 5635 0066 2943     		orrs	r1, r5
 5636 0068 5960     		str	r1, [r3, #4]
 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5637              		.loc 1 548 0
 5638 006a 2268     		ldr	r2, [r4]
 5639 006c 1368     		ldr	r3, [r2]
 5640 006e 0121     		movs	r1, #1
 5641 0070 0B43     		orrs	r3, r1
 5642 0072 1360     		str	r3, [r2]
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5643              		.loc 1 551 0
 5644 0074 2000     		movs	r0, r4
 5645 0076 FFF7FEFF 		bl	UART_CheckIdleState
 5646              	.LVL481:
 5647              	.L417:
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR2_LINEN */
 5648              		.loc 1 552 0
 5649              		@ sp needed
 5650              	.LVL482:
ARM GAS  /tmp/ccsKZFTZ.s 			page 179


 5651              	.LVL483:
 5652 007a 70BD     		pop	{r4, r5, r6, pc}
 5653              	.LVL484:
 5654              	.L423:
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5655              		.loc 1 491 0
 5656 007c 0022     		movs	r2, #0
 5657 007e 7033     		adds	r3, r3, #112
 5658 0080 C254     		strb	r2, [r0, r3]
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5659              		.loc 1 505 0
 5660 0082 FFF7FEFF 		bl	HAL_UART_MspInit
 5661              	.LVL485:
 5662 0086 CBE7     		b	.L418
 5663              	.L424:
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 5664              		.loc 1 521 0
 5665 0088 2000     		movs	r0, r4
 5666 008a FFF7FEFF 		bl	UART_AdvFeatureConfig
 5667              	.LVL486:
 5668 008e D6E7     		b	.L419
 5669              	.LVL487:
 5670              	.L420:
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 5671              		.loc 1 469 0
 5672 0090 0120     		movs	r0, #1
 5673              	.LVL488:
 5674 0092 F2E7     		b	.L417
 5675              	.LVL489:
 5676              	.L421:
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 5677              		.loc 1 480 0
 5678 0094 0120     		movs	r0, #1
 5679              	.LVL490:
 5680 0096 F0E7     		b	.L417
 5681              	.LVL491:
 5682              	.L422:
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 5683              		.loc 1 485 0
 5684 0098 0120     		movs	r0, #1
 5685              	.LVL492:
 5686 009a EEE7     		b	.L417
 5687              	.L426:
 5688              		.align	2
 5689              	.L425:
 5690 009c FFB7FFFF 		.word	-18433
 5691              		.cfi_endproc
 5692              	.LFE42:
 5694              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 5695              		.align	1
 5696              		.global	HAL_MultiProcessor_Init
 5697              		.syntax unified
 5698              		.code	16
 5699              		.thumb_func
 5700              		.fpu softvfp
 5702              	HAL_MultiProcessor_Init:
 5703              	.LFB43:
ARM GAS  /tmp/ccsKZFTZ.s 			page 180


 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 5704              		.loc 1 575 0
 5705              		.cfi_startproc
 5706              		@ args = 0, pretend = 0, frame = 0
 5707              		@ frame_needed = 0, uses_anonymous_args = 0
 5708              	.LVL493:
 5709 0000 70B5     		push	{r4, r5, r6, lr}
 5710              	.LCFI45:
 5711              		.cfi_def_cfa_offset 16
 5712              		.cfi_offset 4, -16
 5713              		.cfi_offset 5, -12
 5714              		.cfi_offset 6, -8
 5715              		.cfi_offset 14, -4
 5716 0002 0400     		movs	r4, r0
 5717 0004 0D00     		movs	r5, r1
 5718 0006 1600     		movs	r6, r2
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5719              		.loc 1 577 0
 5720 0008 0028     		cmp	r0, #0
 5721 000a 40D0     		beq	.L432
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5722              		.loc 1 585 0
 5723 000c 436F     		ldr	r3, [r0, #116]
 5724 000e 002B     		cmp	r3, #0
 5725 0010 2BD0     		beq	.L433
 5726              	.LVL494:
 5727              	.L429:
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5728              		.loc 1 606 0
 5729 0012 2423     		movs	r3, #36
 5730 0014 6367     		str	r3, [r4, #116]
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5731              		.loc 1 608 0
 5732 0016 2268     		ldr	r2, [r4]
 5733 0018 1368     		ldr	r3, [r2]
 5734 001a 0121     		movs	r1, #1
 5735 001c 8B43     		bics	r3, r1
 5736 001e 1360     		str	r3, [r2]
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5737              		.loc 1 611 0
 5738 0020 2000     		movs	r0, r4
 5739 0022 FFF7FEFF 		bl	UART_SetConfig
 5740              	.LVL495:
 5741 0026 0128     		cmp	r0, #1
 5742 0028 1ED0     		beq	.L428
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5743              		.loc 1 616 0
 5744 002a 636A     		ldr	r3, [r4, #36]
 5745 002c 002B     		cmp	r3, #0
 5746 002e 22D1     		bne	.L434
 5747              	.L430:
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 5748              		.loc 1 625 0
 5749 0030 2268     		ldr	r2, [r4]
 5750 0032 5368     		ldr	r3, [r2, #4]
 5751 0034 1749     		ldr	r1, .L436
 5752 0036 0B40     		ands	r3, r1
ARM GAS  /tmp/ccsKZFTZ.s 			page 181


 5753 0038 5360     		str	r3, [r2, #4]
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 5754              		.loc 1 631 0
 5755 003a 2268     		ldr	r2, [r4]
 5756 003c 9368     		ldr	r3, [r2, #8]
 5757 003e 2A21     		movs	r1, #42
 5758 0040 8B43     		bics	r3, r1
 5759 0042 9360     		str	r3, [r2, #8]
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5760              		.loc 1 643 0
 5761 0044 8023     		movs	r3, #128
 5762 0046 1B01     		lsls	r3, r3, #4
 5763 0048 9E42     		cmp	r6, r3
 5764 004a 18D0     		beq	.L435
 5765              	.L431:
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5766              		.loc 1 650 0
 5767 004c 2268     		ldr	r2, [r4]
 5768 004e 1368     		ldr	r3, [r2]
 5769 0050 1149     		ldr	r1, .L436+4
 5770 0052 0B40     		ands	r3, r1
 5771 0054 1E43     		orrs	r6, r3
 5772              	.LVL496:
 5773 0056 1660     		str	r6, [r2]
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5774              		.loc 1 652 0
 5775 0058 2268     		ldr	r2, [r4]
 5776 005a 1368     		ldr	r3, [r2]
 5777 005c 0121     		movs	r1, #1
 5778 005e 0B43     		orrs	r3, r1
 5779 0060 1360     		str	r3, [r2]
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5780              		.loc 1 655 0
 5781 0062 2000     		movs	r0, r4
 5782 0064 FFF7FEFF 		bl	UART_CheckIdleState
 5783              	.LVL497:
 5784              	.L428:
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5785              		.loc 1 656 0
 5786              		@ sp needed
 5787              	.LVL498:
 5788 0068 70BD     		pop	{r4, r5, r6, pc}
 5789              	.LVL499:
 5790              	.L433:
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5791              		.loc 1 588 0
 5792 006a 0022     		movs	r2, #0
 5793              	.LVL500:
 5794 006c 7033     		adds	r3, r3, #112
 5795 006e C254     		strb	r2, [r0, r3]
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5796              		.loc 1 602 0
 5797 0070 FFF7FEFF 		bl	HAL_UART_MspInit
 5798              	.LVL501:
 5799 0074 CDE7     		b	.L429
 5800              	.L434:
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccsKZFTZ.s 			page 182


 5801              		.loc 1 618 0
 5802 0076 2000     		movs	r0, r4
 5803 0078 FFF7FEFF 		bl	UART_AdvFeatureConfig
 5804              	.LVL502:
 5805 007c D8E7     		b	.L430
 5806              	.L435:
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 5807              		.loc 1 646 0
 5808 007e 2268     		ldr	r2, [r4]
 5809 0080 5368     		ldr	r3, [r2, #4]
 5810 0082 1B02     		lsls	r3, r3, #8
 5811 0084 1B0A     		lsrs	r3, r3, #8
 5812 0086 2D06     		lsls	r5, r5, #24
 5813 0088 1D43     		orrs	r5, r3
 5814 008a 5560     		str	r5, [r2, #4]
 5815 008c DEE7     		b	.L431
 5816              	.LVL503:
 5817              	.L432:
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 5818              		.loc 1 579 0
 5819 008e 0120     		movs	r0, #1
 5820              	.LVL504:
 5821 0090 EAE7     		b	.L428
 5822              	.L437:
 5823 0092 C046     		.align	2
 5824              	.L436:
 5825 0094 FFB7FFFF 		.word	-18433
 5826 0098 FFF7FFFF 		.word	-2049
 5827              		.cfi_endproc
 5828              	.LFE43:
 5830              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 5831              		.align	1
 5832              		.global	HAL_MultiProcessor_EnableMuteMode
 5833              		.syntax unified
 5834              		.code	16
 5835              		.thumb_func
 5836              		.fpu softvfp
 5838              	HAL_MultiProcessor_EnableMuteMode:
 5839              	.LFB74:
2666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 5840              		.loc 1 2666 0
 5841              		.cfi_startproc
 5842              		@ args = 0, pretend = 0, frame = 0
 5843              		@ frame_needed = 0, uses_anonymous_args = 0
 5844              	.LVL505:
 5845 0000 10B5     		push	{r4, lr}
 5846              	.LCFI46:
 5847              		.cfi_def_cfa_offset 8
 5848              		.cfi_offset 4, -8
 5849              		.cfi_offset 14, -4
2667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5850              		.loc 1 2667 0
 5851 0002 7023     		movs	r3, #112
 5852 0004 C35C     		ldrb	r3, [r0, r3]
 5853 0006 012B     		cmp	r3, #1
 5854 0008 01D1     		bne	.L441
 5855 000a 0220     		movs	r0, #2
ARM GAS  /tmp/ccsKZFTZ.s 			page 183


 5856              	.LVL506:
 5857              	.L439:
2677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5858              		.loc 1 2677 0
 5859              		@ sp needed
 5860 000c 10BD     		pop	{r4, pc}
 5861              	.LVL507:
 5862              	.L441:
2667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5863              		.loc 1 2667 0 discriminator 2
 5864 000e 0122     		movs	r2, #1
 5865 0010 7023     		movs	r3, #112
 5866 0012 C254     		strb	r2, [r0, r3]
2669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5867              		.loc 1 2669 0 discriminator 2
 5868 0014 4C3B     		subs	r3, r3, #76
 5869 0016 4367     		str	r3, [r0, #116]
2672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5870              		.loc 1 2672 0 discriminator 2
 5871 0018 0268     		ldr	r2, [r0]
 5872 001a 1168     		ldr	r1, [r2]
 5873 001c 8023     		movs	r3, #128
 5874 001e 9B01     		lsls	r3, r3, #6
 5875 0020 0B43     		orrs	r3, r1
 5876 0022 1360     		str	r3, [r2]
2674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5877              		.loc 1 2674 0 discriminator 2
 5878 0024 2023     		movs	r3, #32
 5879 0026 4367     		str	r3, [r0, #116]
2676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5880              		.loc 1 2676 0 discriminator 2
 5881 0028 FFF7FEFF 		bl	UART_CheckIdleState
 5882              	.LVL508:
 5883 002c EEE7     		b	.L439
 5884              		.cfi_endproc
 5885              	.LFE74:
 5887              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 5888              		.align	1
 5889              		.global	HAL_MultiProcessor_DisableMuteMode
 5890              		.syntax unified
 5891              		.code	16
 5892              		.thumb_func
 5893              		.fpu softvfp
 5895              	HAL_MultiProcessor_DisableMuteMode:
 5896              	.LFB75:
2686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 5897              		.loc 1 2686 0
 5898              		.cfi_startproc
 5899              		@ args = 0, pretend = 0, frame = 0
 5900              		@ frame_needed = 0, uses_anonymous_args = 0
 5901              	.LVL509:
 5902 0000 10B5     		push	{r4, lr}
 5903              	.LCFI47:
 5904              		.cfi_def_cfa_offset 8
 5905              		.cfi_offset 4, -8
 5906              		.cfi_offset 14, -4
2687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccsKZFTZ.s 			page 184


 5907              		.loc 1 2687 0
 5908 0002 7023     		movs	r3, #112
 5909 0004 C35C     		ldrb	r3, [r0, r3]
 5910 0006 012B     		cmp	r3, #1
 5911 0008 01D1     		bne	.L445
 5912 000a 0220     		movs	r0, #2
 5913              	.LVL510:
 5914              	.L443:
2697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5915              		.loc 1 2697 0
 5916              		@ sp needed
 5917 000c 10BD     		pop	{r4, pc}
 5918              	.LVL511:
 5919              	.L445:
2687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5920              		.loc 1 2687 0 discriminator 2
 5921 000e 0122     		movs	r2, #1
 5922 0010 7023     		movs	r3, #112
 5923 0012 C254     		strb	r2, [r0, r3]
2689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5924              		.loc 1 2689 0 discriminator 2
 5925 0014 4C3B     		subs	r3, r3, #76
 5926 0016 4367     		str	r3, [r0, #116]
2692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5927              		.loc 1 2692 0 discriminator 2
 5928 0018 0268     		ldr	r2, [r0]
 5929 001a 1368     		ldr	r3, [r2]
 5930 001c 0349     		ldr	r1, .L446
 5931 001e 0B40     		ands	r3, r1
 5932 0020 1360     		str	r3, [r2]
2694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5933              		.loc 1 2694 0 discriminator 2
 5934 0022 2023     		movs	r3, #32
 5935 0024 4367     		str	r3, [r0, #116]
2696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5936              		.loc 1 2696 0 discriminator 2
 5937 0026 FFF7FEFF 		bl	UART_CheckIdleState
 5938              	.LVL512:
 5939 002a EFE7     		b	.L443
 5940              	.L447:
 5941              		.align	2
 5942              	.L446:
 5943 002c FFDFFFFF 		.word	-8193
 5944              		.cfi_endproc
 5945              	.LFE75:
 5947              		.text
 5948              	.Letext0:
 5949              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 5950              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 5951              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 5952              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f091xc.h"
 5953              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 5954              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 5955              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 5956              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 5957              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 5958              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
ARM GAS  /tmp/ccsKZFTZ.s 			page 185


 5959              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart_ex.h"
ARM GAS  /tmp/ccsKZFTZ.s 			page 186


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_uart.c
     /tmp/ccsKZFTZ.s:16     .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/ccsKZFTZ.s:22     .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/ccsKZFTZ.s:47     .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccsKZFTZ.s:53     .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccsKZFTZ.s:86     .text.UART_EndRxTransfer:0000000000000020 $d
     /tmp/ccsKZFTZ.s:91     .text.UART_TxISR_8BIT:0000000000000000 $t
     /tmp/ccsKZFTZ.s:97     .text.UART_TxISR_8BIT:0000000000000000 UART_TxISR_8BIT
     /tmp/ccsKZFTZ.s:155    .text.UART_TxISR_16BIT:0000000000000000 $t
     /tmp/ccsKZFTZ.s:161    .text.UART_TxISR_16BIT:0000000000000000 UART_TxISR_16BIT
     /tmp/ccsKZFTZ.s:223    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccsKZFTZ.s:230    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccsKZFTZ.s:245    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccsKZFTZ.s:252    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccsKZFTZ.s:267    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccsKZFTZ.s:274    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccsKZFTZ.s:339    .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccsKZFTZ.s:346    .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccsKZFTZ.s:481    .text.HAL_UART_Transmit_IT:0000000000000088 $d
     /tmp/ccsKZFTZ.s:487    .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccsKZFTZ.s:494    .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccsKZFTZ.s:703    .text.HAL_UART_Receive_IT:00000000000000f0 $d
     /tmp/ccsKZFTZ.s:1924   .text.UART_RxISR_8BIT:0000000000000000 UART_RxISR_8BIT
     /tmp/ccsKZFTZ.s:2022   .text.UART_RxISR_16BIT:0000000000000000 UART_RxISR_16BIT
     /tmp/ccsKZFTZ.s:710    .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccsKZFTZ.s:717    .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccsKZFTZ.s:873    .text.HAL_UART_Transmit_DMA:00000000000000b8 $d
     /tmp/ccsKZFTZ.s:1749   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccsKZFTZ.s:1871   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccsKZFTZ.s:2263   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccsKZFTZ.s:880    .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccsKZFTZ.s:887    .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccsKZFTZ.s:1047   .text.HAL_UART_Receive_DMA:00000000000000c0 $d
     /tmp/ccsKZFTZ.s:2120   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccsKZFTZ.s:2210   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccsKZFTZ.s:1054   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccsKZFTZ.s:1061   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccsKZFTZ.s:1158   .text.HAL_UART_DMAPause:0000000000000064 $d
     /tmp/ccsKZFTZ.s:1163   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccsKZFTZ.s:1170   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccsKZFTZ.s:1251   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccsKZFTZ.s:1258   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccsKZFTZ.s:1386   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccsKZFTZ.s:1393   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccsKZFTZ.s:1529   .text.HAL_UART_Abort:00000000000000ac $d
     /tmp/ccsKZFTZ.s:1534   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccsKZFTZ.s:1541   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/ccsKZFTZ.s:1617   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccsKZFTZ.s:1624   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccsKZFTZ.s:1716   .text.HAL_UART_AbortReceive:0000000000000070 $d
     /tmp/ccsKZFTZ.s:1721   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccsKZFTZ.s:1728   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccsKZFTZ.s:1743   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccsKZFTZ.s:1803   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccsKZFTZ.s:1809   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccsKZFTZ.s:1843   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
ARM GAS  /tmp/ccsKZFTZ.s 			page 187


     /tmp/ccsKZFTZ.s:1850   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccsKZFTZ.s:1865   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccsKZFTZ.s:1896   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccsKZFTZ.s:1903   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccsKZFTZ.s:1918   .text.UART_RxISR_8BIT:0000000000000000 $t
     /tmp/ccsKZFTZ.s:2011   .text.UART_RxISR_8BIT:0000000000000060 $d
     /tmp/ccsKZFTZ.s:2016   .text.UART_RxISR_16BIT:0000000000000000 $t
     /tmp/ccsKZFTZ.s:2109   .text.UART_RxISR_16BIT:0000000000000060 $d
     /tmp/ccsKZFTZ.s:2114   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccsKZFTZ.s:2177   .text.UART_DMAReceiveCplt:000000000000003c $d
     /tmp/ccsKZFTZ.s:2182   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccsKZFTZ.s:2189   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccsKZFTZ.s:2204   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccsKZFTZ.s:2235   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccsKZFTZ.s:2242   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccsKZFTZ.s:2257   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccsKZFTZ.s:2346   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccsKZFTZ.s:2353   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccsKZFTZ.s:2659   .text.HAL_UART_IRQHandler:000000000000015c $d
     /tmp/ccsKZFTZ.s:2671   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccsKZFTZ.s:2665   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccsKZFTZ.s:2703   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccsKZFTZ.s:2710   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccsKZFTZ.s:2725   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccsKZFTZ.s:2732   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccsKZFTZ.s:2923   .text.HAL_UART_Abort_IT:00000000000000dc $d
     /tmp/ccsKZFTZ.s:3008   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccsKZFTZ.s:2936   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/ccsKZFTZ.s:2930   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccsKZFTZ.s:3002   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccsKZFTZ.s:3068   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccsKZFTZ.s:3075   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccsKZFTZ.s:3090   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccsKZFTZ.s:3097   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccsKZFTZ.s:3187   .text.HAL_UART_AbortTransmit_IT:0000000000000064 $d
     /tmp/ccsKZFTZ.s:3198   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccsKZFTZ.s:3192   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccsKZFTZ.s:3230   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccsKZFTZ.s:3237   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccsKZFTZ.s:3252   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccsKZFTZ.s:3259   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccsKZFTZ.s:3369   .text.HAL_UART_AbortReceive_IT:0000000000000084 $d
     /tmp/ccsKZFTZ.s:3381   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccsKZFTZ.s:3375   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccsKZFTZ.s:3423   .text.HAL_UART_ReceiverTimeout_Config:0000000000000000 $t
     /tmp/ccsKZFTZ.s:3430   .text.HAL_UART_ReceiverTimeout_Config:0000000000000000 HAL_UART_ReceiverTimeout_Config
     /tmp/ccsKZFTZ.s:3453   .text.HAL_UART_EnableReceiverTimeout:0000000000000000 $t
     /tmp/ccsKZFTZ.s:3460   .text.HAL_UART_EnableReceiverTimeout:0000000000000000 HAL_UART_EnableReceiverTimeout
     /tmp/ccsKZFTZ.s:3524   .text.HAL_UART_DisableReceiverTimeout:0000000000000000 $t
     /tmp/ccsKZFTZ.s:3531   .text.HAL_UART_DisableReceiverTimeout:0000000000000000 HAL_UART_DisableReceiverTimeout
     /tmp/ccsKZFTZ.s:3593   .text.HAL_UART_DisableReceiverTimeout:0000000000000038 $d
     /tmp/ccsKZFTZ.s:3598   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccsKZFTZ.s:3605   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccsKZFTZ.s:3626   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccsKZFTZ.s:3633   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccsKZFTZ.s:3692   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccsKZFTZ.s:3699   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
ARM GAS  /tmp/ccsKZFTZ.s 			page 188


     /tmp/ccsKZFTZ.s:3758   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccsKZFTZ.s:3765   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccsKZFTZ.s:3818   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccsKZFTZ.s:3825   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccsKZFTZ.s:3849   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccsKZFTZ.s:3856   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccsKZFTZ.s:3875   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccsKZFTZ.s:3882   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccsKZFTZ.s:4391   .text.UART_SetConfig:0000000000000270 $d
     /tmp/ccsKZFTZ.s:4410   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/ccsKZFTZ.s:4417   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/ccsKZFTZ.s:4551   .text.UART_AdvFeatureConfig:00000000000000bc $d
     /tmp/ccsKZFTZ.s:4564   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccsKZFTZ.s:4571   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccsKZFTZ.s:4706   .text.UART_WaitOnFlagUntilTimeout:00000000000000a0 $d
     /tmp/ccsKZFTZ.s:4711   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccsKZFTZ.s:4718   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccsKZFTZ.s:4930   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccsKZFTZ.s:4937   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccsKZFTZ.s:5223   .text.HAL_UART_Receive:0000000000000150 $d
     /tmp/ccsKZFTZ.s:5228   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccsKZFTZ.s:5235   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccsKZFTZ.s:5328   .text.UART_CheckIdleState:0000000000000068 $d
     /tmp/ccsKZFTZ.s:5333   .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccsKZFTZ.s:5340   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccsKZFTZ.s:5433   .text.HAL_UART_Init:0000000000000068 $d
     /tmp/ccsKZFTZ.s:5438   .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccsKZFTZ.s:5445   .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccsKZFTZ.s:5544   .text.HAL_HalfDuplex_Init:0000000000000074 $d
     /tmp/ccsKZFTZ.s:5549   .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccsKZFTZ.s:5556   .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccsKZFTZ.s:5690   .text.HAL_LIN_Init:000000000000009c $d
     /tmp/ccsKZFTZ.s:5695   .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccsKZFTZ.s:5702   .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccsKZFTZ.s:5825   .text.HAL_MultiProcessor_Init:0000000000000094 $d
     /tmp/ccsKZFTZ.s:5831   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/ccsKZFTZ.s:5838   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccsKZFTZ.s:5888   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/ccsKZFTZ.s:5895   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/ccsKZFTZ.s:5943   .text.HAL_MultiProcessor_DisableMuteMode:000000000000002c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
__aeabi_uidiv
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_GetTick
